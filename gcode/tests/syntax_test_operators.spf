; SYNTAX TEST "s840d_gcode.sublime-syntax"

; ==================================================
;  ASSIGNMENT tests
;  Performance: 1.2ms
; ==================================================

; constant value assignment
_RESULT=10
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^ constant.numeric
_RESULT=10EX3
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^^^^ constant.numeric
_RESULT=10.
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^^ constant.numeric
_RESULT=10.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^^^^ constant.numeric
_RESULT=+10.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT=.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^^ constant.numeric
_RESULT=+.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^ meta.number.float.decimal constant.numeric.value
_RESULT=+.50EX2
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT=-.50EX-2
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT=1EX300
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT=-1EX300
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT = 10.50
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ constant.numeric
;           ^ constant.numeric
;            ^ constant.numeric
_RESULT = +10
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ meta.number.integer.decimal keyword.operator.arithmetic
;          ^^ meta.number.integer.decimal constant.numeric.value
_RESULT = .50
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ constant.numeric
;          ^ constant.numeric
_RESULT=-10.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT=-.50
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ meta.number.float.decimal keyword.operator.arithmetic
;        ^^^ meta.number.float.decimal constant.numeric.value
_RESULT = -10.50
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ meta.number.float.decimal keyword.operator.arithmetic
;          ^^^^^ meta.number.float.decimal constant.numeric.value
_RESULT = -.50
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ meta.number.float.decimal keyword.operator.arithmetic
;          ^^^ meta.number.float.decimal constant.numeric.value
_RESULT = 'B1102031'
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^^^^^^^^^^ meta.number.integer.binary
;         ^ punctuation.definition.numeric.begin
;          ^ constant.numeric.base
;           ^^^^^^^ constant.numeric.value
;              ^ invalid.illegal
;                ^ invalid.illegal
;                  ^ punctuation.definition.numeric.end
_RESULT = 'H0123456789ABCDEFGH'
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^^^^^^^^^^^^^^^^^^^^^ meta.number.integer.hexadecimal
;         ^ punctuation.definition.numeric.begin
;          ^ constant.numeric.base
;           ^^^^^^^^^^^^^^^^^^ constant.numeric.value
;                           ^^ invalid.illegal
;                             ^ punctuation.definition.numeric.end

; valid axis name assignment
_AXIS=X1
;  ^ variable.other
;    ^ keyword.operator.assignment
;     ^^ support.variable.axis
_AXIS = X1
;  ^ variable.other
;     ^ keyword.operator.assignment
;       ^^ support.variable.axis
; valid axis name assignment
_AXIS=XC
;  ^ variable.other
;    ^ keyword.operator.assignment
;     ^^ support.variable.axis
_AXIS = XC
;  ^ variable.other
;     ^ keyword.operator.assignment
;       ^^ support.variable.axis
_AXIS=AX1
;  ^ variable.other
;    ^ keyword.operator.assignment
;     ^^ support.variable.axis
_AXIS = AX1
;  ^ variable.other
;     ^ keyword.operator.assignment
;       ^^ support.variable.axis

; valid locale variable assignment
_RESULT=-_VALUE
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ keyword.operator.arithmetic
;        ^ variable.other
_RESULT = -_VALUE
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;          ^ variable.other
_RESULT = - _VALUE
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;           ^ variable.other

; valid nc variable assignment
_RESULT=-$AC_CTOL
;  ^ variable.other
;      ^ keyword.operator.assignment
;       ^ keyword.operator.arithmetic
;        ^^^^^^^^ support.variable.nck
_RESULT = -$AC_CTOL
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;          ^^^^^^^^ support.variable.nck
_RESULT = - $AC_CTOL
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;           ^^^^^^^^ support.variable.nck

; valid string chain assignment
_STR="String 1"<<"String 2"
;   ^ keyword.operator.assignment
;    ^ string.quoted.double
;              ^ keyword.operator.assignment
;                ^ string.quoted.double
_STR = "String 1" << "String 2"
;    ^ keyword.operator.assignment
;      ^ string.quoted.double
;                 ^ keyword.operator.assignment
;                    ^ string.quoted.double
_STR=<<$C_T<<"String 2"
;   ^ keyword.operator.assignment
;      ^ support.variable.nck
;          ^ keyword.operator.assignment
;            ^ string.quoted.double
_STR = << $C_T << "String 2"
;    ^ keyword.operator.assignment
;      ^ keyword.operator.assignment
;         ^ support.variable.nck
;              ^ keyword.operator.assignment
;                 ^ string.quoted.double
_STR=<<-$C_T<<"String 2"<< - -$C_M_PROG
;   ^ keyword.operator.assignment
;      ^ keyword.operator.arithmetic
;       ^ support.variable.nck
;           ^ keyword.operator.assignment
;             ^ string.quoted.double
;                          ^ keyword.operator.arithmetic
;                            ^ invalid.illegal
;                              ^ support.variable.nck
_STR = << -$C_T << - "String 2"
;    ^ keyword.operator.assignment
;      ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;          ^ support.variable.nck
;               ^ keyword.operator.assignment
;                  ^ invalid.illegal
;                    ^ string.quoted.double

; invalid string chain assignment
_STR=-"String 1"<<<<"String 2"
;   ^ keyword.operator.assignment
;    ^ invalid.illegal
;     ^ string.quoted.double
;               ^ keyword.operator.assignment
;                 ^ invalid.illegal
;                  ^ invalid.illegal
;                   ^ string.quoted.double
_STR = -"String 1" <<<< "String 2"
;    ^ keyword.operator.assignment
;      ^ invalid.illegal
;       ^ string.quoted.double
;                  ^ keyword.operator.assignment
;                    ^ invalid.illegal
;                     ^ invalid.illegal
;                       ^ string.quoted.double

; valid operators
_RESULT=10.5+20.1*5/10-20.5
;      ^ keyword.operator.assignment
;           ^ keyword.operator.arithmetic
;                ^ keyword.operator.arithmetic
;                  ^ keyword.operator.arithmetic
;                     ^ keyword.operator.arithmetic
_RESULT = 10.5 + 20.1 * 5 / 10 - 20.5
;       ^ keyword.operator.assignment
;              ^ keyword.operator.arithmetic
;                     ^ keyword.operator.arithmetic
;                         ^ keyword.operator.arithmetic
;                              ^ keyword.operator.arithmetic
_RESULT = (2340 DIV 10) MOD 5 + R4 * DATA
;  ^ variable.other
;       ^ keyword.operator.assignment
;          ^ constant.numeric
;               ^ keyword.operator.arithmetic
;                   ^ constant.numeric
;                       ^ keyword.operator.arithmetic
;                           ^ constant.numeric
;                               ^ support.variable.nck.r
;                                    ^ variable.other

; invalid double operators
_RESULT = 10.5 ++ 20.1 ** 5 // 10 -- 20.5
;       ^ keyword.operator.assignment
;              ^ keyword.operator.arithmetic
;               ^ invalid.illegal
;                      ^ keyword.operator.arithmetic
;                       ^ invalid.illegal
;                           ^ keyword.operator.arithmetic
;                            ^ invalid.illegal
;                                 ^ keyword.operator.arithmetic
;                                  ^ invalid.illegal
_RESULT = 10.5 + + 20.1 * * 5 / / 10 - - 20.5
;       ^ keyword.operator.assignment
;              ^ keyword.operator.arithmetic
;                ^ invalid.illegal
;                       ^ keyword.operator.arithmetic
;                         ^ invalid.illegal
;                             ^ keyword.operator.arithmetic
;                               ^ invalid.illegal
;                                    ^ keyword.operator.arithmetic
;                                      ^ invalid.illegal

; valid negative value aritmetic
_RESULT = 10 > -_DATA
;  ^ variable.other
;       ^ keyword.operator.assignment
;            ^ keyword.operator.relational
;              ^ constant.numeric
;               ^ variable.other
_RESULT = 10 == - _DATA - 4
;  ^ variable.other
;       ^ keyword.operator.assignment
;         ^ constant.numeric
;            ^ keyword.operator.relational
;               ^ keyword.operator.arithmetic
;                 ^ variable.other
;                       ^ keyword.operator.arithmetic
;                         ^ constant.numeric
_RESULT = (-10.5) + ( -20.1 ) * (- 5) / (-R4) - (-$AC_CTOL-4)
;       ^ keyword.operator.assignment
;          ^^^^^ meta.number.float.decimal
;          ^ keyword.operator.arithmetic
;                 ^ keyword.operator.arithmetic
;                     ^^^^^ meta.number.float.decimal
;                     ^ keyword.operator.arithmetic
;                             ^ keyword.operator.arithmetic
;                                ^ keyword.operator.arithmetic
;                                     ^ keyword.operator.arithmetic
;                                        ^ keyword.operator.arithmetic
;                                             ^ keyword.operator.arithmetic
;                                                ^ keyword.operator.arithmetic
;                                                         ^ keyword.operator.arithmetic
;                                                          ^ keyword.operator.arithmetic

; invalid negative value arithmetic
_RESULT = -10.5 + -20.1 * - 5 / -R4 - -($AC_CTOL-4)
;       ^ keyword.operator.assignment
;         ^ keyword.operator.arithmetic
;               ^ keyword.operator.arithmetic
;                 ^ invalid.illegal
;                       ^ keyword.operator.arithmetic
;                         ^ invalid.illegal
;                             ^ keyword.operator.arithmetic
;                               ^ invalid.illegal
;                                   ^ keyword.operator.arithmetic
;                                     ^ invalid.illegal
;                                               ^ keyword.operator.arithmetic
;                                                ^ constant.numeric

; invalid double literal operators
_RESULT = 'H10' B_AND B_OR NOT DATA
;  ^ variable.other
;       ^ keyword.operator.assignment
;          ^ constant.numeric
;               ^ keyword.operator.bitwise
;                     ^ invalid.illegal
;                          ^ keyword.operator.logical
;                              ^ variable.other

; valid frame chaining
$P_UIFR[1]=CTRANS(X,-37.8,Y,25.16):CROT(X,0,Y,0,Z,0)
;          ^ support.function
;                ^ punctuation.section.arguments.begin
;                 ^ support.variable.axis
;                  ^ punctuation.separator.comma
;                   ^^^^^ meta.number.float.decimal
;                   ^ keyword.operator.arithmetic
;                    ^^^^ constant.numeric.value
;                                ^ punctuation.section.arguments.end
;                                 ^ keyword.operator.assignment
;                                  ^ support.function

; first minus after opening bracket and comma is negative sign
ARRAY[-10 - 20, -20 + 30]
;     ^^^ meta.number.integer.decimal
;         ^ keyword.operator.arithmetic
;           ^^ meta.number.integer.decimal constant.numeric.value
;             ^ punctuation.separator.comma
;               ^^^ meta.number.integer.decimal
;                   ^ keyword.operator.arithmetic
;                     ^^ meta.number.integer.decimal constant.numeric.value
N10 R10=10.0+R1-2
;   ^^^ support.variable.nck.r
;            ^^ support.variable.nck.r
N10 RG1=10.0+RG50
;   ^^^ support.variable.nck.r
;            ^^^^ support.variable.nck.r
N10 $RG1=10.0-$RG2
;   ^^^^ support.variable.nck.r
;             ^^^^ support.variable.nck.r
N10 $R10=10.0-$R20
;   ^^^^ support.variable.nck.r
;             ^^^^ support.variable.nck.r
