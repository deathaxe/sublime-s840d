<?xml version="1.0" encoding="windows-1252"?>
<info>
<parameter number="10000" type="STRING" dim="1">
<name>AXCONF_MACHAX_NAME_TAB</name>
<brief>Maschinenachsname</brief>
<description>Liste der Maschinenachs-Bezeichner
In diesem MD wird der Name der Maschinenachse eingegeben.
Zusätzlich zu den fest definierten Maschinenachs-Bezeichnern "AX1", "AX2" ... können in diesem Datum anwenderdefinierte Bezeichner für die Maschinenachsen vergeben werden.
Die hier definierten Bezeichner können parallel zu den fest definierten für die Adressierung axialer Daten ( z.B. MD ) und maschinenachsbezogener NC-Funktionen ( Refp.fahren, axiales Messen, Fahren auf Festanschlag ) verwendet werden.

Sonderfälle:
- Der eingegebene Maschinenachsname darf nicht mit der Benennung und Zuordnung der Geometrieachsen (MD20060 $MC_AXCONF_GEOAX_NAME_TAB, MD20050 $MC_AXCONF_GEOAX_ASSIGN_TAB) und Kanalachsen (MD20080 $MC_AXCONF_CHANAX_NAME_TAB, MD20070 $MC_AXCONF_MACHAX_USED) kollidieren.

Der eingegebene Maschinenachsname darf sich nicht mit den
Namen für Eulerwinkel (MD10620 $MN_EULER_ANGLE_NAME_TAB)
Namen für bahnrelevante Orientierung (MD10624 $MN_ORIPATH_LIFT_VECTOR_TAB)
Namen für Normalenvektoren (MD10630 $MN_NORMAL_VECTOR_NAME_TAB)
Namen für Richtungsvektoren (MD10640 $MN_DIR_VECTOR_NAME_TAB)
Namen für Drehvektoren (MD10642 $MN_ROT_VECTOR_NAME_TAB)
Namen für Zwischenvektor-Komponente (MD10644 $MN_INTER_VECTOR_NAME_TAB)
Namen für Zwischenkreispunktkoordinaten bei CIP (MD10660 $MN_INTERMEDIATE_POINT_NAME_TAB)
Namen für Interpolationsparameter (MD10650 $MN_IPO_PARAM_NAME_TAB)
 überschneiden.

- Der eingegebene Maschinenachsname darf folgende reservierte Adressbuchstaben nicht annehmen:
D Werkzeugkorrektur     (D-Funktion)       E reserviert
F Vorschub              (F-Funktion)       G Wegbedingung
H Hilfsfunktion         (H-Funktion)       L Unterprogrammaufruf
M Zusatzfunktion        (M-Funktion)       N Nebensatz
P Unterprogrammdurchlaufzahl               R Rechenparameter
S Spindeldrehzahl       (S-Funktion)       T Werkzeug (T-Funktion)

Ebenfalls unzulässig sind Schlüsselworte (z.B. DEF, SPOS etc.) und vordefinierte Bezeichner (z.B. ASPLINE, SOFT).

Die Verwendung eines Achsbezeichners bestehend aus einem gültigen Adressbuchstaben (A, B, C, I, J, K, Q, U, V, W, X, Y, Z), gefolgt von einer optionalen numerischen Erweiterung (1-99) bietet gegenüber der Vergabe eines allgemeinen Bezeichners leichte Vorteile in der Satzwechselzeit.

Wird für eine Maschinenachse kein Bezeichner vergeben, so gilt der vordefinierte Name ("AXn" für die n-te Maschinenachse).

korrespondierend mit ....
	MD20060 $MC_AXCONF_GEOAX_NAME_TAB (Geometrieachsname im Kanal [GEOAchsnr.]
	MD20080 $MC_AXCONF_CHANAX_NAME_TAB (Kanalachsname im Kanal [Kanalachsnr.]
</description>
</parameter>
<parameter number="10002" type="STRING" dim="1">
<name>AXCONF_LOGIC_MACHAX_TAB</name>
<brief>Logisches NCK Maschinenachsabbild</brief>
<description>Liste der auf einer NCU verfügbaren Maschinenachsen. (Logisches NCK Maschinenachsabbild)

Das MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB schafft eine weitere Nck-Globale logische Schicht zwischen der Kanalachsschicht und den Maschinenachsen in einer NCU bzw. NCU-Verband. Diese Schicht wird "Logisches Nck Maschinenachsabbild" (engl.: Logic NckMachineAxImage Abkürzung: LAI ) genannt.

Nur über diese neue Zwischenschicht können Achsen zwischen verschiedenen NCUs zugeordnet werden!
Der Eintrag MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[ n] = NCj_AXi weist dem Achsindex "n" in der LAI die Maschinenachse i auf der NCU j zu.

Damit sind folgende Zuordnungen möglich:
1.	lokale Achsen (Vorbesetzung: AX1, AX2 ... AX31)
	Der Eintrag MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[n] = AX3 weist Achsindex n die lokale Achse AX3 zu. (Für n = 3 ist Vorbesetzung AX3 vorhanden. Damit besteht für   MD-Sätze für SW-Stände bis 4 Kompatibilität in SW-Stand 5).

2.	Link-Achsen (Achsen die physikalisch an einer anderen NCU angeschlossen sind). Der Eintrag MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[n] = NCj_AXi   weist Achsindex n die Achse AXi auf NCU j zu (Link-Achse).
Grenzen:
	n 	Maschinenachsadresse (der lokalen NCU)	1 ... 31
	j	NCU-Nummer	1 ... 16
	i	Maschinenachsadresse (der lokalen/fernen NCU)	1 ... 31

3.	Achscontainer, in denen wieder lokale oder Link-Achsen stehen. Der Eintrag MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[n] = CTr_SLs weist Achsindex n den Container r und Slot s zu.
Grenzen:
	n	Maschinenachsadresse (der lokalen NCU)	1 ... 31
	r	Container-Nummer	1 ... 16
	s	Slot-Nummer (Platz) im Container	1 ... 32

Die Kanalachsschicht wird über das verwandte MD20070 $MC_AXCONF_MACHAX_USED gebildet und zeigte nicht mehr (kleiner P5) direkt auf die Maschinenachsen sondern auf die neue LAI-Schicht.

MD20070 $MC_AXCONF_MACHAX_USED [k]=n ordnet in der Kanalachsschicht dem Achsindex "k" die LAI-Achs-Nummer "n" zu.

Mit der LAI-Achs-Nummer kann dann die Maschinenachse und der entsprechende NCK ermittelt werden.

Wenn mehrere NCUs durch MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB auf die selbe Maschinenachse im Cluster zeigen, muss durch das axiale MD30554 $MA_AXCONF_ASSIGN_MASTER_NCU festgelegt werden, welche NCU die Master-NCU bzw. die Sollwerte für den Lageregler nach dem Hochlaufen erzeugt.

Korrespondiert mit:
	MD12... $MN_AXCT_AXCONF_ASSIGN_TABi (Einträge in Containern i anlegen)
</description>
</parameter>
<parameter number="10010" type="DWORD" dim="1">
<name>ASSIGN_CHAN_TO_MODE_GROUP</name>
<brief>Kanal gültig in Betriebsartengruppe</brief>
<description>Mit diesem MD wird der Kanal einer BAG zugeordnet.
Eingabewert 1 =&gt; 1. BAG zugeordnet
Eingabewert 2 =&gt; 2. BAG zugeordnet
usw.
Ab SW-Stand 4 ist es zulässig, für einzelne Kanäle keine BAG-Nummer zuzuweisen.
Kanallücken, um einheitliche Konfiguration bauähnlicher Maschinen zu begünstigen, sind zulässig. Statt einer BAG-Nummer gleich oder größer 1 wird in diesem Fall für den Kanal die Nummer 0 zugewiesen. Der Kanal ist nicht aktiviert, wird jedoch in der Zählung der Kanäle wie ein aktiver behandelt.
z.B.
ASSIGN_CHAN_TO_MODE_GROUP[0] = 1
ASSIGN_CHAN_TO_MODE_GROUP[1] = 1
ASSIGN_CHAN_TO_MODE_GROUP[2] = 0   ; Lücke
ASSIGN_CHAN_TO_MODE_GROUP[3] = 1

Anwendungsbeispiel:
Gewünschten Kanal über HMI anwählen und bei MD10010 $MN_ASSIGN_CHAN_TO_MODE_GROUP = 1 eingeben.

Hinweis:
Dieses MD muss auch eingegeben werden, wenn nur eine Betriebsartengruppe vorhanden ist.
</description>
</parameter>
<parameter number="10050" type="DOUBLE" dim="0">
<name>SYSCLOCK_CYCLE_TIME</name>
<brief>Systemgrundtakt</brief>
<description>Grundtaktzeit der Systemsoftware

Die Einstellung der Taktzeiten zyklischer Tasks ( Lageregler/IPO ) erfolgt in Vielfachen dieses Grundtaktes.

Bei PROFIBUS/PROFINET:
Bei Systemen mit PROFIBUS-DP-Anschluss entspricht dieses MD der PROFIBUS-DP-Zykluszeit. Diese Zeit wird im Hochlauf aus dem Projektierfile (SDB-Typ-2000) gelesen und in das MD geschrieben.
Diese MD ist nur über das Projektierfile änderbar.

Hinweis:
Eine Verkleinerung dieses MDs kann eine automatische Korrektur
von MD10062 $MN_POSCTRL_CYCLE_DELAY
von MD10064 $MN_POSCTRL_CYCLE_DESVAL_DELAY
nach sich ziehen, die bei einer nachfolgenden Vergrößerung nicht wieder rückgängig gemacht wird!

Details:
	Der Grundtakt ist gerastert in Vielfachen von Einheiten des Taktes der Messwertabtastung. Beim Hochlauf des Systems erfolgt automatisch eine Rundung des eingegebenen Wertes auf ein Vielfaches dieser Rasterung.

Hinweis:
	Durch diskrete Teilerverhältnisse des Timers, kann sich aus dem eingegebenen Wert nach Power OFF/ON ein nicht ganzzahliger Wert ergeben.
z.B.:
Eintrag                        =0.005s
                               nach Power OFF/ON   =0.00499840
                     oder
Eintrag                        =0.006s
                               nach Power OFF/ON   =0.0060032
</description>
</parameter>
<parameter number="10059" type="BYTE" dim="0">
<name>PROFIBUS_ALARM_MARKER</name>
<brief>PROFIBUS/PROFINET-Alarm-Merker (nur intern)</brief>
<description>PROFIBUS/PROFINET-Alarm-Merker:
In diesem Maschinendatum werden über einen Reboot hinweg Alarmanforderungen der PROFIBUS/PROFINET-Schicht gespeichert.
Wenn im Hochlauf ein Konflikt zwischen den Maschinendaten 10050, 10060, 10070 und den Daten im SDB gefunden wird, werden die Maschinendaten entsprechend dem SDB angepasst und beim nächsten Hochlauf ein entsprechender Alarm abgesetzt. Diese Alarmanforderungen werden hier abgelegt.

Korrespondiert mit:
	MD10050 $MN_SYSCLOCK_CYCLE_TIME,
</description>
</parameter>
<parameter number="10060" type="DWORD" dim="0" readonly="true">
<name>POSCTRL_SYSCLOCK_TIME_RATIO</name>
<brief>Faktor für Lageregeltakt</brief>
<description>Die Angabe des Lageregeltaktes erfolgt in Vielfachen von Zeiteinheiten des Systemgrundtaktes MD10050 $MN_SYSCLOCK_CYCLE_TIME.

Bei PROFIBUS/PROFINET:
Bei Systemen mit PROFIBUS-DP-Anschluss repräsentiert dieses MD das Verhältnis von PROFIBUS-DP-Takt und Lagereglertakt, das sich aufgrund der Projektierung der PLC ergibt.
</description>
</parameter>
<parameter number="10061" type="DOUBLE" dim="0" readonly="true">
<name>POSCTRL_CYCLE_TIME</name>
<brief>Lageregeltakt</brief>
<description>Lageregler-Taktzeit:
Anzeige der Lageregler-Taktzeit
</description>
</parameter>
<parameter number="10062" type="DOUBLE" dim="0">
<name>POSCTRL_CYCLE_DELAY</name>
<brief>Lageregeltakt-Verschiebung</brief>
<description>Nur bei PROFIdrive:
Relevant nur bei Betrieb mit PROFIBUS-Antrieben.
Verschiebung des Lagereglerstarts gegenüber dem PROFIBUS-DP-Takt.
Verschiebungen, die größer als der eingestellte DP-Takt sind oder kleiner als das maximale Tdx, werden automatisch auf einen Ersatzwert vom halben DP-Takt korrigiert.

MD10062 $MN_POSCTRL_CYCLE_DELAY &gt; 0:	Vorgabe der Lagereglerverschiebung
MD10062 $MN_POSCTRL_CYCLE_DELAY = 0:	Automatische Ermittlung der Lagereglerverschiebung anhand von max. Tdx aus STEP7-Projekt

Das Tdx_max wird über alle äquidistanten Busse ermittelt.
Der tatsächlich wirksame Verschiebewert wird im MD10063[1] $MN_POSCTRL_CYCLE_DIAGNOSIS angezeigt.

Hinweis:
	Bei MD10062 $MN_POSCTRL_CYCLE_DELAY &gt; 0 kann eine Verkleinerung von MD10050 $MN_SYSCLOCK_CYCLE_TIME zur automatischen Korrektur dieses MDs führen, die bei einer nachfolgenden Vergrößerung nicht wieder rückgängig gemacht wird!

Empfehlung:
	In diesem Fall den vorherigen Wert bzw. Standardwert wieder einstellen.
</description>
</parameter>
<parameter number="10063" type="DOUBLE" dim="1" readonly="true">
<name>POSCTRL_CYCLE_DIAGNOSIS</name>
<brief>Wirksames Timing</brief>
<description>Diagnosedaten bezogen auf den PROFIBUS/PROFINET-Takt.
[0]: Spätester Zeitpunkt zu dem die Istwerte vorliegen sollten (Tdx)
[1]: Tatsächlich wirksame Lagereglertaktverschiebung (Tm)
[2]: Spätester Zeitpunkt zu dem die Sollwerte vom Lageregler ausgegeben wurden
[3]: Zeitpunkt, zu dem bei SOC basierenden Baugruppen die Sollwertübertragung per DMA zum Antrieb begonnen wurde
[4]: Zeitpunkt, zu dem bei SOC basierenden Baugruppen die Sollwertübertragung per DMA zum Antrieb beendet wurde
[5]: 'Worst case' Zeitpunkt seit Spannungsein, zu dem bei SOC basierenden Baugruppen die Sollwertübertragung per DMA zum Antrieb beendet wurde
Diagnosedaten werden mit jedem NCK-Hochlauf mit NULL initialisiert
</description>
</parameter>
<parameter number="10064" type="DOUBLE" dim="0">
<name>POSCTRL_CYCLE_DESVAL_DELAY</name>
<brief>Takt-Verschiebung des DMAs für die Sollwerte</brief>
<description>Nur bei SINAMICS-Integrated:
Relevant nur bei Betrieb mit SINAMICS-Integrated Antrieben auf SOC-Baugruppen.
Verschiebung der Ausgabe der Sollwerte per DMA gegenüber dem PROFIBUS-DP-Takt.
Ändern von MD10064 POSCTRL_CYCLE_DESVAL_DELAY erfordert einen Warmstart von NCK und Antrieb.
Verschiebungen, die größer als der eingestellte DP-Takt sind werden automatisch auf einen Ersatzwert korrigiert.

MD10062 $MN_POSCTRL_CYCLE_DESVAL_DELAY &gt; 0:	Vorgabe der Sollwertverschiebung
MD10062 $MN_POSCTRL_CYCLE_DESVAL_DELAY = 0:	Automatische Ermittlung der  Sollwertverschiebung anhand der Transferraten der Hardware

Der tatsächlich wirksame Verschiebewert wird im MD10063 $MN_POSCTRL_CYCLE_DIAGNOSIS[4] angezeigt.

Hinweis:
	Bei MD10064 $MN_POSCTRL_CYCLE_DESVAL_DELAY &gt; 0 kann eine Verkleinerung von MD10050 $MN_SYSCLOCK_CYCLE_TIME zur automatischen Korrektur dieses MDs führen, die bei einer nachfolgenden Vergrößerung nicht wieder rückgängig gemacht wird!

Empfehlung:
	In diesem Fall den vorherigen Wert bzw. Standardwert wieder einstellen.
</description>
</parameter>
<parameter number="10070" type="DWORD" dim="0">
<name>IPO_SYSCLOCK_TIME_RATIO</name>
<brief>Faktor für Interpolatortakt</brief>
<description>Die Angabe des Interpolatortaktes erfolgt in Vielfachen von Zeiteinheiten des Systemgrundtaktes MD10050 $MN_SYSCLOCK_CYCLE_TIME.
Eingestellt werden dürfen nur ganzzahlige Vielfache des Lageregeltaktes. Werte, die kein ganzzahliges Vielfaches des Lageregeltaktes darstellen, werden vor dem Wirksamwerden (nächster Hochlauf) automatisch auf das nächste ganzzahlige Vielfache eines Lageregeltaktes erhöht.
Dabei wird der Alarm 4110 "IPO-Takt auf [ ] ms geändert" ausgegeben.
</description>
</parameter>
<parameter number="10071" type="DOUBLE" dim="0" readonly="true">
<name>IPO_CYCLE_TIME</name>
<brief>Interpolatortakt</brief>
<description>Interpolationszeit
Anzeige der Interpolator-Taktzeit.
</description>
</parameter>
<parameter number="10072" type="DOUBLE" dim="0">
<name>COM_IPO_TIME_RATIO</name>
<brief>Teilungsverhältnis zwischen IPO- und Kommunikationstask</brief>
<description>Teilungsverhältnis zwischen IPO- und Kommunikationstask. Ein Wert von 2 bedeutet z.B., dass die Kommunikationstask nur in jedem zweiten IPO-Takt bearbeitet wird. Dadurch steht den anderen Tasks mehr Laufzeit zur Verfügung. Zu große Werte verlangsamen die Kommunikation zwischen HMI und NCK.

Bei Zahlenwerte kleiner als 1 wird der Ipotakt untersetzt. Der Wert wird so angepasst, dass nur Laufzeiten für die Kommunikationstask möglich sind, die ein mehrfaches der Lagereglerzeit sind. Für die Kommunikationstask ist eine Aufrufperiode von ungefähr 10 ms sinnvoll.
</description>
</parameter>
<parameter number="10073" type="UDWORD" dim="0" display="HEX">
<name>COM_IPO_STRATEGY</name>
<brief>Strategie zur Kommunikationsaktivierung</brief>
<description>Die Aufrufhäufigkeit der Kommunikationstasks ist durch das MD10072 $MN_COM_IPO_TIME_RATIO steuerbar.

Die Kommunikationstasks wird dabei zyklisch aktiviert. Das hat einige Vor- und Nachteile:

Vorteile:
- Es Kommunikationsverhalten von NCK ist bezüglich der Kommunikationstask deterministisch

Nachteile:
- Die Kommunikationstask kann zu Ebenenüberläufen führen
- Bei einem unbelasteten NCK System wird die Kommunikationsgeschwindigkeit durch das MD10072 $MN_COM_IPO_TIME_RATIO bestimmt. Da dieses Maschinendatum Poweron ist, kann es sich nicht den aktuellen Betriebszustand von NCK anpassen. Ein typisches Problem ist, dass ein Upload eines Teileprogramms bei einem nicht belasteten NCK sehr lange dauert. Der Flaschenhals ist dabei die Kommunikationstask, die nur in dem durch das Maschinendatum COM_IPO_TIME_RATIO festgelegten  Verhältnis drankommt.

Um die obigen Nachteile zu beseitigen, wurde dieses Maschinendatum eingeführt. Dadurch sind die Zeitpunkte, zu denen die Kommunikationssoftware aktiviert wird, steuerbar. Das Maschinendatum ist bitcodiert. Die Bits haben die folgende Bedeutung:

Bit 0:
	Die Kommunikationssoftware wird zyklisch gerechnet
Bit 1:
	Die Ebenenzeitüberlaufüberwachung für die zyklische Kommunikationstask wird ausgeschaltet. Dieses Bit macht nur Sinn, wenn Bit Null gesetzt ist. Implemtierungstechnisch wird die Task in einer nicht zyklischen Ebene gehängt, die höherprior ist wie die Präp-/Kommunikationsebene. Die Kommunikationstask macht nach jedem Durchlauf ein Delay um die durch  COM_IPO_TIME_RATIO spezifizierte Zeit.
Bit 2:
	Die Kommunikationssoftware wird am Anfang der Task, die die Domaindienste entgegen nimmt, gerechnet
Bit 3:
	Die Kommunikationssoftware wird am Ende der Task, die die Domaindienste entgegen nimmt, gerechnet
Bit 4:
	Die Kommunikationssoftware wird am Anfang der Task, die die Domaindienste entgegen nimmt, gerechnet, falls eine Upload PDU gekommen ist. Dieses Bit macht nur Sinn, wenn Bit 2 gesetzt ist.
Bit 5:
	Die Kommunikationssoftware wird am Ende der Task, die die Domaindienste entgegen nimmt, gerechnet, falls eine Upload PDU gekommen ist. Dieses Bit macht nur Sinn, wenn Bit 3 gesetzt ist.

Das Maschinendatum wirkt derzeit nur bei Systemen, in denen die Softbus Kommunikationssoftware drin ist. Die ist in P6 die 840Di mit MCI2 Software und die Solutionline Systeme für P7.

Der Defaultwert ist 0x0F bedeutet: Die COS wir vor und nach der Kommunikation gerechnet, um Latenzzeiten zu minimieren.
</description>
</parameter>
<parameter number="10074" type="DWORD" dim="0">
<name>PLC_IPO_TIME_RATIO</name>
<brief>Faktor der PLC-Task zum Hauptlauf.</brief>
<description>Teilungsverhältnis zwischen IPO- und PLC-Task.
Ein Wert von 2 bedeutet z.B., dass die PLC-Task nur in jedem zweiten IPO-Takt bearbeitet wird.  Die PLC-Zykluszeit beträgt damit 2 IPO-Zeiten. Dadurch steht den anderen Tasks mehr Laufzeit zur Verfügung.
Die PLC-Laufzeit darf diese PLC-Zykluszeit nicht überschreiten, sonst wird ein Alarm mit PLC-STOPP ausgelöst.
</description>
</parameter>
<parameter number="10075" type="DOUBLE" dim="0" readonly="true">
<name>PLC_CYCLE_TIME</name>
<brief>PLC-Zykluszeit</brief>
<description>Anzeige der PLC-Taktzeit (nicht modifizierbar, wird intern gebildet)
</description>
</parameter>
<parameter number="10088" type="DOUBLE" dim="0">
<name>REBOOT_DELAY_TIME</name>
<brief>Rebootverzögerung</brief>
<description>Der nach dem PI "_N_IBN_SS" folgende Reboot wird um die Zeit MD10088 $MN_REBOOT_DELAY_TIME verzögert.

Unmittelbar mit dem PI "_N_IBN_SS" wird der unterdrückbare NOREADY-Alarm 2900 augelöst.

Unterschreitet MD10088 $MN_REBOOT_DELAY_TIME die MD36620 $MA_SERVO_DISABLE_DELAY_TIME einer Achse, so wird die Achse während MD10088 $MN_REBOOT_DELAY_TIME gebremst und danach wird die Reglerfreigabe weggenommen, dh. die volle MD36620 $MA_SERVO_DISABLE_DELAY_TIME wird NICHT abgewartet.

Mit MD10088 $MN_REBOOT_DELAY_TIME = 0.0 wird der Alarm 2900 nicht aktiv und es erfolgt keine Reboot-Verzögerung.

Über die angegebene Verzögerungszeit hinaus wartet NCK bis der PI zum HMI quittiert werden konnte. Dabei kann es insgesamt zu bis zu 2 s Verzögerung kommen.
</description>
</parameter>
<parameter number="10100" type="DOUBLE" dim="0">
<name>PLC_CYCLIC_TIMEOUT</name>
<brief>Maximale PLC-Zykluszeit</brief>
<description>Zyklische PLC Überwachungszeit.
Dieses Maschinendatum legt die maximale Überwachungszeit fest, nach der die PLC ihr Lebenszeichen inkrementiert haben muss. Die Rasterung erfolgt intern in Interpolationstakten.
</description>
</parameter>
<parameter number="10110" type="DOUBLE" dim="0">
<name>PLC_CYCLE_TIME_AVERAGE</name>
<brief>Mittlere PLC-Quittierungszeit</brief>
<description>Zeitinformation für die CNC über die Zykluszeit des OB1, in der die Hilfsfunktionen garantiert quittiert werden.
Mit Hilfe des MDs kann man die Zustandsübergänge:
"Kanal läuft/ Kanal im RESET/ Kanal im Fail --&gt; Kanal unterbrochen" bei RESET für die PLC verzögern. Der NCK wartet bei der Ausgabe "Kanal unterbrochen" mindestens die im MD angegebene Zeit + 1 IPO-Takt.

Mit der Zeitangabe wird im Bahnsteuerbetrieb bei Hilfsfunktionsausgabe während der Bewegung der Bahnvorschub so gesteuert, dass die minimalste Verfahrzeit der Zeitinformation entspricht. Damit ist ein gleichmäßigerer Geschwindigkeitsverlauf möglich, der nicht durch Warten auf die PLC-Quittierung gestört wird. Die Rasterung intern erfolgt im Interpolationstakt.
Für die Hilfsfunktionsausgabe im Bahnsteuerbetrieb ist das MD noch für die Systeme FM357 und 802/802s relevant. Die anderen Systeme werden ab SW 5.1 direkt über die PLC parametriert.
</description>
</parameter>
<parameter number="10120" type="DOUBLE" dim="0">
<name>PLC_RUNNINGUP_TIMEOUT</name>
<brief>Überwachungszeit für PLC-Hochlauf</brief>
<description>Hochlauf-PLC-Überwachungszeit
Dieses Maschinendatum legt die maximale Überwachungszeit fest, nach der die PLC ihr erstes Lebenszeichen an die NCK melden muss. Damit wird im Hochlauf überwacht, ob die PLC richtig in den zyklischen Betrieb übergegangen ist. Meldet die PLC sich innerhalb dieser Zeit nicht, dann läuft die NC mit einer Alarmmeldung hoch, NC-READY wird nicht gesetzt. Die Rasterung erfolgt intern in Interpolationstakten.
</description>
</parameter>
<parameter number="10124" type="STRING" dim="0">
<name>EES_WRITE_SIM_WORKPATH</name>
<brief>Pfad für Umlenkung von WRITE/DELETE-Befehlen bei Simulation im EES-Betrieb</brief>
<description>Mit MD10124 $MN_EES_WRITE_WORKPATH wird ein Verzeichnis festgelegt, in welchem die dateiverändernden Befehle WRITE und DELETE ausgeführt werden, wenn sie absolut mit EES-Laufwerksnamen (EES: Execution from External Storage) programmiert werden und nicht das passive Filessystem bzw. den globalen Teileprogrammspeicher (GDIR) adressieren.

Einstellmöglichkeiten:
Leerstring:
Die Befehle werden mit dem programmierten Pfad ausgeführt. MD10124 $MN_EES_WRITE_WORKPATH ist damit ohne Wirkung.
(Default-Wert für alle NCK-Subysteme).

Unterverzeichnis im Werkstückverzeichnis des passiven Filesystems:
Beispiel: "/_N_WKS_DIR/_N_TMP_EES_WRITE_WPD":
Die dateiverändernden Befehle WRITE und DELETE werden in dieses Verzeichnis umgelenkt.
(Default-Wert für die Simulation mit SINUMERIK Operate).

Verzeichnis auf EES-Laufwerk:
Beispiel: "//DEV1:/Traces/TMP_EES_WRITE.WPD"
Für Testzwecke können die dateiverändernden Befehle WRITE und DELETE auch in ein Verzeichnis auf einem EES-Laufwerk umgelenkt werden.
</description>
</parameter>
<parameter number="10125" type="STRING" dim="0">
<name>EES_NC_NAME</name>
<brief>NCU-Name für die Generierung eindeutiger NC-Programmnamen im EES-Betrieb</brief>
<description>Mit MD10125 $MN_EES_NC_NAME kann der Anwender jeder NCU einen eindeutigen NCU-Namen vergeben. Dieser kann dann, analog zu $P_CHANNO, für die Generierung eindeutiger NC-Programmnamen im EES-Betrieb verwendet werden.
Beispiel: $MN_EES_NC_NAME="NC1"
DEF STRING[31] FILENAME
FILENAME = "MYFILE_" &lt;&lt; $MN_EES_NC_NAME  &lt;&lt; "_" &lt;&lt; $P_CHANNO  &lt;&lt; ".SPF"
Die Variable FILENAME bekommt dann im ersten Kanal auf NCU "NC1" den Wert "MYFILE_NC1_1.SPF"
Hintergrund:
Im EES-Betrieb kann sich der Teileprogrammspeicher auf einem Netzlaufwerk befinden, auf das mehrere NCUs zugreifen. Mit den Teileprogrammbefehlen WRITE und DELETE kann man damit Konflikte erzeugen, wenn keine eindeutigen Dateinamen verwendet werden. Mit MD10125 $MN_EES_NC_NAME wird die Generierung eindeutiger NC-Programmnamen im Anwenderprogramm unterstützt.
</description>
</parameter>
<parameter number="10127" type="STRING" dim="0">
<name>EES_MOUNT_FILE</name>
<brief>Pfad und Dateiname des Files mit den gemounteten Laufwerken</brief>
<description>Filename mit Pfadangabe, unter dem die Liste der gemounteten Laufwerke abgelegt wird.
</description>
</parameter>
<parameter number="10128" type="DOUBLE" dim="0">
<name>EES_MAX_MOUNT_TIME</name>
<brief>Maximale Zeit zum Mounten der Laufwerke</brief>
<description>Über MD10128 $MN_EES_MAX_MOUNT_TIME wird die maximale Wartezeit in Sekunden zum Mounten der Laufwerke projektiert.

$MN_EES_MAX_MOUNT_TIME &gt; 0:
Reicht die Zeit in Sekunden nicht aus, so werden die Laufwerke nicht erkannt und die Steuerung läuft mit Alarm 6694 "Laufwerke konnten nicht gemountet werden" hoch.

$MN_EES_MAX_MOUNT_TIME = 0:
Wenn die Laufwerke während des Steuerung-Hochlaufes nicht gemountet werden konnten, dann läuft die Steuerung ohne Alarm hoch. Die gemounteten Laufwerke werden dann der Steuerung bei jedem Teileprogramm-Start bekannt gemacht.

Voraussetzung: Die Funktion "Execution from External Storage" ist aktiv.
</description>
</parameter>
<parameter number="10130" type="DOUBLE" dim="0">
<name>TIME_LIMIT_NETTO_COM_TASK</name>
<brief>Laufzeitbegrenzung der Kommunikation zur HMI</brief>
<description>Netto-Laufzeitlimit der Kommunikations-Sub-Task
Der Vorlauf und die Kommunikationstask teilen sich die Restzeit, die von den zyklischen Tasks übrigbleibt. Von dieser Restzeit verwendet die Kommunikation den eingestellten Wert auf Kosten der Vorlaufzeit, d.h. die Netto-Satzwechselzeit erhöht sich um den eingestellten Wert. Das Datum dient der Optimierung der Satzwechselzeit bei der Funktion "Blockweises Nachladen von Teileprogrammen".
</description>
</parameter>
<parameter number="10131" type="BYTE" dim="0">
<name>SUPPRESS_SCREEN_REFRESH</name>
<brief>Verhalten der Bildaktualisierung bei Überlastung.</brief>
<description>Es gibt Teileprogramme, bei denen der Hauptlauf (HL) warten muss, bis der Vorlauf (VL) neue Sätze zur Verfügung stellt.
Vorlauf und Anzeige-Aktualisierung konkurrieren um die NC-Rechenzeit. Das MD definiert, wie sich die NC verhalten soll, wenn der Vorlauf zu langsam ist.

0:	Wenn der VL eines Kanals zu langsam ist, wird die Aktualisierung der Anzeige in allen Kanälen unterdrückt.
1:	Wenn der VL eines Kanals zu langsam ist, wird die Aktualisierung der Anzeige nur in den zeitkritischen Kanälen unterdrückt, um Rechenzeit für den Vorlauf zu gewinnen.
2:	Die Aktualisierung der Anzeige wird grundsätzlich nicht unterdrückt.
</description>
</parameter>
<parameter number="10132" type="DOUBLE" dim="0">
<name>MMC_CMD_TIMEOUT</name>
<brief>Überwachungszeit für HMI-Befehl im Teileprogramm</brief>
<description>Überwachungszeit in Sekunden, bis HMI ein Kommando aus dem Teileprogramm quittiert.

Folgende Zeiten werden überwacht:
- Bei HMI-Befehl ohne Quittung: Zeit vom Anstoß der Übertragung des Command-Strings bis zum erfolgreichen Absenden zur HMI.
- Bei HMI-Befehl mit synchroner und asynchroner Quittung Zeit vom Anstoß der Übertragung des Command-Strings bis zum Eintreffen der Annahme-Quittung von der HMI.
- Bei EXTCALL-Befehl und beim Abarbeiten von externen Laufwerken: Zeit vom Anstoß der Übertragung des Command-Strings bis zum erfolgreichen Absenden zur HMI.
</description>
</parameter>
<parameter number="10133" type="DOUBLE" dim="0">
<name>START_LOCK_TIMEOUT</name>
<brief>Überwachungszeit für kanalspezifische Startsperre und WRITE-Lock</brief>
<description> Das MD10133 $MN_START_LOCK_TIMEOUT wird in zwei Situationen ausgewertet:

1. Wird ein NC-Kanal bei gesetzter kanalspezifischer Startsperre (nicht programmspezifische Startsperre) in der Betriebsart AUTO gestartet (NC-Start-Taste) so wird der Start ausgeführt, wenn die Startsperre innerhalb der per MD10133 $MN_START_LOCK_TIMEOUT konfigurierten Wartezeit zurückgesetzt wird.

2. Soll im EES-Betrieb (Execution from External Storage) ein NC-Programm bearbeitet werden, für welches ein WRITE-Lock gesetzt wurde (z.B. durch den HMI-Editor), so wird nach Ablauf der per MD10133 $MN_START_LOCK_TIMEOUT konfigurierten Wartezeit die Bearbeitung mit Alarm 14007 angehalten.
</description>
</parameter>
<parameter number="10134" type="DWORD" dim="0">
<name>MM_NUM_MMC_UNITS</name>
<brief>Anzahl gleichzeitig möglicher HMI-Kommunikationspartner</brief>
<description>Anzahl gleichzeitig möglicher HMI-Kommunikationspartner, mit denen die NCU Daten austauschen kann.
Der Wert hat Einfluss darauf, wieviele Kommunikationsaufträge die NCK verwalten kann. Je größer der Wert ist, desto mehr HMIs können gleichzeitig an die NCK angeschlossen werdenn , ohne dass es zu Problemen bei der Kommunikation kommt.

Entsprechend der Eingabe in das Maschinendatum wird für diese Funktion DRAM in der NCU bereitgestellt. Es sind die Eingaben für das Ändern von Speicherbereichen zu beachten.
Die Einheit des MD10134 $MN_MM_NUM_MMC_UNITS ist eine "Ressourcen-Einheit".
Ein Standard-HMI benötigt 2 Ressourcen-Einheiten. OEM-Varianten können mehr oder weniger Ressourcen brauchen.

- Wird der Wert kleiner eingestellt (als es aufgrund der Anzahl der angeschlossenen HMIs nötig wäre,), ist dies nicht zwangsläufig problematisch. Bei gleichzeitig mehreren kommunikationsintensiven Bedienhandlungen (z.B. Programm laden) können sporadisch Aktionen nicht funktionieren: Alarm 5000 wird angezeigt. Die Bedienhandlung muss dann wiederholt werden.

- Wird der Wert größer eingestellt, wird mehr dynamischer Speicher als nötig belegt. Wenn der Speicher für andere Zwecke benötigt wird, sollte der Wert entsprechend verringert werden.

Literatur:       /FB/, S7,  "Speicherkonfiguration"
</description>
</parameter>
<parameter number="10136" type="DWORD" dim="0">
<name>DISPLAY_MODE_POSITION</name>
<brief>Anzeigemode für Istposition im WKS</brief>
<description>Gibt an wie, die Position und der Restweg im WKS dargestellt werden.
0:	Anzeige wie in SW-Stand 5 und älter
1:	Am Satzende ist die Istwertanzeige im Prinzip gleich dem programmierten Endpunkt, unabhängig davon, wo die Maschine tatsächlich steht (z.B. als Folge der Werkzeugradiuskorrektur). Der Restweg ist gleich dem tatsächlich zu verfahrenden Restweg. Daraus folgt, dass die angezeigte Istpostion gleich der anzuzeigenden Endposition minus dem Restweg sein muss, unabhängig von der tatsächlichen Maschinenposition. Werden die Satzendpunkte durch Fasen, Radien, Konturzüge, Splines oder WAB gegenüber dem NC-Programm verändert, so spiegeln sich diese Veränderungen in der Anzeige so wider, als ob sie programmiert wären. Das gilt nicht für Veränderungen als Folge von Werkzeugradiuskorrektur oder Überschleifen.
</description>
</parameter>
<parameter number="10140" type="DOUBLE" dim="0">
<name>TIME_LIMIT_NETTO_DRIVE_TASK</name>
<brief>Laufzeitlimit der Antriebs-Kommunikations-Sub-Task</brief>
<description>Netto-Laufzeitlimit der Antriebs-Kommunikations-Sub-Task
Der Vorlauf und die Kommunikationstasks (Antriebskommunikation und Domaindienst) teilen sich die Restzeit, die von den zyklischen Tasks übrigbleibt.
</description>
</parameter>
<parameter number="10150" type="DWORD" dim="0">
<name>PREP_DRIVE_TASK_CYCLE_RATIO</name>
<brief>Faktor für Antriebskommunikation</brief>
<description>Das Maschinendatum legt fest, mit welchem Teilungsverhältnis die Antriebskommunikationstask in der nichtzyklischen Zeitebene aktiviert wird. Dadurch lässt sich der Zeitanteil der Präparation an der nichtzyklischen Zeitebene vergrößern, was zu kleineren Satzwechselzeiten führt. Die Kommunikation zu den digitalen Antrieben wird dadurch insbesondere bei Programmverarbeitung verlangsamt.
</description>
</parameter>
<parameter number="10156" type="DWORD" dim="0">
<name>TASK_SLEEP_TIME</name>
<brief>Durchschnittliche Zeitabgabe pro Zyklus</brief>
<description>Nur für Simulationssysteme relevant
Die Einheit des Maschinendatums ist Mikrosekunden.
Ein Bearbeitungsdurchlauf bezeichnet im Simulationsumfeld eine Abarbeitung der Tasks Server, IPO und PREP, die nicht unterbrochen werden
Dieses Maschinendatum gibt nun die durchschnittliche Zeit an, welche an das Betriebssystem des Simulationshostsystems pro Bearbeitungsdurchlauf abgegeben wird.
Da es typischerweise im Betriebssystem des Simulationshostsystems nicht möglich ist Zeiten im Mikrosekundenbereich abzugeben, werden die Zeiten über mehrere Zyklen aufgerechnet und dann die vom Betriebsystem per Default eingestellte Zeit (typischerweise zwischen 10 - 15 Millisekunden) abgegeben. Es werden also mehrere Zyklen ohne Verzögerung abgearbeitet und zu einen späteren Zeitpunkt entsprechend mehr gewartet, damit im Durchschnitt die im MD eingestellte Zeit abgegeben wird. Mit dem Wert 0 wird die Zeitabgabe deaktiviert.
Z.B.: Stellt man für MD10156 $MN_TASK_SLEEP_TIME den Wert 50 (Mikrosekunden) ein und die vom Betriebssystem vorgegebene minimale Abgabezeit beträgt 10 Millisekunden (= 10000 Mikrosekunden), dann wird alle 200 Zyklen (10000/50) um 10 Millisekunden verzögert.
</description>
</parameter>
<parameter number="10157" type="DWORD" dim="0">
<name>RELEASE_PREP_CPU_POWER</name>
<brief>Rechenzeitabgabe der Präparationstask</brief>
<description>Die verschiedenen Werte bedeuten:
Wert 0: Um die Auslastung zu bestimmen, werden pro Kanal in jedem Zyklus der Präparationstask folgende Informationen gespeichert:
          * Es wird ein Satz von der Präparation an den Ipo-Buffer abgegeben.
          * Eine Funktion sammelt mehrere Sätze auf, um diese gemeinsam zu verarbeiten (Beispiel: Kompressor). Ausnahme ist Satzsuchlauf, bei dem die Satzaufsammlung ignoriert wird.
          * Zusätzlich wird der aktuelle, prozentuale Ipo-Puffer-Füllstand gespeichert.
          * Die Präparation ist mit einer Aufgabe beschäftigt, die keine Satzverarbeitung durchführt, aber noch weitere Präparationszyklen benötigt. Dazu gehören:
            * Satzsuchlauf
            * Kollisionsvermeidung
            * Stationsinitialisierung im Hochlauf
        Die Speicherung erfolgt für eine feste Anzahl von Präparationszyklen, aus denen dann zu Beginn jedes Präparationszyklus die Auslastung wie folgt berechnet wird:
          * Wurden in den letzten Präparationszyklen durchgängig Sätze verarbeitet (Sätze abgegeben und/oder aufgesammelt) und ist der IPO-Buffer nicht ausreichend befüllt, wird keine Rechenzeit abgegeben.
          * Wurden in den letzten Präparationszyklen durchgängig Sätze verarbeitet und ist der IPO-Buffer ausreichend befüllt, wird prinzipiell Rechenzeit abgegeben.
          * Ob der IPO-Buffer ausreichend oder nicht ausreichend befüllt ist, wird durch eine Dämpfung beeinflusst.
          * Wurden in den letzten Präparationszyklen nicht durchgängig Sätze verarbeitet, wird die Rechenzeit ebenfalls abgegeben.
        Das Maschinendatum MD10131 $MN_SUPPRESS_SCREEN_REFRESH beeinflusst die Wirkung der Rechenzeitabgabe direkt:
          * 0: Rechenzeitabgabe erfolgt nur, wenn alle Kanäle Rechenzeit abgeben können.
          * 1: Rechenzeitabgabe wird allein durch den ersten Kanal bestimmt.
          * 2: Rechenzeit wird immer jeden zweiten Prep-Zyklus abgegeben.
        Daneben gibt es ein fest eingestelltes Taktverhältnis, sodass auch bei einer Abgabemöglichkeit die Präparation mindestens zweimal drankommt, bevor Rechenzeit freiwillig abgegeben wird.

Wert 1: Es werden pro Kanal in jedem Zyklus der Präparationstask folgende Informationen gesammelt:
          * Es wird ein Satz von der Präparation an den Ipo-Buffer abgegeben.
          * Im zurückliegenden Zyklus der Präparationstask ist mindestens ein Satz verarbeitet worden (Satztransport).
          * Die Präparation ist mit einer Aufgabe beschäftigt, die keine Satzverarbeitung durchführt, aber noch weitere Präparationszyklen benötigt. Dazu gehören:
            * Satzsuchlauf
            * Kollisionsvermeidung
            * Stationsinitialisierung im Hochlauf
        Zu Beginn des Präparationszyklus wird der Lastzustand des vorhergehenden Zyklus ausgewertet:
          * Bei einkanaligen Steuerungen gilt: Ist mindestens eines der obigen Ereignisse eingetreten  wird die Rechenzeit nicht abgegeben.
          * Bei mehrkanaligen Steuerungen wird die Rechenzeit nur abgegeben, wenn jeder der Kanäle die Rechenzeit abgeben kann.
        Daneben gibt es ein fest eingestelltes Taktverhältnis, sodass auch bei einer Abgabemöglichkeit die Präparation mindestens zweimal drankommt, bevor Rechenzeit freiwillig abgegeben wird.
</description>
</parameter>
<parameter number="10158" type="UBYTE" dim="1">
<name>PREPJOB_PERF_REGULATOR</name>
<brief>funktionsspezifischer Leistungsregler in Prozent der einzelnen PraepJobs</brief>
<description>Die verschiedenen Array-Elemente bedeuten:
  MD10158 $MN_PREPJOB_PERF_REGULATOR[0]: Leistungsregler für Hardware-Überwachungen
  MD10158 $MN_PREPJOB_PERF_REGULATOR[1]: Leistungsregler für Freie-Raum-Berechnung (Kollisionsvermeidung)
  MD10158 $MN_PREPJOB_PERF_REGULATOR[2]: Leistungsregler für die parallelen Anteile von TopSurface
  MD10158 $MN_PREPJOB_PERF_REGULATOR[3]: Leistungsregler für AlarmJob (nur entwicklungsintern)
</description>
</parameter>
<parameter number="10160" type="DWORD" dim="0">
<name>PREP_COM_TASK_CYCLE_RATIO</name>
<brief>Faktor für HMI-Kommunikation</brief>
<description>Das Maschinendatum legt fest, mit welchem Teilungsverhältnis die Kommunikationstask in der nichtzyklischen Zeitebene aktiviert wird. Dadurch lässt sich der Zeitanteil der Präparation an der nichtzyklischen Zeitebene vergrößern, was zu kleineren Satzwechselzeiten führt. Die externe Kommunikation (Filetransfer) wird dadurch insbesondere bei Programmverarbeitung (blockweises Nachladen) verlangsamt.
</description>
</parameter>
<parameter number="10161" type="DWORD" dim="1">
<name>COM_CONFIGURATION</name>
<brief>Konfiguration der Kommunikation</brief>
<description> Die Werte 1-3 legen fest, wieviele PDUs max. in einem Durchlauf entgegengenommen werden.
 Der Wert 0 steht für unendlich, d.h. es werden alle anstehenden Aufträge sofort bearbeitet. Diese drei Werte sind PowerOn-wirksam.
1.	Wert: Max. Anzahl von Variablen-Auftrags-PDUs die pro Durchlauf bearbeitet werden
2.	Wert: Max. Anzahl von PI-Auftrags-PDUs die pro Durchlauf bearbeitet werden
3.	Wert: Max. Anzahl von Domain-Auftrags-PDUs die pro Durchlauf bearbeitet werden

 Die Werte 4-8 legen beim Optimierten Download die Kredit-Vergabe fest.

4.	Wert: Anzahl der PDUs, welche beim opt. Domain-Dienst bei Beginn-Quittung als Kredit vergeben wird (hier ist der Fileheader u. damit das File auf NCK noch unbekannt)
5.	Wert: Anzahl der PDUs, welche beim opt. Domain-Dienst standardmäßig angefordert werden, falls es keine explizite Speicherbegrenzung für den File gibt
6.	Wert: Anzahl der PDUs, die minimal bei der Daten-Anforderungs-Meldung angefordert werden. (Damit nicht ständig Daten-Anforderungs-Meldungen ausgegeben werden)
7.	Wert: Anzahl der PDUs, die maximal bei der Daten-Anforderungs-Meldung angefordert werden (Als Höchstwert darf hier 255 eingetragen werden, da mehr das Protokoll nicht hergibt!)
8.	Wert: Anzahl der PDUs, die insgesamt maximal ausstehen dürfen
</description>
</parameter>
<parameter number="10162" type="DOUBLE" dim="1">
<name>COM_TIMING</name>
<brief>Reaktionszeiten der Kommunikation.</brief>
<description>Die Werte legen fest, mit welcher Verzögerung die Kommunikationsdienste maximal die Aufträge bearbeiten sollten.
Es handelt sich um einen Wunschwert, der sich tatsächlich ergebende Wert hängt von der Belastung des Prozessors ab.
Ein niedriger Wert beschleunigt u.U. die Kommunikation, geht aber zu Lasten anderer Funktionen, wie z.B. der Suchlauf-Geschwindigkeit.
1. Wert: Variablen-Dienste
2. Wert: PI-Dienste
3. Wert: Domain-Dienste
</description>
</parameter>
<parameter number="10170" type="DWORD" dim="0">
<name>PREP_PLCBG_TASK_CYCLE_RATIO</name>
<brief>Faktor für Kommunikation mit SW-PLC2xx</brief>
<description>Das Maschinendatum legt fest, mit welchem Teilungsverhältnis die Hintergrundtask der Software-PLC2xx in der nichtzyklischen Zeitebene aktiviert wird.
Da diese Task möglichst oft (einmal in jedem PLC-Takt) laufen soll, sollte ein Verhältnis zur PREP-Task von 1:1 eingestellt werden. Wie oft sie tatsächlich aktiviert wird, ist abhängig von der Rechenzeitbelastung der zyklischen Tasks (SERVO, IPO, COM, PLC) und den Einstellungen für die anderen Subtasks (Verhältnis zur PREP, Nettolaufzeit) bzw. der Auslastung der nichtzyklischen Tasks PREP, EXCOM, DRIVE.
</description>
</parameter>
<parameter number="10171" type="DOUBLE" dim="0">
<name>TIME_LIMIT_NETTO_PLCBG_TASK</name>
<brief>Laufzeitbegrenzung der Kommunikation zur SW-PLC2xx</brief>
<description>Netto-Laufzeitlimit der Soft-PLC2xx-Hintergrund-Sub-Task
Das Maschinendatum bestimmt, wieviel Rechenzeit die Hintergrund-Task der SW-PLC2xx,
wenn sie aktiviert wurde,am Stück (unterbrochen durch die zyklischen Tasks und Linux)
mindestens bekommt.
Soweit die Task die Kontrolle nicht freiwillig abgibt (weil es nichts zu tun gibt),
verdrängt sie in dieser Zeit sowohl den Vorlauf als auch die anderen Subtasks.
Steht wenig Restrechenzeit zur Verfügung, können somit relativ große Zeiträume entstehen.
</description>
</parameter>
<parameter number="10172" type="DWORD" dim="0">
<name>PLCINT_POSCTRL_TIME_RATIO</name>
<brief>Teilungsverh. zwischen servosynch. Task der SW-PLC2xx und Servotask</brief>
<description>Synchron zur Servotask wird in einem Verhältnis eine zyklische Task der SW-PLC2xx gestartet, die die Servo-Ebene der PLC realisiert. Für eine schnelle Reaktion auf externe Ereignisse muss ein Verhältnis von 1 eingestellt werden.
</description>
</parameter>
<parameter number="10173" type="DOUBLE" dim="0">
<name>TIME_LIMIT_PLCINT_TASK</name>
<brief>Laufzeitbegrenzung der servosynch. Task der SW-PLC2xx</brief>
<description>Laufzeitlimit der servosynchronen Soft-PLC2xx-Interrupt-Task
Das Maschinendatum bestimmt, wieviel Rechenzeit die servosynchrone Task der SW-PLC2xx zur Abarbeitung des PLC-Anwenderprogramms in der PLC-Servo-Interrupt-Ebene am Stück höchstens bekommt.
</description>
</parameter>
<parameter number="10174" type="DOUBLE" dim="1" readonly="true">
<name>TIME_LIMIT_PLCINT_TASK_DIAG</name>
<brief>Laufzeiten der servosynch. Task der SW-PLC2xx bei Zeitüberlauf</brief>
<description>Diagnosedaten der Laufzeiten der servosynchronen Task der SW-PLC2xx bei Zeitüberlauf
[0]: aktuelle Laufzeit, die zu einem Zeitüberlauf geführt hat
[1]: bisher gemessene min. Laufzeit
[2]: bisher gemessene max. Laufzeit
Die Diagnosedaten werden bei jedem NCK-Hochlauf mit NULL initialisiert.
</description>
</parameter>
<parameter number="10175" type="DOUBLE" dim="0">
<name>PLC_TASK_RUNTIME_WARNING</name>
<brief>Vorwarngrenze zur Rechenzeitüberschreitung SW-PLC2xx</brief>
<description>Das Maschinendatum bestimmt die Zeitdauer für die Vorwarnung zur Rechenzeitüberschreitung der SW-PLC2xx in Sekunden. Nach Ablauf dieser Zeit generiert die SW-PLC2xx den Anzeige-Alarm 400026 "PLC-Zykluszeit hat Warnschwelle überschritten".
</description>
</parameter>
<parameter number="10176" type="DOUBLE" dim="0">
<name>PLC_TASK_RUNTIME_STOP</name>
<brief>Maximale Rechenzeit der SW-PLC2xx</brief>
<description>Das Maschinendatum bestimmt die Rechenzeit in Sekunden, die die zyklische Task der SW-PLC2xx zur Abarbeitung des PLC-Anwenderprogramms höchstens bekommt. Nach Ablauf dieser Zeit meldet die SW-PLC2xx den PLC-Stop-Alarm 400027 "Fehler PLC-Zykluszeit".
</description>
</parameter>
<parameter number="10185" type="DOUBLE" dim="0">
<name>NCK_PCOS_TIME_RATIO</name>
<brief>Rechenzeitanteil des NCK</brief>
<description>Das Maschinendatum legt fest, welchen Anteil an der Rechenzeit der NC-Kern im Gesamtsystem maximal bekommt. Die vom Anwender vorgegebene Aufteilung wird bestmöglich umgesetzt.
Bei der Umsetzung der Vorgabe berücksichtigt das System Grenzwerte für die absoluten Rechenzeitanteile, die nicht unter bzw. überschritten werden dürfen.
Anpassungen werden ohne Generierung eines Alarms durchgeführt.
</description>
</parameter>
<parameter number="10186" type="DOUBLE" dim="1">
<name>NCK_PCOS_TIME_RATIO_SIDEJOB</name>
<brief>Rechenzeitanteil des NCK auf Nebenkernen</brief>
<description>Das Maschinendatum legt fest, welchen Anteil an der Rechenzeit von zusätzlich dem NC-Kern zur Verfügung stehenden Nebencores der NC-Kern bekommt. Die vom Anwender vorgegebene Aufteilung wird bestmöglich umgesetzt.
Bei der Umsetzung der Vorgabe berücksichtigt das System Grenzwerte für die absoluten Rechenzeitanteile, die nicht unter bzw. überschritten werden dürfen. Weiter müssen entsprechende Nebencores auf der Baugruppe vorhanden sein
Anpassungen werden ohne Generierung eines Alarms durchgeführt.
</description>
</parameter>
<parameter number="10190" type="DOUBLE" dim="0">
<name>TOOL_CHANGE_TIME</name>
<brief>Werkzeugwechselzeit für Simulation</brief>
<description>Das Maschinendatum legt fest, wieviel Zeit für einen Werkzeugwechsel veranschlagt wird (nur bei Simulation relevant).
</description>
</parameter>
<parameter number="10192" type="DOUBLE" dim="0">
<name>GEAR_CHANGE_WAIT_TIME</name>
<brief>Getriebestufenwechsel-Wartezeit</brief>
<description>Äußere Ereignisse, die ein Reorganisieren auslösen, warten das Ende eines Getriebestufenwechsel ab. GEAR_CHANGE_WAIT_TIME bestimmt nun wie lange auf den Getriebestufenwechsel gewartet wird. Zeiteinheit in Sekunden.
Läuft diese Zeit ab, ohne dass der Getriebestufenwechsel beendet wurde, reagiert der NCK mit einem Alarm.

Folgende Ereignisse führen  unter anderen zum Reorganisieren:
Anwender-ASUP
Modewechsel
Restweglöschen
Achstausch
Anwender-Daten wirksam setzten
</description>
</parameter>
<parameter number="10200" type="DOUBLE" dim="0">
<name>INT_INCR_PER_MM</name>
<brief>Rechenfeinheit für Linearpositionen</brief>
<description>Mit diesem MD wird die Zahl der internen Inkremente pro Millimeter festgelegt.
Die Genauigkeit der Eingabe von Linear-Positionen wird auf Rechenfeinheit begrenzt, indem das Produkt des programmierten Wertes mit der Rechenfeinheit auf Ganzzahligkeit gerundet wird.
Um die ausgeführte Rundung leicht nachvollziehbar zu halten, ist es sinnvoll, für die Rechenfeinheit 10er-Potenzen zu verwenden.
</description>
</parameter>
<parameter number="10210" type="DOUBLE" dim="0">
<name>INT_INCR_PER_DEG</name>
<brief>Rechenfeinheit für Winkelpositionen</brief>
<description>Mit diesem MD wird die Zahl der internen Inkremente pro Grad festgelegt.
Die Genauigkeit der Eingabe von Winkel-Positionen wird auf die Rechenfeinheit begrenzt, indem das Produkt des programmierten Wertes mit der Rechenfeinheit auf Ganzzahligkeit gerundet wird.
Um die ausgeführte Rundung leicht nachvollziehbar zu halten, ist es sinnvoll, für die Rechenfeinheit 10er-Potenzen zu verwenden.
</description>
</parameter>
<parameter number="10220" type="UDWORD" dim="0" display="HEX">
<name>SCALING_USER_DEF_MASK</name>
<brief>Aktivierung der Normierungsfaktoren</brief>
<description>Bitmaske für die Auswahl der Bezugsgröße für die Daten (z. B. Maschinen- und Settingdaten), die eine physikalische Einheit besitzen, werden je nach Grundsystem (metrisch/inch) in den untenstehenden, voreingestellten Einheiten interpretiert. Sollen für einzelne physikalische Einheiten andere Ein-/Ausgabe-Einheiten verwendet werden, so werden mit diesem Maschinendatum die zugehörigen Normierungsfaktoren (eingetragen in MD10230 $MN_SCALING_FACTORS_USER_DEF[n]) aktiviert.
Die Programmierung von Geometrie- und Vorschub-Werten wird nicht beeinflusst.

Bit gesetzt:
Daten der zugeordneten physikalischen Größe (siehe Liste) werden auf die Einheit normiert, die durch das MD10230 $MN_SCALING_FACTORS_USER_DEF[n] festgelegt ist.

Bit nicht gesetzt:
Daten der zugeordneten physikalischen Größe werden auf die untenstehende voreingestellte Einheit normiert.
   zugeordnete phys. Größe       Voreingestellte Einheiten für:
                                 MD10240 $MN_SCALING_SYSTEM_IS_METRIC
Bit-Nr.                            1 = METRIC          0 = INCH
(Angabe als Hex-Wert)
0 Linear Position                    1 mm                1 inch
1 Winkel-Position                    1 Grad              1 Grad
2 Linear-Geschwindigkeit             1 mm/min            1 inch/min
3 Winkel-Geschwindigkeit             1 Umdr./min         1 Umdr./min
4 Linear-Beschleunigung              1 m/s²              1 inch/s²
5 Winkel-Beschleunigung              1 Umdr./s²          1 Umdr./s²
6 Linear-Ruck                        1 m/s³              1 inch/s³
7 Winkel-Ruck                        1 Umdr./s³          1 Umdr./s³
8 Zeit                               1 s                 1 s
9 Lageregler-Kreisverstärkung        1/s                 1/s
10 Umdrehungsvorschub                1 mm/Umdr.          1 inch/Umdr.
11 Kompensationswert Linear-Position 1 mm                1 Grad
12 Kompensationswert Winkel-Position 1 Grad              1 Grad
13 Schnittgeschwindigkeit             1 m/min             1 feet/min
Beispiel:
SCALING_USER_DEF_MASK =?H3?; (Bit-Nr. 0 und 1 als Hex-Wert)
Für Linear- und Winkel-Positionen wird der Normierungsfaktor aktiviert, der in den zugehörigen MD10230 $MN_SCALING_FACTORS_USER_DEF[n] angegeben ist.
Nach Änderung dieses Maschinendatums ist ein Hochlauf notwendig, da sonst zugehörige Maschinendaten, die physikalische Einheiten besitzen, falsch normiert werden.
Folgendes Vorgehen ist zu beachten:
- MD-Änderung durch Handeingabe
	Hochlauf durchführen und danach zugehörige Maschinendaten,mit physikalischen Einheiten, eingeben.
- MD-Änderung erfolgt über Maschinendatendatei
	Hochlauf durchführen und danach Maschinendatendatei noch einmal laden, damit die neuen physikalischen Einheiten berücksichtigtwerden.
Bei Änderung des Maschinendatums wird der Alarm 4070 "Normierendes Maschinendatum geändert" gemeldet.

Anwendungsbeispiel: Ein-/Ausgabe von Lineargeschwindigkeiten soll in cm/min erfolgen:
SCALING_USER_DEF_MASK = 0x4 (Bit Nr. 2 als Hex-Wert)
SCALING_FACTORS_USER_DEF[2] = 0.1666666667 (10/60)

Korrespondiert mit ....
	MD10230 $MN_SCALING_FACTORS_USER_DEF[n] (Normierungsfaktoren der physikalischen Größen)
</description>
</parameter>
<parameter number="10230" type="DOUBLE" dim="1">
<name>SCALING_FACTORS_USER_DEF</name>
<brief>Normierungsfaktoren der physikalischen Größen</brief>
<description>In das MD ist der Normierungsfaktor einer physikalischen Größe, deren Einheit von der voreingestellten Einheit abweicht, (gesetztes Bit im MD10220 $MN_SCALING_USER_DEF_MASK) einzutragen. Der Faktor ist in Bezug auf die intern verwendete Einheit der jeweiligen physikalischen Größe anzugeben.
Die Zuordnung des Normierungsfaktors zur physikalischen Größe erfolgt über den Index [0...12]. Nach Änderung dieses Maschinendatums ist ein Hochlauf notwendig, da sonst zugehörige Maschinendaten, die physikalische Einheiten besitzen, falsch normiert werden.

Folgendes Vorgehen ist zu beachten:
- MD-Änderung durch Handeingabe:
	Hochlauf durchführen und danach zugehörige Maschinendaten, mit physikalischen Einheiten, eingeben.
- MD-Änderung erfolgt über Maschinendatendatei:
	Hochlauf durchführen und danach Maschinendatendatei noch einmal laden, damit die neuen physikalischen Einheiten berücksichtigt werden.
Bei Änderung des Maschinendatums wird der Alarm 4070 "Normierendes Maschinendatum geändert" gemeldet.

Anwendungsbeispiel(e):
Ein-/Ausgabe von Winkelgeschwindigkeiten soll in Neugrad/min erfolgen: MD10220 $MN_SCALING_USER_DEF_MASK = 'H8'; (Bit-Nr. 3 als Hex-Wert) MD10230 $MN_SCALING_FACTORS_USER_DEF[3] = 0.01851852; (400/360/60)
[3]: Index für Winkelgeschwindigkeit.

Korrespondiert mit:
	MD10220 $MN_SCALING_USER_DEF_MASK (Aktivierung der Normierungsfaktoren)
</description>
</parameter>
<parameter number="10240" type="BOOLEAN" dim="0">
<name>SCALING_SYSTEM_IS_METRIC</name>
<brief>Grundsystem metrisch</brief>
<description>Das MD legt das von der Steuerung verwendete Grundsystem für die Skalierung längenabhängiger physikalischer Größen bei der Daten-Ein-/Ausgabe fest.
Intern werden alle entsprechenden Daten in den Grundeinheiten 1 mm, 1 Grad und 1 sec abgelegt.
Beim Zugriff vom Interpreter ( Teileprogramm und Download ), von der Bedientafel ( Variablen-Dienst ) oder durch externe Kommunikation erfolgt die Normierung in folgenden Einheiten:
MD10240 $MN_SCALING_SYSTEM_IS_METRIC = 1: normiert in:
mm, mm/min, m/s2, m/s3, mm/Umdr.
MD10240 $MN_SCALING_SYSTEM_IS_METRIC = 0: normiert in:
inch, inch/min, inch/s2, inch/s3, inch/Umdr.
Die Auswahl des Grundsystems legt auch die Interpretation des programmierten F-Wertes für Linearachsen fest:
                        metrisch                  inch
G94                mm/min                   inch/min
G95                mm/Umdr.               inch/Umdr.
Nach Änderung dieses Maschinendatums ist ein Hochlauf notwendig, da sonst zugehörige Maschinendaten, die physikalische Einheiten besitzen, falsch normiert werden.
Folgendes Vorgehen ist zu beachten:
- MD-Änderung durch Handeingabe:
Hochlauf durchführen und danach zugehörige Maschinendaten, mit physikalischen Einheiten, eingeben.
- MD-Änderung erfolgt über Maschinendatendatei:
Hochlauf durchführen und danach Maschinendatendatei noch einmal laden, damit die neuen physikalischen Einheiten berücksichtigt werden.
Bei Änderung des Maschinendatums wird der Alarm 4070 "Normierendes Maschinendatum geändert" gemeldet.

Anwendungsbeispiel(e):
Inbetriebnahme im metrischem System und danach Umstellung auf Inch-System.

Sonderfälle:
Der Faktor, der für die Wandlung von 1 mm in 1 inch verwendet wird, kann mit dem MD10250 $MN_SCALING_VALUE_INCH verändert werden.
</description>
</parameter>
<parameter number="10250" type="DOUBLE" dim="0">
<name>SCALING_VALUE_INCH</name>
<brief>Umrechnungsfaktor für INCH</brief>
<description>In das MD ist der Umrechnungsfaktor von Metrisch- auf Inch.
Dieser Faktor wirkt nur bei der Wahl des nicht-metrischen Grundsystems (MD10240 $MN_SCALING_SYSTEM_IS_METRIC = 0) in folgenden Umrechnungen:
- programmierte F-Werte für Linearachsen
- Ein-/Ausgabe von Längen und von längenabhängigen Daten (z.B. beim Upload von Maschinendaten, Nullpunktverschiebungen)
Die Umrechnung programmierter Geometrie-Achs-Positionen erfolgt über diesen Faktor, wenn das mit G70/G71 programmierte Maßsystem vom angewählten Grundsystem (SCAL-ING_ SYSTEM_IS_METRIC) abweicht.

Die Umrechnung programmierter Synchron-Achs-Positionen erfolgt über die entsprechenden axialen Faktoren (MD31200 $MA_SCALING_FAKTOR_G70_G71), wenn das mit G70/G71 programmierte Maßsystem vom angewählten Grundsystem (MD10240 $MN_SCALING_SYSTEM_IS_METRIC) abweicht. Von der Standardvorbesetzung 25,4 abweichende Einstellungen sollten nur in Ausnahmefällen vorgenommen werden, da die korrekte Anzeige der Einheit an der Bedienoberfläche diesen Wert voraussetzt.
Nach Änderung dieses Maschinendatums ist ein Hochlauf notwendig, da sonst zugehörige Maschinendaten, die physikalische Einheiten besitzen, falsch normiert werden.
Folgendes ist zu beachten:
- MD-Änderung durch Handeingabe
	--&gt; Hochlauf durchführen und danach zugehörige Maschinendaten, mit physikalischen Einheiten, eingeben.
- MD-Änderung erfolgt über Maschinendatendatei:
	--&gt; Hochlauf durchführen und danach Maschinendatendatei noch einmal laden, damit die neuen physikalischen Einheiten berücksichtigt werden.
Bei Änderung des Maschinendatums wird der Alarm 4070 "Normierendes Maschinendatum geändert" gemeldet.

Anwendungsbeispiel(e):
Dieser Umrechnungsfaktor wird verwendet, wenn nach der Inbetriebnahme das Maßsystem von Metrisch auf Inch oder ein kundenspezifisches Maßsystem umgeschaltet wird. Mit diesem Wert werden dann alle eingegebenen Maschinendaten u.ä. umgerechnet. Beim nächsten Auslesen bzw. an der Bedienoberfläche wird dann auch der umgerechnete Wert angegeben.

Korrespondiert mit:
	MD10240 $MN_SCALING_SYSTEM_IS_METRIC
</description>
</parameter>
<parameter number="10260" type="BOOLEAN" dim="0">
<name>CONVERT_SCALING_SYSTEM</name>
<brief>Grundsystem Umschaltung aktiv</brief>
<description>Legt die Handhabung von MD10240 $MN_SCALING_SYSTEM_IS_METRIC fest.

0:	Inch/Metrisch Verhalten konform zu SW1-SW4
1:	Inch/Metrisch Verhalten ab SW5

Inch/Metrisch Funktionalität SW5:
1.	Umschaltung der Maßsysteme mit HMI-Softkey
2.	Neue G-Codes G700/G710
3. 	Datensicherung mit Maßsystemkennung INCH/METRIC
4.	Automatische Datenumrechnungen beim Maßsystemwechsel
- sämtliche Nullpunktverschiebungen
- Kompensationsdaten (EEC, QEC)
- Werkzeugkorrekturen
- etc.
Die Änderung von MD10260 $MN_CONVERT_SCALING_SYSTEM führt zum Alarm 4070!
Mit dem Alarm soll angezeigt werden, dass Daten, die über ein POWERON hinaus aktiv bleiben, keine automatischen Umrechnung vom SW1-SW4 und SW5 Formaten unterzogen werden.
</description>
</parameter>
<parameter number="10270" type="BYTE" dim="0">
<name>POS_TAB_SCALING_SYSTEM</name>
<brief>Maßsystem der Positionstabellen</brief>
<description>Legt für folgende Maschinendaten
MD10910 $MN_INDEX_AX_POS_TAB_1
MD10930 $MN_INDEX_AX_POS_TAB_2
SD41500 $SN_SW_CAM_MINUS_POS_TAB_1
SD41501 $SN_SW_CAM_PLUS_POS_TAB_1
SD41502 $SN_SW_CAM_MINUS_POS_TAB_2
SD41503 $SN_SW_CAM_PLUS_POS_TAB_2
SD41504 $SN_SW_CAM_MINUS_POS_TAB_3
SD41505 $SN_SW_CAM_PLUS_POS_TAB_3
SD41506 $SN_SW_CAM_MINUS_POS_TAB_4
SD41507 $SN_SW_CAM_PLUS_POS_TAB_4
das Maßsystem der Positionsangaben fest.
0:	metrisch
1:	inch
Das Maschinendatum wird nur bei MD10260 $MN_CONVERT_SCALING_SYSTEM = 1 ausgewertet.

Korrespondiert mit:
MD10260 $MN_CONVERT_SCALING_SYSTEM
MD10910 $MN_INDEX_AX_POS_TAB_1
MD10930 $MN_INDEX_AX_POS_TAB_2
SD41500 $SN_SW_CAM_MINUS_POS_TAB_1
SD41501 $SN_SW_CAM_PLUS_POS_TAB_1
SD41502 $SN_SW_CAM_MINUS_POS_TAB_2
SD41503 $SN_SW_CAM_PLUS_POS_TAB_2
SD41504 $SN_SW_CAM_MINUS_POS_TAB_3
SD41505 $SN_SW_CAM_PLUS_POS_TAB_3
SD41506 $SN_SW_CAM_MINUS_POS_TAB_4
SD41507 $SN_SW_CAM_PLUS_POS_TAB_4
</description>
</parameter>
<parameter number="10280" type="UDWORD" dim="0" display="HEX">
<name>PROG_FUNCTION_MASK</name>
<brief>Bitmaske zur Parametrierung verschiedener Teilprogrammbefehle</brief>
<description>Bitmaske zur Parametrierung verschiedener Teilprogrammbefehle

Bit	Hexadez.	Bedeutung bei gesetztem Bit
	Wert

0:	0x1		Bearbeitung der Vergleichsbefehle "&gt;" und "&lt;" wie bei SINUMERIK 840D:
			Teilprogrammdaten vom Typ REAL werden intern im IEEE-Format von 64 Bit dargestellt. Diese Darstellungsform bringt es mit sich, dass Dezimalzahlen ungenau abgebildet werden, wenn die 52-Bit breite Mantisse dieses Formats nicht ausreicht, um die Zahl in Zweier-Potenzen darzustellen. Um diesem Problem zu begegnen, wird bei allen Vergleichsbefehlen ( ==, &lt;&gt;,&gt;=, &lt;=,&gt; und &lt; ) auf eine relative Gleichheit von 1E-12 geprüft.

			Durch Setzen von Bit 0 wird dieses Verfahren für die Vergleiche auf größer (&gt;) und kleiner ( &lt; ) ausgeschaltet. (Kompatibilitätsstellung zu SINUMERIK 840D)

1:	0x2		Programmieren der Kanalnamen aus dem MD20000 $MC_CHAN_NAME
			Mit dem Setzen von Bit1 kann der im MD20000 $MC_CHAN_NAME abgelegte Kanalname im Teileprogramm programmiert werden. So kann z. B. bei den Programmkoordinierungsbefehlen (START(), INIT(), WAIT() etc.) statt eines numerischen Wertes für die Kanalnummer auch der Kanalname programmiert werden.

2:	0x4		reserviert

3:	0x8		unzulässige ASCII-Zeichen in Blanks wandeln
			Mit dem Setzen von Bit3 wird das bisherige Verhalten bei der Interpretation eine Teileprogrammsatzes aktiviert. D. h. alle ungültigen ASCII-Zeichen in einem Teileprogrammsatz werden intern als Blank behandelt.

4:	0x10		Die Wartezeit G4 F&lt;Wartezeit&gt; wird gerundet als Vielfaches eines Ipo-Taktes ausgeführt.
			Damit dauert ein G4 F0.001 auch nur einen Takt, bei einem Ipo-Takt von 1 msec.
</description>
</parameter>
<parameter number="10284" type="UDWORD" dim="0" display="HEX">
<name>DISPLAY_FUNCTION_MASK</name>
<brief>Verhalten verschiedener Anzeige-Variablen</brief>
<description>Bitmaske zur Parametrierung verschiedener Anzeige-Variablen:

BitNr.   Hexadez.    Bedeutung bei gesetztem Bit
         Wert

Bit0:    0x1
	Die BTSS-Variable lastBlockNoStr im Baustein SPARP und SPARPP wird versorgt.
Bit1:    0x2
	Betrifft die BTSS-Variable cmdSpeed im Baustein SPARPP. Ist das Bit gesetzt, dann liefert die Variable die programmierte Drehzahl, auch wenn die Spindel steht oder sich diese in einer anderen Betriebsart (Positionierbetrieb, Achsbetrieb) befindet.
Bit2     0x4
	Betrifft die BTSS-Variable cmdSpeed im Baustein SPARPP. (reserviert für konstante Schnittgeschwindigkeit)
Bit8:    0x100
	Servo-Trace verwaltet intern größere Zahlenwerte. Überläufe im Datenformat werden vermieden. Bei großen Zahlenwerten kann es sein, dass die Genauigkeit reduziert ist.
</description>
</parameter>
<parameter number="10285" type="DOUBLE" dim="0">
<name>TASK_TIME_AVERAGE_CONFIG</name>
<brief>Zeitspanne für die Tasklaufzeiten-Mittelwertsbildung</brief>
<description>Zeitspanne über die jeweils der Mittelwert der Tasklaufzeiten gebildet wird in Sekunden.
Bei dem Wert 0 wird der aktuelle Istwert als Mittelwert geliefert.
Dieser Mittelwert ist über die BTSS-Variable aveCycleTimeNet lesbar.
</description>
</parameter>
<parameter number="10290" type="DWORD" dim="1">
<name>CC_TDA_PARAM_UNIT</name>
<brief>Physikalische Einheiten der Werkzeugdaten für Compilezyklen</brief>
<description>Phys. Einheiten für die anwenderdefinierten WZ-spezifischen Daten:

0 ;Keine Einheit
1 ;Linear-Position  [ mm ; inch ]
2 ;Winkel-Position  [ Grad ; Grad ]
3 ;Linear-Geschw.   [ mm/min ; inch/min ]
4 ;Winkel-Geschw.   [ U/min ; U/min ]
5 ;Linear-Beschl.   [ m/s² ; inch/s² ]
6 ;Winkel-Beschl.   [ U/s² ; U/s² ]
7 ;Linear-Ruck      [ m/s³ ; inch/s³ ]
8 ;Winkel-Ruck      [ U/s³ ; U/s³ ]
9 ;Umdrehungsvorschub   [ mm/Umdr; inch/Umdr]

Verfügbar nur, wenn Bit 2 (0x4) in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK gesetzt ist.
</description>
</parameter>
<parameter number="10291" type="DWORD" dim="1">
<name>CCS_TDA_PARAM_UNIT</name>
<brief>Physikalische Einheit der SIEMENS-OEM-Werkzeugdaten</brief>
<description>Phys. Einheiten für die applikationsspezifischen WZ-spezifischen Daten:

0:	Keine Einheit
1:	Linear-Position         [ mm ; inch ]
2:	Winkel-Position         [ Grad ; Grad ]
3:	Linear-Geschw.          [ mm/min ; inch/min ]
4:	Winkel-Geschw.          [ U/min ; U/min ]
5:	Linear-Beschl.          [ m/s² ; inch/s² ]
6:	Winkel-Beschleunigung   [ U/s² ; U/s² ]
7:	Linear-Ruck             [ m/s³ ; inch/s³ ]
8:	Winkel-Ruck             [ U/s³ ; U/s³ ]
9:	Umdrehungsvorschub      [ mm/Umdr; inch/Umdr]

Verfügbar nur, wenn Bit 2 (0x4) in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK gesetzt ist.
Korrespondiert mit:
 MD18204 $MN_MM_NUM_CCS_TDA_PARAM
</description>
</parameter>
<parameter number="10292" type="DWORD" dim="1">
<name>CC_TOA_PARAM_UNIT</name>
<brief>Physikalische Einheiten der Schneidedaten für Compilezyklen</brief>
<description>Phys. Einheiten für die anwenderdefinierten Schneidedaten:

0 ;Keine Einheit
1 ;Linear-Position      [ mm ; inch ]
2 ;Winkel-Position      [ Grad ; Grad ]
3 ;Linear-Geschw.       [ mm/min ; inch/min ]
4 ;Winkel-Geschw.       [ U/min ; U/min ]
5 ;Linear-Beschl.       [ m/s² ; inch/s² ]
6 ;Winkel-Beschl.       [ U/s² ; U/s² ]
7 ;Linear-Ruck          [ m/s³ ; inch/s³ ]
8 ;Winkel-Ruck          [ U/s³ ; U/s³ ]
9 ;Umdrehungsvorschub   [ mm/Umdr; inch/Umdr]

Verfügbar nur, wenn Bit 2 (0x4) in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK gesetzt ist.
</description>
</parameter>
<parameter number="10293" type="DWORD" dim="1">
<name>CCS_TOA_PARAM_UNIT</name>
<brief>Physikalische Einheit der SIEMENS-OEM-Schneidendaten</brief>
<description>Phys. Einheiten für die applikationsspezifischen Schneidedaten:

0 :  Keine Einheit
1 :  Linear-Position            [ mm ; inch ]
2 :  Winkel-Position            [ Grad ; Grad ]
3 :  Linear-Geschwindigkeit     [ mm/min ; inch/min ]
4 :  Winkel-Geschwindigkeit     [ U/min ; U/min ]
5 :  Linear-Beschleunigung      [ m/s² ; inch/s² ]
6 :  Winkel-Beschleunigung      [ U/s² ; U/s² ]
7 :  Linear-Ruck                [ m/s³ ; inch/s³ ]
8 :  Winkel-Ruck                [ U/s³ ; U/s³ ]
9 :  Umdrehungsvorschub         [ mm/Umdr; inch/Umdr]

Verfügbar nur, wenn Bit 2 (0x4) in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK gesetzt ist.
Korrespondiert mit:
 MD18206 $MN_MM_NUM_CCS_TOA_PARAM
</description>
</parameter>
<parameter number="10300" type="BYTE" dim="0">
<name>FASTIO_ANA_NUM_INPUTS</name>
<brief>Anzahl der aktiven analogen NC-Eingänge</brief>
<description>Mit diesem Maschinendatum wird die Anzahl der an der Steuerung nutzbaren analogen NC-Eingänge festgelegt.

Nur diese analogen NC-Eingänge können vom NC-Teileprogramm angesprochen bzw. NC-Funktionen zugeordnet werden.

Falls mit dem Maschinendatum mehr analoge NC-Eingänge definiert wurden als hardwaremäßig an der Steuerung bestückt sind, wird für die hardwaremäßig nicht vorhandenen Eingänge steuerungsintern der binäre Analogistwert gleich Null gesetzt. Der NCK-Wert kann von der PLC noch verändert werden.

Hinweis:
	Für die Bearbeitung der digitalen und analogen NC-Peripherie wird CPU-Rechenzeit auf der Interpolationsebene benötigt. Um die Interpolationstaktzeit nicht unnötig zu belasten, sollte daher die Anzahl der aktiven NC-Peripherie entsprechend den Maschinenanforderungen gewählt werden.
</description>
</parameter>
<parameter number="10310" type="BYTE" dim="0">
<name>FASTIO_ANA_NUM_OUTPUTS</name>
<brief>Anzahl der aktiven analogen NC-Ausgänge</brief>
<description>Mit diesem Maschinendatum wird die Anzahl der an der Steuerung nutzbaren analogen NC-Ausgänge festgelegt.

Nur diese analogen NC-Ausgänge können vom NC-Teileprogramm angesprochen bzw. NC-Funktionen zugeordnet werden.

Falls mit dem Maschinendatum mehr analoge NC-Ausgänge definiert wurden als hardwaremäßig an der Steuerung bestückt sind, erfolgt keine Alarmmeldung. Die vom Teileprogramm vorgegebenen Analogwerte können von der PLC gelesen werden.

Hinweis:
	Für die Bearbeitung der digitalen und analogen NC-Peripherie wird CPU-Rechenzeit auf der Interpolationsebene benötigt. Um die Interpolationstaktzeit nicht unnötig zu belasten, sollte daher die Anzahl der aktiven NC-Peripherie entsprechend den Maschinenanforderungen gewählt werden.
</description>
</parameter>
<parameter number="10320" type="DWORD" dim="1">
<name>FASTIO_ANA_INPUT_WEIGHT</name>
<brief>Bewertungsfaktor für die analogen NC-Eingänge</brief>
<description>Hiermit kann für jeden analogen NC-Eingang [n] ein Bewertungsfaktor festgelegt werden, mit dem eine Anpassung an die verschiedenen AD-Wandler (abhängig von der Peripherie-Baugruppe) möglich ist.

In dieses Maschinendatum ist der Wert einzutragen, der im Teileprogramm mit dem Befehl x = $A_INA[n] gelesen werden soll, wenn der zugehörige Analog-Eingang [n] maximal ausgesteuert wird, bzw. über die PLC-Nahtstelle für diesen Eingang der Wert +32767 vorgegeben wird.

Es wird der vom AD-Wandler oder von der PLC-Nahtstelle gelesene Wert mit dem Faktor (FASTIO_ANA_INPUT_WEIGHT / 32767) multipliziert, bevor er im Teileprogramm mit der Systemvariable $A_INA[n] gelesen werden kann.

Anwendung des Bewertungsfaktors bei "analoge NC-Eingänge ohne Hardware": Bei einem Bewertungsfaktor = 32767 sind die Wertvorgaben von Teileprogramm und von PLC zahlenmäßig identisch (1:1-Kommunikation zwischen Teileprogramm und PLC). Dies ist vorteilhaft, wenn die analogen NC-Ein-/Ausgänge als reine PLC-Ein-/Ausgänge ohne Analog-Hardware verwendet werden.

Hinweis:
	Die Komparatorschwellwerte SD41600 $SN_COMPAR_THRESHOLD_1 bzw. SD41601 $SN_COMPAR_THRESHOLD_2 werden entsprechend ihrer Zuordnung zu einem Analog-Eingang für den Vergleich ebenfalls auf MD10320 $MN_FASTIO_ANA_INPUT_WEIGHT normiert

	Der CC-Zugriff auf Analogwerte wird von FASTIO_ANA_INPUT_WEIGHT nicht beeinflusst.

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Setzwert_von_PLC_der_analogenNC-Eingaenge/&gt; (Setzwert von PLC der analogen NC-Eingänge)
</description>
</parameter>
<parameter number="10330" type="DWORD" dim="1">
<name>FASTIO_ANA_OUTPUT_WEIGHT</name>
<brief>Bewertungsfaktor für die analogen NC-Ausgänge</brief>
<description>Hiermit kann für jeden analogen NC-Ausgang [n] ein Bewertungsfaktor festgelegt werden, mit dem eine Anpassung an die verschiedenen DA-Wandler (abhängig von der verwendeten Peripherie-Baugruppe) möglich ist.

[hw] = Index (0 bis 7) für Adressierung der externen analogen Ausgänge

In dieses Maschinendatum ist der Wert x einzutragen, der bei Programmierung von $A_OUTA[n] = x im Teileprogramm die maximale Aussteuerung des zugehörigen Analog-Ausgangs [n] bewirken bzw. in der PLC-Nahtstelle für diesen Ausgang den Wert +32767 erzeugen soll.

Anwendung des Bewertungsfaktors bei "analoge NC-Ausgänge ohne Hardware": Bei einem Bewertungsfaktor = 32767 sind die Wertvorgaben von Teileprogramm und von PLC zahlenmäßig identisch (1:1-Kommunikation zwischen Teileprogramm und PLC). Dies ist vorteilhaft, wenn die analogen NC-Ausgänge als reine PLC-Ausgänge ohne Analog-Hardware verwendet werden.

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Setzwert_von_PLC_der_analogenNC-Ausgaenge/&gt; (Setzwert von PLC der analogen NC-Ausgänge)
	NC/PLC-Nahtstellensignal &lt;Sollwert_der_analogenNC-Ausgaenge/&gt; (Sollwert der analogen NC-Ausgänge)
</description>
</parameter>
<parameter number="10350" type="BYTE" dim="0">
<name>FASTIO_DIG_NUM_INPUTS</name>
<brief>Anzahl der aktiven digitalen NC-Eingangsbytes</brief>
<description>Hiermit wird die Byteanzahl der an der Steuerung nutzbaren digitalen NC-Eingänge festgelegt.

Diese digitalen NC-Eingänge können direkt vom Teileprogramm gelesen werden. Desweiteren kann der an den HW-Eingängen anliegende Signalzustand von der PLC verändert werden.

Falls mit dem Maschinendatum mehr digitale NC-Eingänge definiert wurden als hardwaremäßig an der Steuerung bestückt sind, werden für die hardwaremäßig nicht vorhandenen Eingänge steuerungsintern der Signalzustand gleich 0 gelesen. Der NCK-Wert kann von der PLC noch verändert werden.

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Sperre_der_digitalenNC-Eingaenge1-8/&gt; (Sperre der digitalen NC-Eingänge 1-8);
 NC/PLC-Nahtstellensignal &lt;Sperre_der_externen_digitalenEingaenge9-40/&gt; (Sperre der externen digitalen Eingänge des NCK 9-40)
	NC/PLC-Nahtstellensignal &lt;Setzen_der_digitalenNC-Eingaenge_von_PLC1-9/&gt; (Setzen der digitalen NC-Eingänge von PLC 1-9);
 NC/PLC-Nahtstellensignal &lt;Werte_vonPLCfuer_die_externen_digitalen_Eingaenge9-40/&gt; (Werte von PLC für die externen digitalen Eingänge des NCK 9-40)
	NC/PLC-Nahtstellensignal &lt;Istwert_der_digitalenNC-Eingaenge/&gt; (Istwert der  digitalen NC-Eingänge)
</description>
</parameter>
<parameter number="10360" type="BYTE" dim="0">
<name>FASTIO_DIG_NUM_OUTPUTS</name>
<brief>Anzahl der aktiven digitalen NC-Ausgangsbytes</brief>
<description>Hiermit wird die Byteanzahl der an der Steuerung nutzbaren digitalen NC-Ausgänge festgelegt.

Diese digitalen NC-Ausgänge können direkt vom Teileprogramm gesetzt werden. Von der PLC können
- die digitalen Ausgänge mit dem NC/PLC-Nahtstellensignal &lt;Sperre_der_digitalenNC-Ausgaenge/&gt; (Sperre der digitalen NC-Ausgänge) definiert auf "0" gesetzt werden.
- mit dem NC/PLC-Nahtstellensignal &lt;Ueberschreibmaske_der_digitalenNC-Ausgaenge/&gt; (Überschreibmaske der digitalen NC-Ausgänge) der NCK-Wert verändert werden.
- mit dem NC/PLC-Nahtstellensignal &lt;Vorgabemaske_der_digitalenNC-Ausgaenge/&gt; (Vorgabemaske der digitalen NC-Ausgänge) ein PLC-Wert vorgegeben werden.

Falls mit dem Maschinendatum mehr digitale NC-Ausgänge definiert wurden als hardwaremäßig an der Steuerung bestückt sind, erfolgt keine Alarmmeldung. Die vom Teileprogramm vorgegebenen Signalzustände können von der PLC gelesen werden.

Sonderfälle:
Die digitalen NC-Ausgänge 5 bis 8 können nur von der PLC bearbeitet werden (keine Hardware-Ausgänge).

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Sperre_der_digitalenNC-Ausgaenge/&gt; (Sperre der digitalen NC-Ausgänge)
	NC/PLC-Nahtstellensignal &lt;Ueberschreibmaske_der_digitalenNC-Ausgaenge/&gt; (Überschreibmaske der digitalen NC-Ausgänge)
	NC/PLC-Nahtstellensignal &lt;Setzwert_von_PLC_der_digitalenNC-Ausgaenge/&gt; (Setzwert von PLC der digitalen NC-Ausgänge)
	NC/PLC-Nahtstellensignal &lt;Vorgabemaske_der_digitalenNC-Ausgaenge/&gt; (Vorgabemaske der digitalen NC-Ausgänge)
	NC/PLC-Nahtstellensignal &lt;Sollwert_der_digitalenNC-Ausgaenge/&gt; (Sollwert der digitalen NC-Ausgänge)
</description>
</parameter>
<parameter number="10361" type="UDWORD" dim="1" display="HEX">
<name>FASTIO_DIG_SHORT_CIRCUIT</name>
<brief>Kurzschluss digitaler Ein- und Ausgänge</brief>
<description>Definierte Kurzschlüsse zwischen digitalen Ausgangs- und Eingangssignalen der schnellen NC-Peripherie werden realisiert, indem die von der schnellen NC-Peripherie bzw. der PLC-Nahtstelle eingelesenen Signale mit definierten Ausgangssignalen verknüpft werden.

Bei der Verknüpfung bleiben die Ausgangssignale stets unverändert, die intern zu berücksichtigenden Eingänge gehen aus den gelesenen Eingängen und der Verknüpfung hervor. Werden für ein Eingangsbit mehrere Ausgangsbits im überschreibenden Modus spezifiziert, bestimmt die letzte in der Liste definierte Zuordnung das Ergebnis.

Die Definition nicht vorhandener bzw. nicht aktivierter Ein-/Ausgänge wird ohne Alarm ignoriert.

Bit 0-7:	Nummer des zu beschreibenden Eingangs-Bytes ( 1 - 5 )
Bit 8-15:	Bit-Nummer innerhalb des Eingangs-Bytes ( 1 - 8 )

Verknüpfung:
Die Verknüpfungsart wird durch Addition einer Hexadezimalzahl zur Eingangsbitnummer gewählt:
	00   Eingang wie Ausgang überschreiben
	A0   Eingang ist gelesener Eingang UND verknüpft mit Zustand des angegebenen Ausganges
	B0   Eingang ist gelesener Eingang ODER verknüpft mit Zustand des angegebenen Ausganges

Bit 16-23:	Nummer des zu verwendenden Ausgangs-Bytes ( 1 - 5 )
Bit 24-31:	Bit-Nummer innerhalb des Ausgangs-Bytes ( 1 - 8 )

Beispiel:
MD10361 $MN_FASTIO_DIG_SHORT_CIRCUIT[ 0 ] = 0x04010302
	Eingang:  3. Bit des 2. Bytes
	Ausgang:  4. Bit des 1. Bytes ( = 4. Onboard-NCU-Ausgang )
	Der Eingangszustand wird vom spezifizierten Ausgang überschrieben

MD10361 $MN_FASTIO_DIG_SHORT_CIRCUIT[ 1 ] = 0x0705A201
	Eingang:  2. Bit des 1. Bytes ( = 2. Onboard-NCU-Eingang )
	Ausgang:  7. Bit des 5. Bytes
	Der Eingangszustand wird mit dem spezifizierten Ausgang verUNDet

MD10361 $MN_FASTIO_DIG_SHORT_CIRCUIT[ 2 ] = 0x0103B502
	Eingang:  5. Bit des 2. Bytes
	Ausgang:  1. Bit des 3. Bytes
	Der Eingangszustand wird mit dem spezifizierten Ausgang verODERt

Korrespondiert mit:
	MD10350 $MN_FASTIO_DIG_NUM_INPUTS,
	MD10360 $MN_FASTIO_DIG_NUM_OUTPUTS.

Literatur:         /FB/, A4, "Digitale und analoge NC-Peripherie"
</description>
</parameter>
<parameter number="10362" type="UDWORD" dim="1" display="HEX">
<name>HW_ASSIGN_ANA_FASTIN</name>
<brief>Hardware-Zuordnung der schnellen analogen NC-Eingänge</brief>
<description>Bei PROFIBUS/PROFINET:
   1. + 2. Byte geben die logische Basisadresse des I/O Slots auf dem PROFIBUS/PROFINET an:
Wert 0000 bedeutet KEIN aktiver Slot
Werte 0001..0100  sind reserviert für das PLC-Prozessabbild (bei Eingangsslots kann vom NCK der Wert ohne Fehler mitgelesen werden, Ausgangsslots in diesem Bereich sind aber verboten und führen zu einem Alarm im Hochlauf)

   1. Byte = LowByte der logischen Basisadresse
   2. Byte = HighByte der logischen Basisadresse
   3. Byte = 0 = ohne Bedeutung
   4. Byte = 5 = Segment-Nr. für PROFIBUS/PROFINET

Die Erläuterungen zu den einzelnen Bytes ist in MD10366 $MN_HW_ASSIGN_DIG_FASTIN beschrieben.

[hw] = Index (0 bis 7) für Adressierung der externen analogen Eingänge

Korrespondiert mit:
	MD10366 $MN_HW_ASSIGN_DIG_FASTIN
	MD10368 $MN_HW_ASSIGN_DIG_FASTOUT
	MD10364 $MN_HW_ASSIGN_ANA_FASTOUT
</description>
</parameter>
<parameter number="10364" type="UDWORD" dim="1" display="HEX">
<name>HW_ASSIGN_ANA_FASTOUT</name>
<brief>Hardware-Zuordnung der externen analogen NC-Ausgänge</brief>
<description>Bei PROFIBUS/PROFINET:
   1. + 2. Byte geben die logische Basisadresse des I/O Slots auf dem PROFIBUS/PROFINET an:
Wert 0000 bedeutet KEIN aktiver Slot
Werte 0001..0100  sind reserviert für das PLC-Prozessabbild (bei Eingangsslots kann vom NCK der Wert ohne Fehler mitgelesen werden, Ausgangsslots in diesem Bereich sind aber verboten und führen zu einem Alarm im Hochlauf)

   1. Byte = LowByte der logischen Basisadresse
   2. Byte = HighByte der logischen Basisadresse
   3. Byte = 0 = ohne Bedeutung
   4. Byte = 5 = Segment-Nr. für PROFIBUS/PROFINET

Die Erläuterungen zu den einzelnen Bytes ist in MD10366 $MN_HW_ASSIGN_DIG_FASTIN beschrieben.

Korrespondiert mit:
	MD10366 $MN_HW_ASSIGN_DIG_FASTIN
	MD10368 $MN_HW_ASSIGN_DIG_FASTOUT
	MD10362 $MN_HW_ASSIGN_ANA_FASTIN
</description>
</parameter>
<parameter number="10366" type="UDWORD" dim="1" display="HEX">
<name>HW_ASSIGN_DIG_FASTIN</name>
<brief>Hardware-Zuordnung der externen digitalen NC-Eingänge</brief>
<description>Bei PROFIBUS/PROFINET:
   1. + 2. Byte geben die logische Basisadresse des I/O Slots auf dem PROFIBUS/PROFINET an:
Wert 0000 bedeutet KEIN aktiver Slot
Werte 0001..0100  sind reserviert für das PLC-Prozessabbild (bei Eingangsslots kann vom NCK der Wert ohne Fehler mitgelesen werden, Ausgangsslots in diesem Bereich sind aber verboten und führen zu einem Alarm im Hochlauf)

   1. Byte = LowByte der logischen Basisadresse
   2. Byte = HighByte der logischen Basisadresse
   3. Byte = 0 = ohne Bedeutung
   4. Byte = 5 = Segment-Nr. für PROFIBUS/PROFINET

Modul-Nr.:   1 ... MD_MAXNUM_SIMO611D_AXES:
	Nr. des logischen Steckplatzes, in dem der Terminalblock mit den externen I/Os steckt.
1. + 2. Byte geben die logische Basisadresse des I/O Slots auf dem PROFIBUS an
1. Byte = LowByte
2. Byte = HighByte
Wert 0000 bedeutet KEIN aktiver Slot
Werte 0001..007F  sind reserviert für die PLC (bei Eingangsslots kann vom NCK der Wert ohne Fehler mitgelesen werden, Ausgangsslots in diesem Bereich sind aber verboten und führen zu einem Alarm im Hochlauf)
Werte 0080..02FF  sind gültige Werte
Werte&gt; 02FF  sind ungültig

Beispiel:
HW_ASSIGN_DIGITAL_FASTIN[3] = '05000302'
1.+2. Byte:   0302 (hex) = logische Basisadresse 770 (dezimal)
3. Byte:   00 = ohne Bedeutung
4. Byte:   05 = Kennung für PROFIBUS/PROFINET

Bei Onboard-E/A:
   1. Byte = Nummer des E/A-Bytes
   2. Byte = Nummer des Submoduls
      Wert 0 bedeutet: Onboard-E/A-Byte wird von der PLC gelesen/geschrieben.
   3. Byte = Nummer des Moduls
   4. Byte = 0 = Onboard-E/A

Korrespondiert mit:
	MD10368 $MN_HW_ASSIGN_DIG_FASTOUT
	MD10362 $MN_HW_ASSIGN_ANA_FASTIN
	MD10364 $MN_HW_ASSIGN_ANA_FASTOUT
</description>
</parameter>
<parameter number="10368" type="UDWORD" dim="1" display="HEX">
<name>HW_ASSIGN_DIG_FASTOUT</name>
<brief>Hardware-Zuordnung der externen digitalen NC-Ausgänge</brief>
<description>Bei PROFIBUS/PROFINET:
   1. + 2. Byte geben die logische Basisadresse des I/O Slots auf dem PROFIBUS/PROFINET an:
Wert 0000 bedeutet KEIN aktiver Slot
Werte 0001..0100  sind reserviert für das PLC-Prozessabbild (bei Eingangsslots kann vom NCK der Wert ohne Fehler mitgelesen werden, Ausgangsslots in diesem Bereich sind aber verboten und führen zu einem Alarm im Hochlauf)

   1. Byte = LowByte der logischen Basisadresse
   2. Byte = HighByte der logischen Basisadresse
   3. Byte = 0 = ohne Bedeutung
   4. Byte = 5 = Segment-Nr. für PROFIBUS/PROFINET

Die Erläuterungen zu den einzelnen Bytes ist in MD10366 $MN_HW_ASSIGN_DIG_FASTIN beschrieben.

[hw] = Index (0 bis 3) für Adressierung des externen digitalen Ausgangsbytes

Korrespondiert mit:
	MD10366 $MN_HW_ASSIGN_DIG_FASTIN
	MD10362 $MN_HW_ASSIGN_ANA_FASTIN
	MD10364 $MN_HW_ASSIGN_ANA_FASTOUT
</description>
</parameter>
<parameter number="10394" type="BYTE" dim="0">
<name>PLCIO_NUM_BYTES_IN</name>
<brief>Anzahl direkt lesbarer Eingangsbytes der PLC-Peripherie</brief>
<description>Anzahl der PLC-Peripherie Eingang-Bytes, die von der NC direkt gelesen werden können.

Die Übertragung dieser Bytes erfolgt nicht über das PLC-Anwenderprogramm, sondern über einen Interrupt des PLC-Betriebssystems.
Die Zugriffsverzögerung ist kleiner als ca. 0.5ms.
Die Bytes können mit den Systemvariablen:
$A_PBB_IN
$A_PBW_IN
$A_PBD_IN
$A_PBR_IN
vom Teileprogramm und aus Synchronaktionen gelesen werden.

Achtung:
	Die Maschinendaten MD10394 $MN_PLCIO_NUM_BYTES_IN und MD10395 $MN_PLCIO_LOGIC_ADDRESS_IN müssen konsistent zur PLC-seitigen Projektierung sein.

Korrespondierend mit:
	MD10395 $MN_PLCIO_LOGIC_ADDRESS_IN
</description>
</parameter>
<parameter number="10395" type="DWORD" dim="0">
<name>PLCIO_LOGIC_ADDRESS_IN</name>
<brief>Startadr. der direkt lesbaren Eingangsbytes der PLC-Peripherie</brief>
<description>Ab dieser Adresse muss die PLC-Hardware-Projektierung eine Anzahl von MD10394 $MN_PLCIO_NUM_BYTES_IN zur direkten Verwendung durch die NC konfigurieren. Die Übertragung dieser Bytes erfolgt nicht durch das PLC-Anwenderprogramm, sondern über einen Interrupt des PLC-Betriebssystems. Die Zugriffsverzögerung ist kleiner als ca. 0.5 ms. Die Bytes können mit den Systemvariablen:

$A_PBB_IN,
$A_PBW_IN,
$A_PBD_IN,
$A_PBR_IN
vom Teileprogramm und aus Synchronaktionen gelesen werden.

Achtung:
	Die Maschinendaten MD10394 $MN_PLCIO_NUM_BYTES_IN und MD10395 $MN_PLCIO_LOGIC_ADDRESS_IN müssen konsistent zur PLC-seitigen Projektierung sein.

Korrespondiert mit:
	MD10394 $MN_PLCIO_NUM_BYTES_IN
</description>
</parameter>
<parameter number="10396" type="BYTE" dim="0">
<name>PLCIO_NUM_BYTES_OUT</name>
<brief>Anzahl der direkt schreibbaren Ausgangsbytes der PLC-Peripherie</brief>
<description>Anzahl der PLC-Peripherie Ausgang-Bytes, die von der NC direkt beschrieben werden können.
Die Übertragung dieser Bytes erfolgt nicht über das PLC-Anwenderprogramm, sondern  über einen Interrupt des PLC-Betriebssystems.
Die Zugriffsverzögerung ist kleiner als ca. 0.5ms.
Die Bytes können NC-seitig über die Variablen:
$A_PBB_OUT,
$A_PBW_OUT,
$A_PBD_OUT,
$A_PBR_OUT
vom Teileprogramm und aus Synchronaktionen beschrieben werden.

Achtung:
	Die Maschinendaten MD10396 $MN_PLCIO_NUM_BYTES_OUT und MD10397 $MN_PLCIO_LOGIC_ADDRESS_OUT müssen konsistent zur PLC-seitigen Projektierung sein, sonst werden andere PLC-Ausgangssignale überschrieben.
</description>
</parameter>
<parameter number="10397" type="DWORD" dim="0">
<name>PLCIO_LOGIC_ADDRESS_OUT</name>
<brief>Startadr. der direkt schreibb. Ausgangsbytes der PLC-Peripherie</brief>
<description>Ab dieser Adresse muss die PLC-Hardware-Projektierung eine Anzahl von MD10396 $MN_PLCIO_NUM_BYTES_OUT zur direkten Verwendung durch die NC konfigurieren.
Die Übertragung dieser Bytes erfolgt nicht durch das PLC-Anwenderprogramm, sondern direkt über einen Interrupt des PLC-Betriebssystems.
Die Zugriffsverzögerung ist kleiner als ca. 0.5ms.
Die Bytes können mit den Systemvariablen:
$A_PBB_OUT,
$A_PBW_OUT,
$A_PBD_OUT,
$A_PBR_OUT
vom Teileprogramm und aus Synchronaktionen geschrieben werden.

Achtung:
	Die Maschinendaten MD10396 $MN_PLCIO_NUM_BYTES_OUT und MD10397 $MN_PLCIO_LOGIC_ADDRESS_OUT müssen konsistent zur PLC-seitigen Projektierung sein.

Korrespondierend mit:
	MD10396 $MN_PLClO_NUM_BYTES_OUT
</description>
</parameter>
<parameter number="10398" type="DOUBLE" dim="0">
<name>PLCIO_IN_UPDATE_TIME</name>
<brief>Updatetime für PLCIO-Input-Zyklus</brief>
<description>Einstellung der Zeitdauer, in der die über $A_PBx_IN Systemvariablen direkt lesbaren Daten der PLC-Peripherie aktualisiert werden.

Diese Zeitdauer wird intern auf das nächsthöhere Vielfache der durch den IPO-Takt vorgegebenen Zeit aufgerundet.
</description>
</parameter>
<parameter number="10399" type="BYTE" dim="0">
<name>PLCIO_TYPE_REPRESENTATION</name>
<brief>Little-/Big-Endian für PLCIO</brief>
<description>Little-/Big-Endian Formatdarstellung der $A_PBx_OUT, $A_PBx_IN Systemvariablen für direkt von NCK ansteuerbare PLC-Peripherie.

value = 0 ; Darstellung der Systemvariablen erfolgt im Little-Endian-Format
value = 1 ; Darstellung der Systemvariablen erfolgt im Big-Endian-Format

PLC-Peripherie muss im allgemeinen immer im Big-Endian-Format (value = 1) angesteuert werden. Aus Kompatibilitätsgründen ist die Defaulteinstellung jedoch das Little-Endian-Format (value = 0).
</description>
</parameter>
<parameter number="10400" type="DWORD" dim="0">
<name>CC_VDI_IN_DATA</name>
<brief>Anzahl der Eingangsbytes für Compilezyklen</brief>
<description>Der Compilezyklenanwender hat die Möglichkeit auf der PLC-Anwendernahtstelle Daten innerhalb eines Datenbausteins frei zu definieren. Dabei legt er als Anwender selbst die Größe seiner Nahtstelle von PLC an NCK fest. Dieses Maschinendatum beschreibt die Länge des Bereiches auf der VDI-Nahtstelle in Bytes, welche die NCK-Inputschnittstelle definiert. Dieses und das MD10410 $MN_CC_VDI_OUT_DATA dürfen für SW 1 in Summe den Wert 400 nicht überschreiten.
</description>
</parameter>
<parameter number="10410" type="DWORD" dim="0">
<name>CC_VDI_OUT_DATA</name>
<brief>Anzahl der Ausgangsbytes für Compilezyklen</brief>
<description>Der Compilezyklenanwender hat die Möglichkeit auf der PLC-Anwendernahtstelle Daten innerhalb eines Datenbausteins frei zu definieren. Dabei legt er als Anwender selbst die Größe seiner Nahtstelle von NCK an PLC fest. Dieses Maschinendatum beschreibt die Länge des Bereiches auf der VDI-Nahtstelle in Bytes, welche die NCK-Outputschnittstelle definiert. Dieses und das MD10400 $MN_CC_VDI_IN_DATA dürfen in Summe den Wert 400 nicht überschreiten.
</description>
</parameter>
<parameter number="10420" type="UDWORD" dim="0" display="HEX">
<name>CC_ASSIGN_FASTOUT_MASK</name>
<brief>Reservierung externer Ausgänge für Compilezyklen</brief>
<description>Reservierung schneller HW-Ausgänge für CC-Anwendung
Bit 0(LSB)-14:  Maske der für CC-Anwendung reservierten digitalen Ausgabebytes

Bit 16-30:      Maske der für CC-Anwendung reservierten analogen Ausgänge

Die hier reservierten HW-Ausgänge werden in die Überwachung auf Mehrfachbenutzung  beim Systemhochlauf einbezogen. Es empfiehlt sich, alle von CC-Anwendungen benutzten HW-Ausgänge hier anzumelden.

Bit 15: unterdrückt Hochlaufalarm 4275 ( Mehrfach-Zuordnung digitaler Ausgang )
Bit 31: unterdrückt Hochlaufalarm 4275 ( Mehrfach-Zuordnung analoger Ausgang )
</description>
</parameter>
<parameter number="10430" type="UDWORD" dim="0" display="HEX">
<name>CC_HW_DEBUG_MASK</name>
<brief>Hardware-Debugmaske für Compilezyklen</brief>
<description>Einstellung spezieller Reaktionen peripherer HW-Anschaltungen für NCK-Debug

Für sinnvolles Debuggen der NCK-Software muss u.U. die Reaktion peripherer Einheiten auf den Ausfall des NCK-Lebenszeichen unterdrückt werden, wenn die NCK-Software auf einen Breakpoint gelaufen ist.

Bit 0(LSB)-3:
	Für sinnvolles Debuggen der NCK-Software muss u.U. die Reaktion peripherer Einheiten auf den Ausfall des NCK-Lebenszeichen unterdrückt werden, wenn die NCK-Software auf einen Breakpoint gelaufen ist.

Bedeutung gesetzter Bits:
Bit 0:
	Antriebsmodule ignorieren den Ausfall des NCK-Lebenszeichens
Bit 1:
	Terminalblocks ignorieren den Ausfall des NCK-Lebenszeichens
Bit 3:
	PLC ignoriert den Ausfall des NCK-Lebenszeichens
Bit 4:
	Aufzeichnung von internen bzw. externen Steuerungsbefehlen. Aufzeichnung der Steuerungsabläufe und deren Abspeicherung in einem File im passiven Filesystem. Mit Hilfe des Aufzeichnungsfiles kann man den genauen Ablauf zwischen den eintreffenden Hardwaresignalen der PlC-Schnittstelle und den internen Abläufen verfolgen.
Bit 5:
	Servotrace: physikalische Adressen ohne Zugriffskontrolle erlauben
Bit10:
	Test für Messfunktion. Wenn dieses Bit gesetzt ist, kann man mit den GUD Variablen CHAN INT MEA_TASK und CHAN INT MEA_COUNTER die Rücktransformation der Messwerte in die zyklische bzw. nicht zyklische Task verlegen.
Bit11:
	Kein NOTAUS Alarm bei Ausfall des PLC-Lebenszeichen. Wird das PLC Lebenszeichen nicht innerhalb der in MD10100 $MN_PLC_CYCLIC_TIMEOUT definierten Zeit erhöht, so wird kein Alarm ausgegeben, sondern lediglich die Achsfreigaben weggenommen. (Anwendungsfall: Debuggen im PLC Anwenderprogramm)

Bit15:
	Reserviert für Gantry Inbetriebnahme Hilfe.
</description>
</parameter>
<parameter number="10450" type="BYTE" dim="1">
<name>SW_CAM_ASSIGN_TAB</name>
<brief>Zuordnung von Softwarenocken zu Maschinenachsen</brief>
<description>Mit dem Maschinendatum kann jedem der 16 möglichen Nockenpaare (bestehend aus je einem Minus- und Plusnocken) eine Maschinenachse zugeordnet werden.

Bei Eintrag einer "0" wird der entsprechende Nocken nicht behandelt.

Die Aktivierung der Nockensignalausgabe erfolgt über das axiale NC/PLC-Nahtstellensignal &lt;Nocken-Aktivierung/&gt; (Nocken-Aktivierung).

Der Index [n] des Maschinendatums adressiert das Nockenpaar:n = 0, 1, ... , 15 entspricht Nockenpaar 1, 2, ... , 16

Korrespondiert mit:
 NC/PLC-Nahtstellensignal &lt;Nocken-Aktivierung/&gt; (Nocken-Aktivierung)

Beispiel:
Das Nockenpaar 1 soll der Maschinenachse 3 und das Nockenpaar 3 der Maschinenachse 4 zugeordnet werden. Das Nockenpaar 2 soll keiner Achse zugeordnet werden.
	MD10450 $MN_SW_CAM_ASSIGN_TAB[0]= 3
	MD10450 $MN_SW_CAM_ASSIGN_TAB[1]= 0
	MD10450 $MN_SW_CAM_ASSIGN_TAB[2]= 4
</description>
</parameter>
<parameter number="10460" type="DOUBLE" dim="1">
<name>SW_CAM_MINUS_LEAD_TIME</name>
<brief>Vorhalte- bzw. Verzögerungszeit an den Minus-Nocken 1-16</brief>
<description>In diesem Maschinendatum kann zur Kompensation von Verzögerungszeiten jedem Minusnocken 1-16 eine Vorhalte- bzw. Verzögerungszeit zugeordnet werden.

Die Schaltflanke des zugehörigen Nockensignals wird um die eingegebene Zeit vorverlegt bzw. verzögert.

Positiver Wert:  --&gt;       Vorhaltezeit
Negativer Wert:  --&gt;       Verzögerungszeit

Dient zur Kompensation des konstanten Anteils der interner Verzögerungszeit
zwischen Istwerterfassung und Signalausgabe.

Der Index [n] des Maschinendatums adressiert das Nockenpaar:
n = 0, 1, ... , 15 entspricht Nockenpaar 1, 2, ... , 16

Das Maschinendatum wirkt additiv zu den SD41520 $SN_SW_CAM_MINUS_TIME_TAB_1[n] und SD41522 $SN_SW_CAM_MINUS_TIME_TAB_2[n].

Korrespondiert mit:
	SD41520 $SN_SW_CAM_MINUS_TIME_TAB_1[n] (Vorhalte- bzw. Verzögerungszeit an den Minusnocken 1 -8)
	SD41522 $SN_SW_CAM_MINUS_TIME_TAB_2[n] (Vorhalte- bzw. Verzögerungszeit an den Minusnocken 9 - 16)
</description>
</parameter>
<parameter number="10461" type="DOUBLE" dim="1">
<name>SW_CAM_PLUS_LEAD_TIME</name>
<brief>Vorhalte- bzw. Verzögerungszeit an den Plus-Nocken 1-16</brief>
<description>In diesem Maschinendatum kann zur Kompensation von Verzögerungszeiten jedem Plusnocken 1-16 eine Vorhalte- bzw. Verzögerungszeit zugeordnet werden.

Die Schaltflanke des zugehörigen Nockensignals wird um die eingegebene Zeit vorverlegt bzw. verzögert.

Positiver Wert:       --&gt;         Vorhaltezeit
Negativer Wert:       --&gt;         Verzögerungszeit

Dient zur Kompensation des konstanten Anteils der interner Verzögerungszeit
zwischen Istwerterfassung und Signalausgabe.

Der Index [n] des Maschinendatums adressiert das Nockenpaar:
n = 0, 1, ... , 15 entspricht Nockenpaar 1, 2, ... , 16
Das Maschinendatum wirkt additiv zu den SD41521 $SN_SW_CAM_PLUS_TIME_TAB_1[n] und SD41523 $SN_SW_CAM_PLUS_TIME_TAB_2[n].

Korrespondiert mit:
	SD41521 $SN_SW_CAM_PLUS_TIME_TAB_1[n] (Vorhalte- bzw. Verzögerungszeit an den Plusnocken 1 -8)
	SD41523 $SN_SW_CAM_PLUS_TIME_TAB_2[n] (Vorhalte- bzw. Verzögerungszeit an den Plusnocken 9 - 16)
</description>
</parameter>
<parameter number="10470" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_ASSIGN_FASTOUT_1</name>
<brief>HW-Zuordnung für die Ausgabe der Nocken 1-8 an NC-Peripherie</brief>
<description>Zusätzlich zur Ausgabe an die PLC kann der Status der Nockensignale an die NC-Peripherie ausgegeben werden.

Mit diesem Maschinendatum erfolgt für die Nockenpaare 1 -8 die Hardwarezuordnung der Minus- und Plus-Nockensignale zu den verwendeten digitalen Ausgangsbytes der NC-Peripherie.

Weiterhin können mit dem Maschinendatum die zugeordneten Ausgangssignale invertiert werden.

Das MD hat folgende Codierung:
Bit 0-7:     Nr. des 1. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 8-15:    Nr. des 2. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 16-23:   Invertiermaske für das Beschreiben des 1. verwendeten HW-Bytes
Bit 24-31:   Invertiermaske für das Beschreiben des 2. verwendeten HW-Bytes
               Bit=0:               nicht invertieren
               Bit=1:               invertieren

Sind beide HW-Bytes angegeben, so enthält das 1. Byte die Minus- und das 2. Byte die Plus-Nockensignale.

Wird das 2. Byte nicht spezifiziert (= "0"), so erfolgt die Ausgabe der 8 Nocken als UND-Verknüpfung der Minus- und Plusnockensignale unter Verwendung der 1. Invertiermaske über das 1. HW-Byte.
Der Status des nicht invertierten Ausgangssignals ist bei Linearachsen und bei Rundachsen mit "Plusnocken - Minusnocken &lt; 180 Grad":
             "1" zwischen Minus- und Plusnocken
             "0" außerhalb dieses Bereiches

Der Status des nicht invertierten Ausgangssignals ist bei Rundachsen mit "Plusnocken - Minusnocken &gt;= 180 Grad":
             "0" zwischen Minus- und Plusnocken
             "1" außerhalb dieses Bereiches

Als Byteadresse für die digitalen Ausgänge ist anzugeben:
1:              für das On-Board-Byte
2 - 5:          für externe Bytes
</description>
</parameter>
<parameter number="10471" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_ASSIGN_FASTOUT_2</name>
<brief>HW-Zuordnung für die Ausgabe der Nocken 9-16 an NC-Peripherie</brief>
<description>Zusätzlich zur Ausgabe an die PLC kann der Status der Nockensignale an die NC-Peripherie ausgegeben werden.

Mit diesem Maschinendatum erfolgt für die Nockenpaare 9 - 16 die Hardwarezuordnung der Minus- und Plus-Nockensignale zu den verwendeten digitalen Ausgangsbytes der NC-Peripherie.

Weiterhin können mit dem Maschinendatum die zugeordneten Ausgangssignale invertiert werden.

Das MD hat folgende Codierung:

Bit 0-7:     Nr. des 1. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 8-15:    Nr. des 2. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 16-23:   Invertiermaske für das Beschreiben des 1. verwendeten HW-Bytes
Bit 24-31:   Invertiermaske für das Beschreiben des 2. verwendeten HW-Bytes
                Bit=0:         nicht invertieren
                Bit=1:         invertieren

Sind beide HW-Bytes angegeben, so enthält das 1. Byte die Minus- und das 2. Byte die Plus-Nockensignale.

Wird das 2. Byte nicht spezifiziert (= "0"), so erfolgt die Ausgabe der 8 Nocken als UND-Verknüpfung der Minus- und Plusnockensignale unter Verwendung der 1. Invertiermaske über das 1. HW-Byte.
Der Status des nicht invertierten Ausgangssignals ist bei Linearachsen und bei Rundachsen mit "Plusnocken - Minusnocken &lt; 180 Grad":
                     "1" zwischen Minus- und Plusnocken
                     "0" außerhalb dieses Bereiches

Der Status des nicht invertierten Ausgangssignals ist bei Rundachsen mit "Plusnocken - Minusnocken &gt;= 180 Grad":
                      "0" zwischen Minus- und Plusnocken
                      "1" außerhalb dieses Bereiches
Als Byteadresse für die digitalen Ausgänge ist anzugeben:
1:                 für das On-Board-Byte
2 - 5:             für externe Bytes
</description>
</parameter>
<parameter number="10472" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_ASSIGN_FASTOUT_3</name>
<brief>HW-Zuordnung für die Ausgabe der Nocken 17-24 an NC-Peripherie</brief>
<description>Zusätzlich zur Ausgabe an die PLC kann der Status der Nockensignale an die NC-Peripherie ausgegeben werden.

Mit diesem Maschinendatum erfolgt für die Nockenpaare 17 - 24 die Hardwarezuordnung der Minus- und Plus-Nockensignale zu den verwendeten digitalen Ausgangsbytes der NC-Peripherie.

Weiterhin können mit dem Maschinendatum die zugeordneten Ausgangssignale invertiert werden.

Das MD hat folgende Codierung:
Bit 0-7:      Nr. des 1. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 8-15:     Nr. des 2. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 16-23:    Invertiermaske für das Beschreiben des 1. verwendeten HW-Bytes
Bit 24-31:    Invertiermaske für das Beschreiben des 2. verwendeten HW-Bytes
                 Bit=0:       nicht invertieren
                 Bit=1:       invertieren

Sind beide HW-Bytes angegeben, so enthält das 1. Byte die Minus- und das 2. Byte die Plus-Nockensignale.

Wird das 2. Byte nicht spezifiziert (= "0"), so erfolgt die Ausgabe der 8 Nocken als UND-Verknüpfung der Minus- und Plusnockensignale unter Verwendung der 1. Invertiermaske über das 1. HW-Byte.
Der Status des nicht invertierten Ausgangssignals ist bei Linearachsen und bei Rundachsen mit "Plusnocken - Minusnocken &lt; 180 Grad":
                "1" zwischen Minus- und Plusnocken
                "0" außerhalb dieses Bereiches

Der Status des nicht invertierten Ausgangssignals ist bei Rundachsen mit "Plusnocken - Minusnocken &gt;= 180 Grad":
                "0" zwischen Minus- und Plusnocken
                "1" außerhalb dieses Bereiches

Als Byteadresse für die digitalen Ausgänge ist anzugeben:
1:           für das On-Board-Byte
2 - 5:       für externe Bytes
</description>
</parameter>
<parameter number="10473" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_ASSIGN_FASTOUT_4</name>
<brief>HW-Zuordnung für die Ausgabe der Nocken 25-32 an NC-Peripherie</brief>
<description>Zusätzlich zur Ausgabe an die PLC kann der Status der Nockensignale an die NC-Peripherie ausgegeben werden.

Mit diesem Maschinendatum erfolgt für die Nockenpaare 25 - 32 die Hardwarezuordnung der Minus- und Plus-Nockensignale zu den verwendeten digitalen Ausgangsbytes der NC-Peripherie.

Weiterhin können mit dem Maschinendatum die zugeordneten Ausgangssignale invertiert werden.

Das MD hat folgende Codierung:
Bit 0-7:    Nr. des 1. verwendeten HW-Bytes mit digitalen Ausgängen
Bit 8-15:   Nr. des 2. verwendeten HW-Bytes mit digitalen Ausgängen

Bit 16-23:  Invertiermaske für das Beschreiben des 1. verwendeten HW-Bytes
Bit 24-31:  Invertiermaske für das Beschreiben des 2. verwendeten HW-Bytes
               Bit=0:        nicht invertieren
               Bit=1:        invertieren

Sind beide HW-Bytes angegeben, so enthält das 1. Byte die Minus- und das 2. Byte die Plus-Nockensignale.

Wird das 2. Byte nicht spezifiziert (= "0"), so erfolgt die Ausgabe der 8 Nocken als UND-Verknüpfung der Minus- und Plusnockensignale unter Verwendung der 1. Invertiermaske über das 1. HW-Byte.
Der Status des nicht invertierten Ausgangssignals ist bei Linearachsen und bei Rundachsen mit "Plusnocken - Minusnocken &lt; 180 Grad":
                "1" zwischen Minus- und Plusnocken
                "0" außerhalb dieses Bereiches

Der Status des nicht invertierten Ausgangssignals ist bei Rundachsen mit "Plusnocken - Minusnocken &gt;= 180 Grad":
                "0" zwischen Minus- und Plusnocken
                "1" außerhalb dieses Bereiches

Als Byteadresse für die digitalen Ausgänge ist anzugeben:
1:           für das On-Board-Byte
2 - 5:       für externe Bytes
</description>
</parameter>
<parameter number="10480" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_TIMER_FASTOUT_MASK</name>
<brief>Maske für die Ausgabe von Nockensign. über Timer-Interr. auf NCU</brief>
<description>Mit diesem Maschinendatum kann für 4 Nockenpaare eine timergesteuerte Ausgabe auf den 4 On-Board-Ausgängen der NC-Peripherie angewählt werden.

Dabei werden die Minus- und Plus-Signale eines Nockenpaares "EXKLUSIV-ODER"-verknüpft als ein Signal ausgegeben.

Bedeutung für gesetztes Bit:
Zugehöriger Nocken (Minus- und Plus-Nockensignal "EXKLUSIV-ODER"-verknüpft) wird über Timer-Interrupt auf einem der 4 On-Board-Ausgänge der NCU ausgegeben.

Die On-Board-Ausgänge werden in der Reihenfolge der aufsteigenden Maschinenachsnummern (mit zugeordneten Nockenpaaren) belegt.

Beispiel:
Maschinenachse 3  = Nockenpaar 1  --&gt;   On-Board-Ausgang 3
Maschinenachse 1  = Nockenpaar 2  --&gt;   On-Board-Ausgang 1
Maschinenachse 7  = Nockenpaar 3  --&gt;   On-Board-Ausgang 4
Maschinenachse 2  = Nockenpaar 4  --&gt;   On-Board-Ausgang 2

Sind für eine Maschinenachse mehrere Nockenpaare gesetzt, so erfolgt die Zuordnung für diese Achse in aufsteigender Reihenfolge der Nockenpaare.
Beispiel:
Maschinenachse 3  = Nockenpaar 1  --&gt;   On-Board-Ausgang 2
Maschinenachse 3  = Nockenpaar 2  --&gt;   On-Board-Ausgang 3
Maschinenachse 7  = Nockenpaar 3  --&gt;   On-Board-Ausgang 4
Maschinenachse 2  = Nockenpaar 4  --&gt;   On-Board-Ausgang 1

Diese Funktion arbeitet unabhängig von der in MD10470 $MN_SW_CAM_ASSIGN_FASTOUT_1 bzw. MD10471 $MN_SW_CAM_ASSIGN_FASTOUT_2 getroffenen Zuordnung.

Hinweis:
	Das On-Board-Byte darf nicht mehrfach verwendet werden.

Steht für die in dem MD angegebenen Nockenpaare mehr als ein Signalwechsel im IPO-Takt an, so bestimmt das Nockenpaar mit der niedrigsten Nummer den Ausgabezeitpunkt. Die anderen Signalwechsel erfolgen zum selben Zeitpunkt.
</description>
</parameter>
<parameter number="10485" type="UDWORD" dim="0" display="HEX">
<name>SW_CAM_MODE</name>
<brief>Verhalten der SW-Nocken</brief>
<description>Bedeutung der einzelnen Bits:
Bit 0(LSB) = 0:
	Steht für die im MD10480 $MN_SW_CAM_TIMER_FASTOUT_MASK angegebenen Nocken mehr als 1 Signalwechsel im IPO-Takt an, so bestimmt der Nocken mit der niedrigsten Nummer den Ausgabezeitpunkt. Die anderen Signalwechsel erfolgen zum selben Zeitpunkt. D.h. pro IPO-Takt erfolgt max. eine interruptgesteuert Ausgabe.

Bit 0(LSB) = 1:
	Jede im MD10480 $MN_SW_CAM_TIMER_FASTOUT_MASK angegebene Nocke wird zeitgenau im IPO-Takt ausgegeben. Es gibt keine Ausgabeprioritäten der Nocken. Pro Ipo-Takt können max. 8 interruptgesteuerte Ausgaben erfolgen.

Bit 1 = 0:
	Invertierung des Signalverhaltes vom Plusnocken bei Plusnocken - Minusnocken&gt;= 180 grd .

Bit 1 = 1:
	Keine Invertierung des Signalverhaltens vom Plusnocken bei Plusnocken - Minusnocken&gt;= 180 grd.
	Signalverhalten On-Board Ausgang:
	Überfahren von:
	Minus-Nocken Plus-Nocken
	Verfahrrichtung:
	positiv   0-&gt;1          1-&gt;0
	negativ   1-&gt;0          0-&gt;1

Bit 2 = 0:
	kein Weg-Zeit-Nocken

Bit 2 = 1:
	Weg-Zeit-Nocken für Nocken mit Minusposition = Plusposition. Die applizierte Vorhalte/Verzögerungszeit verläuft unabhängig von:
- der Achsgeschwindigkeit
- der Achsposition
- einer Verfahrrichtungsumkehr
	Die Nockenaktivierung erfolgt nur beim Überfahren der Nockenposition. Eine applizierte Vorhalte/Verzögerungszeit für den Minus-Nocken ist wirksam und führt zur Verschiebung der gesamten Nocke.

Bit 3 = 0:
	Kein Justagesignal beim bereichsgenauen Messen.

Bit 3 = 1:
	Ausgabe eines Justagesignals für bereichsgenaues Messen (nur FM). Es wird fest der On-Board Ausgang 8 verwendet.
	On-Board Ausgang 8 = 1: Messen möglich (Scharfbereich aktiv)
	On-Board Ausgang 8 = 0: Messen nicht möglich

Bit 4 = 0:
	und folgende frei
</description>
</parameter>
<parameter number="10490" type="DOUBLE" dim="0">
<name>SW_CAM_COMP_NCK_JITTER</name>
<brief>Nocken-Jitter-Kompensation</brief>
<description>Der Kompensationswert reduziert systembedingte Zeitungenauigkeiten bei der Ausgabe der hochgenauen Nockensignale. Die eingestellte Zeit belastet die zyklische Zeitebene der Steuerung und sollte deshalb so niedrig wie nötig gewählt werden. Zur Einstellung empfiehlt es sich, ein Nockensignal auf einen Messeingang der Steuerung zurückzuführen und den Kompensationswert so lange zu erhöhen, bis die Streuung der gemessenen Positionen nicht weiter verringert werden kann.
Wirkt z.Z. nur bei MD10485 $MN_SW_CAM_MODE Bit0 = 0
</description>
</parameter>
<parameter number="10500" type="DWORD" dim="1">
<name>DPIO_LOGIC_ADDRESS_IN</name>
<brief>Logische Slotadresse der PROFIBUS/PROFINET-Peripherie</brief>
<description>Logische Slotadresse der von NCK nutzbaren PROFIBUS/PROFINET-Peripherie.
</description>
</parameter>
<parameter number="10501" type="DWORD" dim="1">
<name>DPIO_RANGE_LENGTH_IN</name>
<brief>Länge des PROFIBUS/PROFINET-Peripherie-Bereichs</brief>
<description>Länge des vom NCK durchgängig zugreifbaren PROFIBUS/PROFINET-Peripherie Bereiches in Byte. Dieser Bereich muss in STEP 7, HW-Konfig festgelegt werden.
 0: Es wird nur der erste Datenslot benutzt.
 x: Länge des durchgängig PROFIBUS/PROFINET-Peripherie Bereiches in Byte
    Hinweis: Bei PROFINET können mehrere Slots nicht zu einem Bereich zusammengefasst werden.
</description>
</parameter>
<parameter number="10502" type="UDWORD" dim="1" display="HEX">
<name>DPIO_RANGE_ATTRIBUTE_IN</name>
<brief>Attribute der PROFIBUS/PROFINET-Peripherie</brief>
<description>Attribute der PROFIBUS/PROFINET-Peripherie

  Bit 0: Little-/Big-Endian Formatdarstellung der Systemvariablen $A_DPx_IN[n,m]
         0: Little-Endian Format
         1: Big-Endian Format

  Bit 1: (reserviert)

  Bit 2: Lesen von Eingangsdaten
         0: Lesen über Systemvariable und CC-Binding möglich. (erhöhter Performancebedarf)
         1: Lesen nur für CC-Binding möglich. (geringerer Performancebedarf)

  Bit 3: Slot-Lebenszeichen-Alarme
         0: Slot-Lebenszeichen-Alarme werden ausgegeben.
         1: Slot-Lebenszeichen-Alarme werden unterdrückt.

  Bit 4...7: (reserviert für Erweiterungen)

  Bit 8...31: reserviert für die Zuordnung zu Compile-Zyklen-Funktionen (siehe Dokumentation der CC-Funktion)
</description>
</parameter>
<parameter number="10510" type="DWORD" dim="1">
<name>DPIO_LOGIC_ADDRESS_OUT</name>
<brief>Logische Slotadresse der PROFIBUS/PROFINET-Peripherie</brief>
<description>Logische Slotadresse der von NCK nutzbaren PROFIBUS/PROFINET-Peripherie.
Hinweis: Die Logische Slotadresse muss ausserhalb des PLC-Prozessabbildes liegen.
</description>
</parameter>
<parameter number="10511" type="DWORD" dim="1">
<name>DPIO_RANGE_LENGTH_OUT</name>
<brief>Länge des PROFIBUS-Peripherie-Bereichs</brief>
<description>Länge des vom NCK durchgängig zugreifbaren PROFIBUS-Peripherie Bereiches in Byte. Dieser Bereich muss in STEP 7, HW-Konfig festgelegt werden.
 0: Es wird nur der erste Datenslot benutzt.
 x: Länge des durchgängig PROFIBUS-Peripherie Bereiches in Byte
    Hinweis: Bei PROFINET können mehrere Slots nicht zu einem Bereich zusammengefasst werden.
</description>
</parameter>
<parameter number="10512" type="UDWORD" dim="1" display="HEX">
<name>DPIO_RANGE_ATTRIBUTE_OUT</name>
<brief>Attribute der PROFIBUS/PROFINET-Peripherie</brief>
<description>Attribute der PROFIBUS/PROFINET-Peripherie
  Bit 0: Little-/Big-Endian Formatdarstellung der Systemvariablen $A_DPx_OUT[n,m]
         0: Little-Endian Format
         1: Big-Endian Format

  Bit 1: Schreiben von Ausgangsdaten
         0: Schreiben nur über Systemvariable
         1: Schreiben nur über CC-Binding

  Bit 2: (reserviert)

  Bit 3: Slot-Lebenszeichen-Alarme
         0: Slot-Lebenszeichen-Alarme werden ausgegeben.
         1: Slot-Lebenszeichen-Alarme werden unterdrückt.

  Bit 4...7: (reserviert für Erweiterungen)

  Bit 8...31: reserviert für die Zuordnung zu Compile-Zyklen-Funktionen (siehe Dokumentation der CC-Funktion)
</description>
</parameter>
<parameter number="10520" type="DWORD" dim="1">
<name>PLCINTERN_LOGIC_ADDRESS_IN</name>
<brief>Log. Basisadresse für HW-PLC-Zugriff auf Inputslots am internen PROFIBUS</brief>
<description>Logische Basisadresse der durch die HW-PLC nutzbaren PROFIBUS-Peripherie am internen PROFIBUS. Nur bei HW-PLC relevant.
</description>
</parameter>
<parameter number="10525" type="DWORD" dim="1">
<name>PLCINTERN_LOGIC_ADDRESS_OUT</name>
<brief>Log. Basisadresse für HW-PLC-Zugriff auf Outputslots am internen PROFIBUS</brief>
<description>Logische Basisadresse der durch die HW-PLC nutzbaren PROFIBUS-Peripherie am internen PROFIBUS. Nur bei HW-PLC relevant.
</description>
</parameter>
<parameter number="10530" type="BYTE" dim="1">
<name>COMPAR_ASSIGN_ANA_INPUT_1</name>
<brief>Hardware-Zuordnung der Analogeingänge für Komparatorbyte 1</brief>
<description>Hiermit werden die Analogeingänge 1 bis 8 einer Bit-Nummer des Komparatorbytes 1 zugeordnet. Dieses Eingangsbit des Komparators wird auf "1" gesetzt, wenn beim Vergleich des anliegenden Analogwertes mit dem zugehörigen Schwellwert (SD41600 $SN_COMPAR_THRESHOLD_1) die mit dem (MD10540 $MN_COMPAR_TYPE_1) parametrierte Bedingung erfüllt.

Dabei kann ein Analogeingang mehreren Komparator-Eingangsbits zugeordnet werden.

Allgemein gilt für Komparatorbyte 1:

	COMPAR_ASSIGN_ANA_INPUT_1 [b] = n
	mit Index:      b = Nummer des Komparator-Eingangsbits (0 bis 7)
	                n = Nummer des Analogeingangs (1 bis 8)

Beispiel:
           COMPAR_ASSIGN_ANA_INPUT_1[0] = 1
           COMPAR_ASSIGN_ANA_INPUT_1[1] = 2
           COMPAR_ASSIGN_ANA_INPUT_1[2] = 1
           COMPAR_ASSIGN_ANA_INPUT_1[3] = 3
           COMPAR_ASSIGN_ANA_INPUT_1[4] = 3
           COMPAR_ASSIGN_ANA_INPUT_1[5] = 1
           COMPAR_ASSIGN_ANA_INPUT_1[6] = 1
           COMPAR_ASSIGN_ANA_INPUT_1[7] = 1

Analogeingang 1 wirkt auf Eingangsbit 0, 2, 5, 6 und 7 des Komparatorbytes 1
Analogeingang 2 wirkt auf Eingangsbit 1 des Komparatorbytes 1
Analogeingang 3 wirkt auf Eingangsbit 3 und 4 des Komparatorbytes 1

Korrespondiert mit:
	MD10540 $MN_COMPAR_TYPE_1
	MD10541 $MN_COMPAR_TYPE_2
</description>
</parameter>
<parameter number="10531" type="BYTE" dim="1">
<name>COMPAR_ASSIGN_ANA_INPUT_2</name>
<brief>Hardware-Zuordnung der Analogeingänge für Komparatorbyte 2</brief>
<description>Hiermit werden die Analogeingänge 1 bis 8 einer Bit-Nummer des Komparatorbytes 2 zugeordnet. Dieses Eingangsbit des Komparators wird auf "1" gesetzt, wenn beim Vergleich des anliegenden Analogwertes mit dem zugehörigen Schwellwert (SD41601 $SN_COMPAR_THRESHOLD_2) die mit dem (MD10541 $MN_COMPAR_TYPE_2) parametrierte Bedingung erfüllt.

Dabei kann ein Analogeingang mehreren Komparator-Eingangsbits zugeordnet werden.

Allgemein gilt für Komparatorbyte 2:
            COMPAR_ASSIGN_ANA_INPUT_2 [b] = n
            mit Index: b = Nummer des Komparator-Eingangsbits (0 bis 7)
                       n = Nummer des Analogeingangs (1 bis 8)

Beispiel:
	COMPAR_ASSIGN_ANA_INPUT_2[0] = 1
	COMPAR_ASSIGN_ANA_INPUT_2[1] = 2
	COMPAR_ASSIGN_ANA_INPUT_2[2] = 1
	COMPAR_ASSIGN_ANA_INPUT_2[3] = 3
	COMPAR_ASSIGN_ANA_INPUT_2[4] = 3
	COMPAR_ASSIGN_ANA_INPUT_2[5] = 1
	COMPAR_ASSIGN_ANA_INPUT_2[6] = 1
	COMPAR_ASSIGN_ANA_INPUT_2[7] = 1

Analogeingang 1 wirkt auf Eingangsbit 0, 2, 5, 6 und 7 des Komparatorbytes 2
Analogeingang 2 wirkt auf Eingangsbit 1 des Komparatorbytes 2
Analogeingang 3 wirkt auf Eingangsbit 3 und 4 des Komparatorbytes 2

Korrespondiert mit:
	MD10540 $MN_COMPAR_TYPE_1
	MD10541 $MN_COMPAR_TYPE_2
</description>
</parameter>
<parameter number="10540" type="UDWORD" dim="0" display="HEX">
<name>COMPAR_TYPE_1</name>
<brief>Parametrierung für Komparatorbyte 1</brief>
<description>Mit diesem MD können für die einzelnen Ausgangsbits (0 bis 7) des Komparatorbytes 1 folgende Einstellungen gesetzt werden:

- Bit 0 bis 7:        Vergleichstyp-Maske (für Komparator-Ausgangsbit 0 bis 7)
          Bit = 1: Ausgangsbit = 1, wenn Analogwert&gt;= Schwellwert
          Bit = 0: Ausgangsbit = 1, wenn Analogwert &lt; Schwellwert
          (Schwellwertvorgabe mit SD41600 $SN_COMPAR_THRESHOLD_1)

- Bit 8 bis 15:       nicht belegt (ist definiert auf 0 zu setzen)

- Bit 16 bis 23:     Zuweisung eines HW-Ausgangsbytes für die Ausgabe der
          Komparatorzustände (Angabe der Byteadresse)
          Byte = 0:  keine Ausgabe über digitale NC-Ausgänge
          Byte = 1:  Ausgabe über digitale Onboard-NC-Ausgänge (1 bis 4)
          Byte = 2:  Ausgabe über externe digitale NC-Ausgänge 9 bis 16
          Byte = 3:  Ausgabe über externe digitale NC-Ausgänge 17 bis 24
          Byte = 4:  Ausgabe über externe digitale NC-Ausgänge 25 bis 32
          Byte = 5:  Ausgabe über externe digitale NC-Ausgänge 33 bis 40

- Bit 24 bis 31:     Invertiermaske für die Ausgabe der Komparatorzustände (Bit 0 bis 7)
          Bit = 0:   Ausgangsbit wird nicht invertiert
          Bit = 1:   Ausgangsbit wird invertiert

Korrespondiert mit:
	MD10530 $MN_COMPAR_ASSIGN_ANA_INPUT_1
	MD10531 $MN_COMPAR_ASSIGN_ANA_INPUT_2
	SD41600 $SN_COMPAR_THRESHOLD_1
	SD41601 $SN_COMPAR_THRESHOLD_2
	MD10360 $MN_FASTIO_DIG_NUM_OUTPUTS
</description>
</parameter>
<parameter number="10541" type="UDWORD" dim="0" display="HEX">
<name>COMPAR_TYPE_2</name>
<brief>Parametrierung für Komparatorbyte 2</brief>
<description>Mit diesem MD können für die einzelnen Ausgangsbits (0 bis 7) des Komparatorbytes 2 folgende Einstellungen gesetzt werden:

- Bit 0 bis 7: Vergleichstyp-Maske (für Komparator-Ausgangsbit 0 bis 7)
    Bit = 1:  Ausgangsbit = 1, wenn Analogwert &gt;= Schwellwert
    Bit = 0:  Ausgangsbit = 1, wenn Analogwert &lt;  Schwellwert
    (Schwellwertvorgabe mit SD41601 $SN_COMPAR_THRESHOLD_2)

- Bit 8 bis 15: nicht belegt (ist definiert auf 0 zu setzen)

- Bit 16 bis 23: Zuweisung eines HW-Ausgangsbytes für die Ausgabe der Komparatorzustände (Angabe der Byteadresse)

- Byte = 0:        keine Ausgabe über digitale NC-Ausgänge
    Byte = 1:        Ausgabe über digitale Onboard-NC-Ausgänge (1 bis 4)
    Byte = 2:        Ausgabe über externe digitale NC-Ausgänge 9 bis 16
    Byte = 3:        Ausgabe über externe digitale NC-Ausgänge 17 bis 24
    Byte = 4:        Ausgabe über externe digitale NC-Ausgänge 25 bis 32
    Byte = 5:        Ausgabe über externe digitale NC-Ausgänge 33 bis 40

- Bit 24 bis 31:    Invertiermaske für die Ausgabe der Komparatorzustände (Bit 0 bis 7)
    Bit = 0:         Ausgangsbit wird nicht invertiert
    Bit = 1:         Ausgangsbit wird invertiert

Korrespondiert mit:
	MD10530 $MN_COMPAR_ASSIGN_ANA_INPUT_1
	MD10531 $MN_COMPAR_ASSIGN_ANA_INPUT_2
	SD41600 $SN_COMPAR_THRESHOLD_1
	SD41601 $SN_COMPAR_THRESHOLD_2
	MD10360 $MN_FASTIO_DIG_NUM_OUTPUTS
</description>
</parameter>
<parameter number="10600" type="BYTE" dim="0">
<name>FRAME_ANGLE_INPUT_MODE</name>
<brief>Drehreihenfolge in FRAME</brief>
<description>Durch FRAME_ANGLE_INPUT_MODE wird eingestellt, wie die Drehungen (ROT und AROT) um die drei Geometrieachsen festgelegt sind, wenn mehr als eine Drehung in einem Satz programmiert ist. Dabei ist es unerheblich, in welcher Reihenfolge diese Drehungen innerhalb des Satzes programmiert sind.

Eingestellt werden kann eine Verrechnung der Drehungen nach:

- Eulerwinkel mit FRAME_ANGLE_INPUT_MODE = 2
	Die Verrechnung der Drehung nach Eulerwinkel erfolgt in folgender Reihenfolge:
	1. Drehung um Z
	2. Drehung um X
	3. Drehung um Z

- RPY mit FRAME_ANGLE_INPUT_MODE = 1
	Die Verrechnung der Drehung nach RPY erfolgt in folgender Reihenfolge:
	1. Drehung um Z
	2. Drehung um Y
	3. Drehung um X
</description>
</parameter>
<parameter number="10602" type="BYTE" dim="0">
<name>FRAME_GEOAX_CHANGE_MODE</name>
<brief>Frames beim Umschalten von Geometrieachsen</brief>
<description>Geometrieachsen können in folgenden Zuständen umgeschaltet werden:
- An- und Abwahl von Transformationen
- Umschaltbaren Geometrieachsen GEOAX()

Das aktuelle Gesamtframe ergibt sich dann wie folgt:
0:	Das aktuelle Gesamtframe wird gelöscht.

1:	Das aktuelle Gesamtframe wird beim Umschalten von Geometrieachsen neu berechnet, wobei die Translationen, Skalierungen und Spiegelungen der neuen Geometrieachsen wirksam werden. Die Drehungen der alten Geometrieachsen bleiben erhalten.

2:	Das aktuelle Gesamtframe wird beim Umschalten von Geometrieachsen neu berechnet, wobei die Translationen, Skalierungen und Spiegelungen der neuen Geometrieachsen wirksam werden. Sind vor der Umschaltung in den aktuellen Basisframes, dem aktuellen einstellbarem Frame oder im programmierbaren Frame, Drehungen aktiv, so wird die Umschaltung mit Alarm abgebrochen.

3:	Das aktuelle Gesamtframe wird bei An- und Abwahl von Transformationen gelöscht. Beim GEOAX()-Befehl wird das Frame neu berechnet, wobei Transaktion, Skalierung und Spiegelung der neuen Geometrieachsen wirksam werden. Die Drehungen der aktuellen Geometrieachsen bleiben erhalten.
</description>
</parameter>
<parameter number="10604" type="BYTE" dim="0">
<name>WALIM_GEOAX_CHANGE_MODE</name>
<brief>Arbeitsfeldbegrenzung beim Umschalten von Geometrieachsen</brief>
<description>Mit diesem Maschinendatum wird festgelegt, ob beim Geoachstausch eine eventuell aktive Arbeitsfeldbegrenzung erhalten bleibt oder deaktiviert wird.
Die MD-Werte haben folgende Bedeutungen:
= 0  Arbeitsfeldbegrenzung wird bei Geoachstausch deaktiviert.
= 1  Arbeitsfeldbegrenzung bleibt bei Geoachstausch aktiviert.
</description>
</parameter>
<parameter number="10610" type="BYTE" dim="0">
<name>MIRROR_REF_AX</name>
<brief>Bezugsachse für das Spiegeln.</brief>
<description>0: Spiegelung erfolgt immer in der angegebenen Achse, ohne Normierung.

Die Spiegelung einer Geometrieachse kann immer auf eine festgelegte Bezugsache
bezogen werden.

1: x ist Bezugsachse
	Spiegeln der x-Achse ist eindeutig.
	Spiegeln der y-Achse wird abgebildet auf:
	  eine Spiegelung der x-Achse und
	  eine Drehung der z-Achse um 180 Grad.
	Spiegeln der z-Achse wird abgebildet auf:
	  eine Spiegelung der x-Achse und
	  Drehung der x-Achse um 180 Grad und
	  Drehung der z-Achse um 180 Grad

2: y ist Bezugsachse
	Spiegeln der x-Achse wird abgebildet auf:
	  eine Spiegelung der y-Achse und
	  eine Drehung der z-Achse um 180 Grad.
	Spiegeln der y-Achse ist eindeutig.
	Spiegeln der z-Achse wird abgebildet auf:
	  eine Spiegelung der y-Achse und
	  Drehung der x-Achse um 180 Grad

3: z ist Bezugsachse
	Spiegeln der x-Achse wird abgebildet auf:
	  eine Spiegelung der z-Achse und
	  Drehung der z-Achse um 180 Grad und
	  Drehung der x-Achse um 180 Grad
	Spiegeln der y-Achse wird abgebildet auf:
	  eine Spiegelung der z-Achse und
	  eine Drehung der x-Achse um 180 Grad.
	Spiegeln der z-Achse ist eindeutig.
</description>
</parameter>
<parameter number="10612" type="BYTE" dim="0">
<name>MIRROR_TOGGLE</name>
<brief>Mirror umschalten</brief>
<description>Mirror Togglefunktion.
1:	Programmierte Achswerte werden nicht ausgewertet. Toggle-Schaltverhalten.
0:	Programmierte Achswerte werden ausgewertet.
Bei Werte ungleich 0 wird die Achse gespiegelt, wenn sie noch nicht gespiegelt ist. Bei einem Wert gleich 0 wird eine Spiegelung ausgeschaltet.
</description>
</parameter>
<parameter number="10613" type="UDWORD" dim="0" display="HEX">
<name>NCBFRAME_RESET_MASK</name>
<brief>Aktive NCU-globale Basisframes nach Reset</brief>
<description>Bitmaske für die Reseteinstellung der NCU-globalen Basisframes, die im Kanal eingerechnet werden.
Es gilt:
Bei MD20110 $MC_RESET_MODE_MASK Bit0 = 1 und BIT14 = 1
	Gesamt-Basisframe bei Reset ergibt sich aus der Verkettung der NCU-globalen Basisframe-Feldelemente, deren Bit in der Bitmaske 1 ist.

Bei MD20110 $MC_RESET_MODE_MASK Bit0 = 1 und BIT14 = 0
	Das Gesamt-Basisframe wird bei Reset abgewählt.
</description>
</parameter>
<parameter number="10615" type="UDWORD" dim="0" display="HEX">
<name>NCBFRAME_POWERON_MASK</name>
<brief>Globale Basisframes nach Power On zurücksetzen</brief>
<description>Mit diesem Maschinendatum wird festgelegt, ob globale Basisframes bei Power On in der Datenhaltung zurückgesetzt werden.
D.h.
- Verschiebungen werden auf 0,
- Skalierungen auf 1 gesetzt.
- Spiegeln wird ausgeschaltet.
Die Anwahl kann für die einzelnen Basisframes getrennt erfolgen.
Bit 0 entspricht Basisframe 0,  Bit 1 Basisframe 1 etc.
Wert=0: Basisframe bleibt bei Power On erhalten
Wert=1: Basisframe wird bei Power On in der Datenhaltung zurückgesetzt.

Korrespondiert mit:
	MD24004 $MC_CHBFRAME_POWERON_MASK
</description>
</parameter>
<parameter number="10616" type="UDWORD" dim="0" display="HEX">
<name>MAPPED_FRAME_MASK</name>
<brief>Freigabe Frame-Mapping</brief>
<description>Bitmaske von kanalspezifischen Datenhaltungsframes, deren axiale Frames auf andere axiale Frames abgebildet werden können.
Das Mapping erfolgt über MD32075 $MA_MAPPED_FRAME[AXn] = "AXm".

Bit 0:	$P_SETFR	Systemframe für Istwertsetzen und Ankratzen
Bit 1:	$P_EXTFR	Systemframe für Externe Nullpunktverschiebung
Bit 2:	$P_PARTFR	Systemframe für TCARR und PAROT
Bit 3:	$P_TOOLFR	Systemframe für TOROT und TOFRAME
Bit 4:	$P_WPFR	Systemframe für Werkstückbezugspunkte
Bit 5:	$P_CYCFR	Systemframe für Zyklen
Bit 6:	$P_TRAFR	Systemframe für Transformationen
Bit 7:	$P_ISO1FR	Systemframe für ISO G51.1 Mirror
Bit 8:	$P_ISO2FR	Systemframe für ISO G68 2DROT
Bit 9:	$P_ISO3FR	Systemframe für ISO G68 3DROT
Bit 10:	$P_ISO4FR	Systemframe für ISO G51 Scale
Bit 11:     $P_RELFR	Systemframe für relative Koordinatensysteme
Bit12:	$P_CHBFR	Kanalspezifische Basisframes
Bit13:	$P_UIFR	Einstellbare Frames
Bit14:	$P_GFR		Grinding Frames
</description>
</parameter>
<parameter number="10617" type="UDWORD" dim="0" display="HEX">
<name>FRAME_SAVE_MASK</name>
<brief>Verhalten von Frames bei SAVE-Unterprogrammen</brief>
<description>Mit diesem Maschinendatum wird festgelegt, welche Frames beim Rücksprung aus einem Unterprogramm mit SAVE-Attribut restauriert werden.

Bit 0: Einstellbare Frames G54 bis G599

Wert = 0:
Ist beim Unterprogramm-Rücksprung der selbe G-Code aktiv wie beim Unterprogrammaufruf, so wird der aktive einstellbare Frame beibehalten. Ist dies nicht der Fall, wird der einstellbare Frame zum Zeitpunkt des Unterprogrammaufrufs reaktiviert.

Wert = 1:
Beim Unterprogramm-Rücksprung wird der einstellbare Frame zum Zeitpunkt des Unterprogrammaufrufs reaktiviert.

Bit 1: Basisframe

Wert = 0:
Der aktive Basisframe wird beim Unterprogrammrücksprung nicht verändert. Dies ist auch der Fall, wenn im Unterprogramm eine Basisframeänderung durch eine Bedienhandlung oder durch eine implizite Frameabwahl (ggf. durch TRAFOOF) erfolgt.

Wert = 1:
Beim Unterprogramm-Rücksprung wird der Basisframe zum Zeitpunkt des Unterprogrammaufrufs reaktiviert.

Bit 2: Grinding Frames GFRAME0 bis GFRAME100

Wert = 0:
Ist beim Unterprogramm-Rücksprung der selbe G-Code aktiv wie beim Unterprogrammaufruf, so wird der aktive Grinding Frame beibehalten. Ist dies nicht der Fall, wird der Grinding Frame zum Zeitpunkt des Unterprogrammaufrufs reaktiviert.

Wert = 1:
Beim Unterprogramm-Rücksprung wird der Grinding Frame zum Zeitpunkt des Unterprogrammaufrufs reaktiviert.
</description>
</parameter>
<parameter number="10618" type="UBYTE" dim="0" display="HEX">
<name>PROTAREA_GEOAX_CHANGE_MODE</name>
<brief>Schutzbereich beim Umschalten von Geometrieachsen</brief>
<description>Mit diesem Maschinendatum wird festgelegt, ob beim Wechsel einer Transformation oder beim Geoachstausch eventuell aktive Schutzbereiche erhalten bleiben oder deaktiviert werden.

Das Maschinendatum ist bitkodiert mit folgenden Bedeutungen:

Bit 0 = 0:
	Schutzbereiche werden bei Transformationswechsel deaktiviert.
Bit 0 = 1:
	Aktive Schutzbereiche bleiben bei Transformationswechsel aktiviert.

Bit 1 = 0:
	Schutzbereiche werden bei Geoachstausch deaktiviert.
Bit 1 = 1:
	Aktive Schutzbereiche bleiben bei Geoachstausch aktiviert.
</description>
</parameter>
<parameter number="10619" type="DOUBLE" dim="0">
<name>COLLISION_TOLERANCE</name>
<brief>Toleranz für Kollisionsprüfung</brief>
<description>Mit diesem Parameter kann die geforderte Genauigkeit der Kollisionsprüfung eingestellt werden. Das bedeutet: Zwei Schutzbereiche, deren Abstand geringer als dieser Wert ist, können schon als kollidierend gemeldet werden. Und andererseits: Zwei Schutzbereiche, die sich um weniger als diesen Wert durchdringen, können als nicht kollidierend eingestuft werden.
</description>
</parameter>
<parameter number="10620" type="STRING" dim="1">
<name>EULER_ANGLE_NAME_TAB</name>
<brief>Name der Eulerwinkel</brief>
<description>- Der eingegebene Name darf nicht mit der Benennung und Zuordnung der Maschinen- und Geometrieachsnamen kollidieren.
- Der eingegebene Name darf sich nicht mit Kanalachsnamen im Kanal (MD20080 $MC_AXCONF_CHANAX_NAME_TAB), Namen für Richtungsvektoren (MD10640 $MN_DIR_VECTOR_NAME_TAB), Namen für Zwischenkreispunktkoordinaten bei CIP(MD10660 $MN_INTERMEDIATE_POINT_NAME_TAB) und den Namen für Interpolationsparameter (MD10650 $MN_IPO_PARAM_NAME_TAB) überschneiden.
- Der eingegebene Name darf  folgende reservierte Adressbuchstaben nicht annehmen:

 -  D             Werkzeugkorrektur (D-Funktion)
 -  E             reserviert
 -  F             Vorschub (F-Funktion)
 -  G             Wegbedingung
 -  H             Hilfsfunktion (H-Funktion)
 -  L             Unterprogrammaufruf
 -  M             Zusatzfunktion (M-Funktion)
 -  N             Nebensatz
 -  P             Unterprogrammdurchlaufzahl
 -  R             Rechenparameter
 -  S             Spindeldrehzahl (S-Funktion)
 -  T             Werkzeug (T-Funktion)

- Ebenfalls unzulässig sind Schlüsselworte (z.B. DEF, SPOS etc.) und  vordefinierte Bezeichner (z.B. ASPLINE, SOFT).
- Ein Winkelbezeichner besteht aus einem gültigen Adressbuchstaben (A, B, C, I, J, K, Q, U, V, W, X, Y, Z), gefolgt von einer optionalen numerischen Erweiterung (1-99).
</description>
</parameter>
<parameter number="10621" type="DOUBLE" dim="0">
<name>COLLISION_PREP_CALC_TIME</name>
<brief>Maximale Rechenzeit der präparativen Kollisionsprüfung.</brief>
<description>Mit diesem Maschinendatum wird die maximale Rechenzeit der präparativen Kollisionsprüfung eingestellt.
&gt;0: nach der eingestellten Zeit wird die präparativen Kollisionsprüfung des aktuellen Satzes unterbrochen. Damit wird der externen Kommunikation Rechenzeit zur Verfügung gestellt.
  0:  die präparativen Kollisionsprüfung wird nicht unterbrochen. Damit wird der externen Kommunikation während der Kollisionsprüfung keine Rechenzeit zur Verfügung gestellt.
      In Extremfällen kann ein Kommunikationsausfall zwischen HMI und NCK entstehen.

Es wird ein Wert von 0.5s empfohlen.
</description>
</parameter>
<parameter number="10622" type="DOUBLE" dim="0">
<name>COLLISION_SAFETY_DIST</name>
<brief>Sicherheitsabstand für Kollisionsprüfung</brief>
<description>Wird der Abstand zwischen zwei Schutzbereichen kleiner als dieser Sicherheitsabstand, wird dies als Kollision gewertet. Dieses Maschinendatum wirkt global für Schutzbereichspaare, für die kein spezieller Sicherheitsabstand angegeben wurde (s. Funktion COLLCHECK).
</description>
</parameter>
<parameter number="10624" type="STRING" dim="1">
<name>ORIPATH_LIFT_VECTOR_TAB</name>
<brief>Name des Abhebevektors für bahnrelative Orientierung</brief>
<description>Bezeichnerliste für Komponenten des Abhebevektors während Umorientierungen bei bahnrelativer Interpolation der Werkzeugorientierung.

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner. Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Normalenvektor, Richtungsvektor, Vektoren für Kegelinterpolation, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10626" type="STRING" dim="0">
<name>ORIPATH_LIFT_FACTOR_NAME</name>
<brief>Name des relativen Sicherheitsabstands bei ORIPATH</brief>
<description>Bezeichner für relativen Faktor zur Festlegung eines Sicherheitsabstandes für die Abhebebewegung während Umorientierungen bei bahnrelativer Interpolation der Werkzeugorientierung.

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner. Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Normalenvektor, Richtungsvektor, Vektoren für Kegelinterpolation, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10630" type="STRING" dim="1">
<name>NORMAL_VECTOR_NAME_TAB</name>
<brief>Name der Normalvektoren</brief>
<description>Normalen-Vektor-Programmierung ab SW 3.2

Bezeichnerliste der Normalenvektor-Komponenten am Satzanfang und Satzende.

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Eulerwinkel, Richtungsvektor, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10640" type="STRING" dim="1">
<name>DIR_VECTOR_NAME_TAB</name>
<brief>Name der Richtungsvektoren</brief>
<description>Bezeichnerliste der Richtungsvektor-Komponenten (A3 bis C3)

Bezeichnerliste der Vektor-Komponenten senkrecht zum Richtungsvektor(AN3 bis CN3)

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Eulerwinkel, Normalenvektor, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10642" type="STRING" dim="1">
<name>ROT_VECTOR_NAME_TAB</name>
<brief>Name der Drehvektoren</brief>
<description>Bezeichnerliste der Drehvektor-Komponenten in Kegelrichtung

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Eulerwinkel, Normalenvektor, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10644" type="STRING" dim="1">
<name>INTER_VECTOR_NAME_TAB</name>
<brief>Name der Zwischenvektor-Komponente</brief>
<description>Bezeichnerliste der Zwischenvektor-Komponenten

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Eulerwinkel, Normalenvektor, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10646" type="STRING" dim="1">
<name>ORIENTATION_NAME_TAB</name>
<brief>Bezeichner für die Programmierung einer 2. Orientierungsbahn</brief>
<description>Bezeichnerliste für die Programmierung der 2. Raumkurve für die Werkzeugorientierung

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( Achsen, Eulerwinkel, Normalenvektor, Interpolationsparameter, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10648" type="STRING" dim="0">
<name>NUTATION_ANGLE_NAME</name>
<brief>Name des Öffnungswinkels</brief>
<description>Bezeichner für den Öffnungswinkel bei Orientierungs-Interpolation

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate etc.) entsteht.
</description>
</parameter>
<parameter number="10650" type="STRING" dim="1">
<name>IPO_PARAM_NAME_TAB</name>
<brief>Name der Interpolationsparameter</brief>
<description>Bezeichnerliste der Interpolationsparameter

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern (Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate) entsteht.

Korrespondiert mit:
	MD10651 $MN_IPO_PARAM_THREAD_NAME_TAB
	MD10660 $MN_INTERMEDIATE_POINT_NAME_TAB

Literatur:           /PG/, "Programmieranleitung Grundlagen"
</description>
</parameter>
<parameter number="10651" type="STRING" dim="1">
<name>IPO_PARAM_THREAD_NAME_TAB</name>
<brief>Name der Interpolationsparameter für ballige Gewinde</brief>
<description>Bezeichnerliste der Interpolationsparameter für ballige Gewinde

Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner.

Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern (Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate) entsteht.

Korrespondiert mit:
	MD10650 $MN_IPO_PARAM_NAME_TAB
	MD10660 $MN_INTERMEDIATE_POINT_NAME_TAB
</description>
</parameter>
<parameter number="10652" type="STRING" dim="0">
<name>CONTOUR_DEF_ANGLE_NAME</name>
<brief>Name des Winkels für Konturzüge</brief>
<description>Bezeichner für Konturzugwinkel
Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10654" type="STRING" dim="0">
<name>RADIUS_NAME</name>
<brief>Name des Radius für Konturzüge</brief>
<description>Bezeichner für Konturzugradius
Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10656" type="STRING" dim="0">
<name>CHAMFER_NAME</name>
<brief>Name der Fase für Konturzüge</brief>
<description>Bezeichner für Konturzugfase
Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10660" type="STRING" dim="1">
<name>INTERMEDIATE_POINT_NAME_TAB</name>
<brief>Name der Zwischenpunktkoordinaten bei G2/G3</brief>
<description>Bezeichnerliste der Zwischenpunkt-Koordinaten
Für die Wahl der Bezeichner gelten die bei MD20080 $MC_AXCONF_CHANAX_NAME_TAB beschriebenen Regeln für Achsbezeichner. Die Bezeichner müssen so gewählt werden, dass kein Konflikt mit anderen Bezeichnern (Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate, etc.) entsteht.

Korrespondiert mit:
	MD10650 $MN_IPO_PARAM_NAME_TAB
	MD10651 $MN_IPO_PARAM_THREAD_NAME_TAB

Literatur:          /PG/, "Programmieranleitung Grundlagen"
</description>
</parameter>
<parameter number="10670" type="STRING" dim="0">
<name>STAT_NAME</name>
<brief>Name der Stellungsinformation</brief>
<description>Bezeichner für Stellungsinformation zur Auflösung der Mehrdeutigkeiten beim
kartesischen PTP-Fahren
Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10672" type="STRING" dim="0">
<name>TU_NAME</name>
<brief>Name der Stellungsinformation der Achsen</brief>
<description>Bezeichner für Stellungsinformation der Achsen zur Auflösung der Mehrdeutig-
keiten beim kartesischen PTP-Fahren
Der Bezeichner muss so gewählt werden, dass kein Konflikt mit anderen Bezeichnern ( z. B. Achsen, Eulerwinkel, Normalenvektor, Richtungsvektor, Zwischenpunktkoordinate ) entsteht.
</description>
</parameter>
<parameter number="10674" type="BOOLEAN" dim="0">
<name>PO_WITHOUT_POLY</name>
<brief>Polynomprogrammierung ohne G-Funktion POLY programmierbar</brief>
<description>Bisher muss bei der Polynomprogrammierung mit PO[xx] = (xx) immer die G-Funktion
POLY aktiv sein, sonst wird ein Alarm ausgegeben.
Ist das MD10674 $MN_PO_WITHOUT_POLY auf TRUE gesetzt, wird bei der Polynomprogrammierung mit inaktivem POLY kein Alarm ausgegeben. Der Endpunkt des Polynoms wird dann mit der Geradeninterpolation G1 angefahren.
Bei inaktivem POLY wird keine Polynominterpolation durchgeführt.
</description>
</parameter>
<parameter number="10680" type="DOUBLE" dim="0">
<name>MIN_CONTOUR_SAMPLING_TIME</name>
<brief>Minimale Kontur Abtastzeit</brief>
<description>Minimal möglich Kontur Abtastzeit in Sekunden. Mit diesem Datum wird der mit dem MD10682 $MN_CONTOUR_SAMPLING_FACTOR eingebbare Wert, abhängig vom aktuellen Interpolationstakt der Steuerung, begrenzt.
</description>
</parameter>
<parameter number="10682" type="DOUBLE" dim="0">
<name>CONTOUR_SAMPLING_FACTOR</name>
<brief>Kontur Abtastfaktor</brief>
<description>Dieser Faktor legt das maximale Zeitintervall fest, mit dem eine gekrümmte Kontur im Interpolator abgetastet wird.
Die maximale Abtastzeit ergibt sich aus dem eingestellten Interpolationstakt
(siehe MD10071 $MN_IPO_CYCLE_TIME),
dem mit diesem Datum eingestellten Faktor und der mit den MD33100 $MA_COMPRESS_POS_TOL[] eingestellten Toleranz für die Geometrieachsen.
Als minimale Abtastzeit kann, die mit dem MD10680 $MN_MIN_CONTOUR_SAMPLING_TIME eingestellte Zeit nicht unterschritten werden.
</description>
</parameter>
<parameter number="10700" type="UBYTE" dim="0" display="HEX">
<name>PREPROCESSING_LEVEL</name>
<brief>Programmvorverarbeitungsstufe</brief>
<description>Bit 0= 0:
	keine Vorverarbeitung

Bit 0= 1:
	Im Steuerungshochlauf wird die Aufrufbeschreibung der Zyklen gebildet. Alle in den Directories _N_CUS_DIR, _N_CMA_DIR und _N_CST_DIR befindlichen Programme können im Teileprogramm ohne EXTERN-Erklärung aufgerufen werden. Wird die Parameter-Schnittstelle eines Zyklusses in der Steuerung geändert, so wird die Änderung erst nach Power On wirksam.

Bit 1=1:
	Im Steuerungshochlauf werden alle Zyklen die sich in den Directories _N_CUS_DIR, _N_CMA_DIR und _N_CST_DIR befinden in ein bearbeitungsoptimales Compilat vorverarbeitet. Diese Zyklen werden dann schneller abgearbeitet. Änderungen an den Zyklen-Programmen werden erst beim nächsten Power On wirksam.

Bit 2=1:
	Im Steuerungshochlauf werden die Siemenszyklen aus dem Verzeichnis _N_CST_DIR in ein bearbeitungsoptimales Compilat vorverarbeitet (ab SW 3.5).

Bit 3=1:
	Im Steuerungshochlauf werden die Anwenderzyklen aus dem Verzeichnis _N_CUS_DIR in ein bearbeitungsoptimales Compilat vorverarbeitet (ab SW 3.5).

Bit 4=1:
	Vorverarbeitung der Anwenderzyklen aus dem Directory _N_CMA_DIR

Bit 5=1:
	Es werden alle Dateien, die mit PREPRO in der PROG-Anweisungszeile gekennzeichnet sind vorverarbeitet. (ab SW 6.4)
Bit 5=0:
	Im Steuerungshochlauf werden alle Zyklen in den Verzeichnissen, die mit Bit 1 - 4 aktiviert wurden, vorverarbeitet. Das gilt auch für Programme, die nicht mit PREPRO gekennzeichnet sind.
Bit 6=1:
	Das Compilat wird im SRAM abgelegt, wenn DRAM nicht ausreicht. (ab SW 7.1).
 Für die Vorverarbeitung von Zyklen wird Speicherplatz benötigt. Durch selektives Setzen der Vorverarbeitung kann eine bessere Speicherausnutzung  erreicht werden:
	Die laufzeitkritischen Zyklen werden in einem Directory zusammengefasst. Die übrigen Zyklen stehen im anderen Directory.

Literatur:
	/PG/, "Programmieranleitung Grundlagen" (EXTERN-Deklaration)
</description>
</parameter>
<parameter number="10702" type="UDWORD" dim="0" display="HEX">
<name>IGNORE_SINGLEBLOCK_MASK</name>
<brief>Einzelsatzstopp verhindern</brief>
<description>Dieses Maschinendatum verhindert, dass auf bestimmten Sätzen  bei Einzelsatz
angehalten wird.

Mit folgenden Bits der Maske kann der Einzelsatzstopp verhindert werden:

Bit0 = 1
	bedeutet, dass in keinem Satz eines  internen ASUPs angehalten wird. Ausnahme: Der Einzelsatzstopp wurde explizit über den SBLON-Befehl aktiviert.

	Es gibt drei verschiedene interne ASUPs, die durch unterschiedliche Ereignisse ausgelöst werden.
	- Repos: bei den Ereignissen Betriebsartenwechsel in eine Handbetriebsart (JOG, JOGREF,...) außer MODESWITCH_MASK ist nicht gesetzt, Ein- bzw. Ausschalten von Satzausblenden,Maschinendatenwirksamsetzen Overstore-Einschalten, Achstausch, Unterprogammebenenabbruch, Einzelsatzeinschalten Ein- bzw. Ausschalten von Probelaufvorschub, Alarm mit Korrektursatz.

	- Return: Restweglöschen, Umschalten nach TEACH-IN (falls verfügbar), oder Abwahl von MDA mit entsprechender MODESWITCH_MASK.

	- _N_PROG_EVENT_SPF: durch Parametrierung von MD20108 $MC_PROG_EVENT_MASK werden die Ereignisse parametriert, bei denen _N_PROG_EVENT_SPF ausgeführt wird.

Bit1 = 1
	bedeutet, dass in keinem Satz eines  Anwender-ASUPs angehalten wird. Ausnahme: Der Einzelsatzstopp wurde explizit über den SBLON-Befehl aktiviert.
	Anwender-ASUPs werden mit dem Teileprogrammbefehl SETINT oder über den PI- _N_ASUP__ an einen Interrupt gebunden. Der Interrupt wird dann über PLC oder die schnellen Eingänge aktiviert, und das Anwender-ASUPs abgefahren.

	Damit wird das MD20117 $MC_IGNORE_SINGLEBLOCK_ASUP unwirksam. Das NCK verhalten entspricht dem der Belegung des MD20117 $MC_IGNORE_SINGLEBLOCK_ASUP= FFFFFFFF.

Bit2 = 1
	bedeutet, dass in keinem Zwischensatz angehalten wird. Zwischensätze werden unter anderem beim Werkzeugwechsel, adis und komplizierter Geometrie erzeugt.

Bit3 = 1
	bedeutet, dass im Satzsuchlaufaufsammelsatz nicht angehalten wird. Der Satzsuchlaufaufsammelsatz ist der 1.Satz, der nachdem das Suchziel im Programm gefunden wurde, beim Start in den Hauptlauf eingewechselt wird.

Bit4 = 1
	bedeutet, dass in den Init-Sätzen nicht angehalten wird. Init-Sätze werden sofort nach einem Teileprogrammstart aus Reset heraus erzeugt.

Bit5 = 1
	bedeutet, dass in keinem Satz eines Unterprogrammes mit dem Parameter DISPLOF gestoppt wird.

Bit6 = 1
	bedeutet, dass in keinem Satz, in dem NCK nicht reorganisieren kann, angehalten wird.

	Reorganisieren ist ein interner Vorgang, der für den BA-Wechsel nach JOG/JOGREF..., Ein- bzw. Ausschalten von Satzausblenden, Maschinendatenwirksamsetzen, Achstausch,  Overstore-Einschalten, Einzelsatzeinschalten, Ein- bzw. Ausschalten von Probelaufvorschub, Unterprogammebenenabbruch und Anwender-ASUPs Restweglöschen, Umschalten nach TEACH-IN (falls verfügbar) benötigt wird. Reorganisieren wird im Zustand Reset nie benötigt.

	Beispielsätze auf denen reorganisieren unmöglich ist:
- Werkzeugwechsel
- 1.Satz des Repos-Vorganges
- Satz nach einen ASUP aus Jog/Unterbrochen

Bit7 = 1
	bedeutet, dass in keinem Satz in dem nicht repositioniert kann angehalten wird.

	Repositionieren ist ein interner Vorgang, der für den BA-Wechsel nach JOG/JOGREF..., Ein- bzw. Ausschalten von Satzausblenden, Maschinendatenwirksamsetzen, Achstausch,  Overstore-Einschalten, Einzelsatzeinschalten, Ein- bzw. Ausschalten von Probelaufvorschub, Unterprogammebenenabbruch und ggf. Anwender-ASUPs benötigt wird. Repositionieren wird im Zustand Reset nie benötigt.

	Beispielsätze auf denen Repositionieren unmöglich ist:

	- G33 + Sätze, in denen das Reorganisieren nicht möglich ist.

Bit8 = 1
	bedeutet, dass in einem Restsatz, der keine Verfahrinformation enthält, nicht angehalten wird.

Bit9 = 1
	bedeutet, dass an einen Vorlauf/Hauptlauf Synchronisationsatz (z.B.STOPRE, $Variable), der aufgrund einer Unterbrechung mit Reorg (z. B. Betriebsartenwechsel) wiederholt wird , nicht angehalten wird.

Bit10= 1
	bedeutet, dass an einem "Werkzeuganwahlsatz" nicht angehalten wird. "Werkzeuganwahlsatz" entsteht nur mit aktiver Werkzeugverwaltung (Magazinverwaltung bzw. WZMG). Dieser Satz gibt das entsprechende Werkzeugwechselkommando an den PLC.
	Dieser Satz wird in der Regel durch eine T-Progammierung aus dem Teileprogramm erzeugt.
	Beispiel-Satz "N1010 T="Bohrer" M6 D1"

	In Abhängigkeit von Maschinendaten kann der "Werkzeuganwahlsatz" im Interpolator solange festgehalten werden, bis die PLC die entsprechende Werkzeugwechels-Quittierung durchgeführt hat (siehe MD20310 $MC_TOOL_MANAGEMENT_MASK). Der Programmzustand verbleibt aber in "läuft".

Bit11= 1
	Für die Funktion Achstausch (Achstausch: 2 oder mehr Kanäle steuern abwechselnd eine Achse) muss die Steuerung implizit GET-Sätze automatisch generieren, wenn kein explizites GET(D) programmiert worden ist und der nachfolgende Satz die Achse verfahren möchte. (zuvor hat diese Achse der andere Kanal benutzt).

	Ein explizit programmiertes GET kann folgendermaßen aussehen "getd(x1,y1,z1) oder get(x1,y1,z1)".

	Mit diesem Bit11 wird an expliziten und impliziten Get-Sätzen im Einzelsatz nicht angehalten.

Bit12= 1
	Im Einzelsatztyp 2 wird im SBLON Satz nicht angehalten.

Bit13= 1
	Wird mitten im Satz eine Achse herausgerissen und evtl. einem anderen Kanal zugeordnet, so wird am VORZEITIGEN Ende dieses Satzes nicht angehalten. Diesem Satz folgt ein REPOSA um ihn bis zum Ende zu verfahren, erst an diesem Ende wird gestoppt.

Bit14=1
	In einer Teileprogrammzeile, in der aufgrund der NC-Sprachersetzung ein Substitutionsunterprogramm aufgerufen wird, wird nur einmal angehalten. Voraussetzung ist, das das Unterprogramm das PROC-Attribut SBLOF enthält. Es ist unerheblich, ob das Unterprogramm am Satzanfang und/oder am Satzende aufgerufen wird oder ob es mit M17 oder RET verlassen wird.

Bit15=1
	bedeutet, dass in keinem Satz eines internen ASUPs angehalten wird. Ausnahme: Der Einzelsatzstopp wurde explizit über den SBLON-Befehl aktiviert.

	Es gibt drei verschiedene interne ASUPs, die durch unterschiedliche Ereignisse ausgelöst werden.
	- Repos: bei den Ereignissen Betriebsartenwechsel in eine Handbetriebsart (JOG, JOGREF,...) außer MODESWITCH_MASK ist nicht gesetzt, Ein- bzw. Ausschalten von Satzausblenden,Maschinendatenwirksamsetzen Overstore-Einschalten, Achstausch, Unterprogammebenenabbruch, Einzelsatzeinschalten Ein- bzw. Ausschalten von Probelaufvorschub, Alarm mit Korrektursatz.

	- Return: Restweglöschen, Umschalten nach TEACH-IN (falls verfügbar), oder Abwahl von MDA mit entsprechender MODESWITCH_MASK.

Bit16=1
	Wenn Serupro (Searchrun via Progtest) aktiv ist, wird nicht an den einzelnen Sätzen angehalten.


Korrespondiert mit:
	MD20117 $MC_IGNORE_SINGLEBLOCK_ASUP
</description>
</parameter>
<parameter number="10704" type="BYTE" dim="0">
<name>DRYRUN_MASK</name>
<brief>Aktivierung des Probelaufvorschubs</brief>
<description>DRYRUN_MASK == 0

Dryrun darf nur am Satzende ein- und ausgeschaltet werden.

Wenn DRYRUN_MASK = 1 gesetzt ist, kann der Probelaufvorschub auch während der Programmbearbeitung (im Teileprogrammsatz) aktiviert werden.

Achtung:
	Nach der Aktivierung des Probelaufvorschubs wird für die Dauer des Reorganisierungsvorgang die Achsen gestoppt.

DRYRUN_MASK == 2

Dryrun ist in jeder Phase ein- und ausschaltbar und die Achsen werden nicht gestoppt.

ACHTUNG:
	Allerdings wird  die Funktion erst mit einem im Programmablauf "späteren" Satz wirksam und zwar mit dem nächsten (impliziten) StopRe-Satz.

Korrespondiert mit:
	 SD42100 $SC_DRY_RUN_FEED
</description>
</parameter>
<parameter number="10706" type="BYTE" dim="0">
<name>SLASH_MASK</name>
<brief>Aktivierung der Satzausblendung</brief>
<description>Bei SLASH_MASK = 0 ist die Aktivierung der Satzausblendung nur am Satzende gestoppt möglich

Bei SLASH_MASK = 1 ist die Aktivierung der Satzausblendung auch während einer Programmbearbeitung möglich.

Achtung:
	Nach der Aktivierung der Satzausblendung werden für die Dauer des Reorganisierungsvorgang die Achsen gestoppt.

Bei SLASH_MASK = 2 ist die Aktivierung der Satzausblendung in jeder Phase möglich.

Achtung:
	Allerdings wird die Funktion erst mit einem im Programmablauf "späteren" Satz wirksam! Mit dem nächsten (impliziten) StopRe-Satz wird die Funktion wirksam.
</description>
</parameter>
<parameter number="10707" type="UDWORD" dim="0" display="HEX">
<name>PROG_TEST_MASK</name>
<brief>Programmtest Modi</brief>
<description>Bit-Codierte Maske für Programmtest Betrieb
Bit 0        Ohne Funktion.
Bit 1 == 1   Freischaltung der Aktivierung des Programmtest durch das PI-Kommando _N_NCKMOD
Bit 2 == 1   Aktivierung des Programmtest mit dem beschleunigten Vorschub in der normalen Programmverarbeitung. Ist das Bit gesetzt, wird ueber das VDI-Signal im ersten Kanal der Programmtest mit beschleunigten Vorschub in allen Kanaelen aktiv. Das VDI-Signal hat in allen anderen Kanaelen keine Wirkung, solange das Bit gesetzt ist. Als Vorschub wird der Wert in $MC_SERUPRO_SPEED_FACTOR des ersten Kanals benutzt. Nur zu Testzwecken freigegeben.
Bit 3 == 1   Aktivierung des Programmtest mit dem beschleunigten Vorschub in der Simulation.
Bit 4 == 1   Aktivierung des beschleunigten Programmtest erfolgt im synchronisiertem Mehrkanal-Modus.

Bit 5..31   noch unbenutzt.

Programmtest mit normaler Programmverarbeitung wird immer über das VDI-Interface aktiviert.
Programmtest in der Simulation wird immer über den NCKMode PI aktiviert.
Programmtest-Satzsuchlauf wird immer über den Find-Pi aktiviert.
</description>
</parameter>
<parameter number="10708" type="UDWORD" dim="0" display="HEX">
<name>SERUPRO_MASK</name>
<brief>Satzsuchlauf Modi</brief>
<description>Bit-Codierte Maske für Satzsuchlauf via Programm-Test (Abk. SERUPRO).

Satzsuchlauf SERUPRO wird mit dem PI-Dienst  _N_FINDBL  Mode-Paramter == 5 aktiviert.

SERUPRO bedeutet SEarchRUn by PROgrammtest, dh. vom Programmanfang bis zum Suchziel wird unter Programmtest verfahren. Hinweis: Programmtest bewegt keine Achsen.

Bit 0 == 0
	während der Suchphase wird bei M0 wird angehalten
Bit 0 == 1
	während der Suchphase wird bei M0 wird nicht angehalten

Bit 1 == 0
	Alarm 16942 bricht die Suchphase beim Teileprogrammbefehl START ab.
Bit 1 == 1
	Alarm 16942 wird abgeschaltet.
	ACHTUNG:
	Ein Start-Programmbefehl im Suchvorgang startet ggf. den anderen Kanal real!

Bit 2 == 0
	schaltet die Funktion "Group-Serupro" aus
Bit 2 == 1
	schaltet die Funktion "Group-Serupro" ein.

	"Group-Serupro" ermöglicht einen Suchvorgang, in dem der Start-Teileprogrammbefehl in einen Suchvorgang für den anderen Kanal umgewandelt wird.

Bit 3 == 0
	erzwingt, dass alle Kanäle, die Serupro gestartet haben, zu gleichen Zeit Serupro beenden, außer sie werden via Reset abgebrochen, oder der Kanal erreicht M30 ohne das Suchziel zu finden. Mit anderen Worten: Alle Kanäle, die das Suchziel finden, (auch Selfacting-Serupro) terminieren SERUPRO gleichzeitig.
Bit 3 == 1
	schaltet dieses Funktion aus

Bit 4 == 0
	Externen Override bei Serupro beachten.
Bit 4 == 1
	Ein externer Override (per PLC-Signal oder MSTT) wird während Serupro ignoriert.

Bit 5 == 0
	Bei Serupro werden komplexe Bahnberechnungen ausgeführt.
Bit 5 == 1
	Bei Serupro erfolgt die Berechnung mit einfachen, rechenzeitoptimierten Algorithmen.

Bit 6 .. 31
	noch unbenutzt.
</description>
</parameter>
<parameter number="10709" type="DWORD" dim="1">
<name>PROG_SD_POWERON_INIT_TAB</name>
<brief>Zu initialisierende Settingdaten</brief>
<description>Zu initialisierende Settingdaten:
Die Werte der in diesem MD angegebenen programmierbaren SD werden im Steuerungshochlauf auf ihren Initialwert gesetzt.

Initialisierbar sind jedoch nur die in der nachfolgenden Tabelle aufgelisteten Settingdaten. Falls unzulässige Settingdatennummern projektiert werden,so wird beim nächsten Steuerungshochlauf der Alarm 4009 ausgegeben. Der Alarm zeigt den Index, mit dem das unzulässige Settingdatum projektiert wurde. Der Alarm kann nur durch Änderung des unzulässigen Settingdatums eliminiert werden, also entweder zulässigen Wert oder Null eintragen!

                                                (GCODE)
SD42000 $SC_THREAD_START_ANGLE                  SF
SD42010 $SC_THREAD_RAMP_DISP                    DITS/DITE
SD42125 $SC_SERUPRO_SYNC_MASK
SD42400 $SC_PUNCH_DWELLTIME                     PDELAYON
SD42402 $SC_NIBPUNCH_PRE_START_TIME
SD42404 $SC_MINTIME_BETWEEN_STROKES
SD42800 $SC_SPIND_ASSIGN_TAB                    SETMS
SD43200 $SA_SPIND_S                             S bei G94,G95,G97,G971,G972
SD43202 $SA_SPIND_CONSTCUT_S                    S bei G96,G961,G962
SD43210 $SA_SPIND_MIN_VELO_G25                  G25 S
SD43220 $SA_SPIND_MAX_VELO_G26                  G26 S
SD43230 $SA_SPIND_MAX_VELO_LIMS                 LIMS
SD43235 $SA_SPIND_USER_VELO_LIMIT
SD43300 $SA_ASSIGN_FEED_PER_REV_SOURCE          FPRAON
SD43350 $SA_AA_OFF_LIMIT
SD43420 $SA_WORKAREA_LIMIT_PLUS                 G26
SD43430 $SA_WORKAREA_LIMIT_MINUS                G25
SD43600 $SA_IPOBRAKE_BLOCK_EXCHANGE
SD43610 $SA_ADISPOSA_VALUE
SD43700 $SA_OSCILL_REVERSE_POS1                 OSP1
SD43710 $SA_OSCILL_REVERSE_POS2                 OSP2
SD43720 $SA_OSCILL_DWELL_TIME1                  OST1
SD43730 $SA_OSCILL_DWELL_TIME2                  OST2
SD43740 $SA_OSCILL_VELO                         FA
SD43750 $SA_OSCILL_NUM_SPARK_CYCLES             OSNSC
SD43760 $SA_OSCILL_END_POS                      OSE
SD43770 $SA_OSCILL_CTRL_MASK                    OSCTRL
SD43780 $SA_OSCILL_IS_ACTIVE                    OS
SD43790 $SA_OSCILL_START_POS
</description>
</parameter>
<parameter number="10710" type="DWORD" dim="1">
<name>PROG_SD_RESET_SAVE_TAB</name>
<brief>Zu aktualisierende Settingdaten</brief>
<description>Zu sichernde Settingdaten
Die Werte der in dieser Tabelle angegebenen SD werden remanent gesichert, wirken also über Power On. Die Settingdaten, deren HMI-Nummern in der Sicherungsliste eingetragen wurden, werden nach dem Beschreiben vom Teileprogramm bei Reset in das (gepufferte) aktive Filesystem geschrieben.

Programmierbare Settingdaten sind:
                                                (GCODE)
SD42000 $SC_THREAD_START_ANGLE                  SF
SD42010 $SC_THREAD_RAMP_DISP                    DITS/DITE
SD42400 $SC_PUNCH_DWELLTIME                     PDELAYON
SD42800 $SC_SPIND_ASSIGN_TAB                    SETMS
SD43200 $SA_SPIND_S                             S bei G94,G95,G97,G971,G972
SD43202 $SA_SPIND_CONSTCUT_S                    S bei G96,G961,G962
SD43210 $SA_SPIND_MIN_VELO_G25                  G25 S
SD43220 $SA_SPIND_MAX_VELO_G26                  G26 S
SD43230 $SA_SPIND_MAX_VELO_LIMS                 LIMS
SD43300 $SA_ASSIGN_FEED_PER_REV_SOURCE          FPRAON
SD43420 $SA_WORKAREA_LIMIT_PLUS                 G26
SD43430 $SA_WORKAREA_LIMIT_MINUS                G25
SD43700 $SA_OSCILL_REVERSE_POS1                 OSP1
SD43710 $SA_OSCILL_REVERSE_POS2                 OSP2
SD43720 $SA_OSCILL_DWELL_TIME1                  OST1
SD43730 $SA_OSCILL_DWELL_TIME2                  OST2
SD43740 $SA_OSCILL_VELO                         FA
SD43750 $SA_OSCILL_NUM_SPARK_CYCLES             OSNSC
SD43760 $SA_OSCILL_END_POS                      OSE
SD43770 $SA_OSCILL_CTRL_MASK                    OSCTRL
SD43780 $SA_OSCILL_IS_ACTIVE                    OS

Der Wert von SD43420 $SA_WORKAREA_LIMIT_PLUS (Arbeitsfeldbegrenzung plus) und SD43430 $SA_WORKAREA_LIMIT_MINUS (Arbeitsfeldbegrenzung minus) soll nach jedem RESET, M02, M30 oder M17 im gepufferten RAM gespeichert werden.
	--&gt; PROG_SD_RESET_SAVE_TAB[0] = 43420
	--&gt; PROG_SD_RESET_SAVE_TAB[1] = 43430
siehe auch: 'REDEF: Attribute von NC-Sprachelementen ändern', Settingdaten/PRLOC
</description>
</parameter>
<parameter number="10711" type="DWORD" dim="0">
<name>NC_LANGUAGE_CONFIGURATION</name>
<brief>NC-Sprachbefehle nicht-aktiver Optionen/Funktionen</brief>
<description>Art und Weise, wie mit Sprachbefehlen verfahren wird, deren zugehörige Option bzw. Funktion nicht aktiviert ist.
Alle programmierbaren Befehle in einem NC-Programm oder Zyklenprogramm sind Sprachbefehle. Detaillierte Angaben finden sich bei der Beschreibung des Sprachbefehls STRINGIS.

Wert	Bedeutung
 --------------------------------------------------------------
0:	Es sind alle Sprachbefehle bekannt. Speziell auch jene, deren Funktion nicht aktiviert ist. D. h. alle Sprachbefehle sind programmierbar. Erst bei der Ausführung wird erkannt, ob die benötigte Funktion aktiviert ist. Wenn nicht, dann wird ein spezifischer Alarm erzeugt.

Option freigegeben / nicht freigegeben (für optionsfreie Funktionen gilt implizit "Option freigegeben"):
 -------------------------------------------------------------------------------------------------------
1:	Es sind alle Sprachbefehle bekannt. Sprachbefehle, deren Option nicht freigegeben ist, werden bereits zu Beginn der Programminterpretation erkannt und mit Alarm 12553 "Option/Funktion ist nicht aktiv" abgelehnt.
	Beispiel:
		Ist das Optionsdatum für die Zylindertransformation nicht gesetzt, so wird die Programmierung von TRACYL mit dem Alarm 12553 abgelehnt.

2:	Es sind nur die Sprachbefehle bekannt, die dem aktuellen Umfang freigegebener Optionen der NCK-Software entsprechen. D. h. Befehle zu nicht freigegebenen Optionen werden mit einem Alarm 12550 "Name nicht definiert o. Option/Funktion nicht vorhanden" abgelehnt. Es kann dann nicht entschieden werden, ob der genannte Befehl generell in der Siemens NC-Sprache nicht bekannt ist, oder auf dieser Anlage nur nicht vorhanden ist.
	Beispiel:
		Ist das Optionsdatum für die Zylindertransformation nicht gesetzt, so wird die Programmierung von TRACYL mit dem Alarm 12550 abgelehnt.

Funktion aktiv / nicht aktiv:
 ----------------------------
3:	Es sind alle Sprachbefehle bekannt. Sprachbefehle, deren Funktion nicht aktiviert ist, werden bereits zu Beginn der Programminterpretation erkannt und mit Alarm 12553 "Option/Funktion ist nicht aktiv" abgelehnt.
	Beispiel:
		Ist das Optionsdatum für die Zylindertransformation zwar gesetzt , aber die Transformation nicht durch das MD24100 $MC_TRAFO_TYPE_1 aktiviert, so wird die Programmierung von TRACYL mit Alarm 12553 abgelehnt.

4:	Es sind nur die Sprachbefehle bekannt, die dem aktuellen Umfang aktiver Funktionen der NCK-Software entsprechen. D. h. Befehle zu nicht aktiven Funktionen werden mit einem Alarm 12550 "Name nicht definiert o. Option/Funktion nicht vorhanden" abgelehnt. Es kann dann nicht entschieden werden, ob der genannte Befehl generell in der Siemens NC-Sprache nicht bekannt ist, oder auf dieser Anlage nur nicht vorhanden ist.
	Beispiel:
		Ist das Optionsdatum für die Zylindertransformation zwar gesetzt , aber die Transformation nicht durch das MD24100 $MC_TRAFO_TYPE_1 aktiviert, so wird die Programmierung von TRACYL mit Alarm 12550 abgelehnt.

Beispiel:
Siehe die Beschreibung zum Sprachbefehl STRINGIS.
</description>
</parameter>
<parameter number="10712" type="STRING" dim="1">
<name>NC_USER_CODE_CONF_NAME_TAB</name>
<brief>Liste umprojektierter NC-Codes</brief>
<description>Bezeichner-Liste der vom Anwender umprojektierten NC-Codes
Die Liste ist wie folgt aufzubauen:
gerade Adresse:                   zu verändernder Bezeichner
darauffolgende ungerade Adresse:  neuer Bezeichner
Umprojektiert werden können folgende drei Typen von NC-Codes:
1. G-Codes              z.B.: G02, G64, ASPLINE...
2. NC-Adressen          z.B.: RND, CHF, ...
3. Vordefinierte UP's   z.B.: CONTPRON, ...
</description>
</parameter>
<parameter number="10713" type="DWORD" dim="1">
<name>M_NO_FCT_STOPRE</name>
<brief>M-Funktion mit Vorlaufstopp</brief>
<description>Die mit dem MD10713 $MN_M_NO_FCT_STOPRE definierten M-Funktionen führen einen impliziten Vorlaufstopp aus.
D.h. die Interpretation der nächsten Teileprogrammzeile wird solange angehalten bis der Satz mit der so definierten M-Funktion vollständig abgearbeitet wurde
(Quittung von PLC, Bewegung etc.).
</description>
</parameter>
<parameter number="10714" type="DWORD" dim="0">
<name>M_NO_FCT_EOP</name>
<brief>M-Funktion für Spindel aktiv nach Reset</brief>
<description>Für Spindeln, die in MD35040 $MA_SPIND_ACTIVE_AFTER_RESET eine '2' projektiert haben, wird bei Beendigung des Teileprogrammes mit dieser M-Funktion kein Spindelreset ausgelöst. Die Spindel bleibt damit über Teileprogrammende aktiv.

Vorschlag: M32
Einschränkungen: siehe MD10715 $MN_M_NO_FCT_CYCLE

Korrespondiert mit:
MD35040 $MA_SPIND_ACTIVE_AFTER_RESET
MD10714 $MN_M_NO_FCT_EOP,
MD10715 $MN_M_NO_FCT_CYCLE,
MD20094 $MC_SPIND_RIGID_TAPPING_M_NR,
MD22254 $MC_AUXFU_ASSOC_M0_VALUE
MD10814 $MN_EXTERN_M_NO_MAC_CYCLE,
MD10804 $MN_EXTERN_M_NO_SET_INT
MD10806 $MN_EXTERN_M_NO_DISABLE_INT,
MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN,
MD10802 $MN_EXTERN_CHAN_SYNC_M_NO_MAX
MD20095 $MC_EXTERN_RIGID_TAPPING_M_NR
MD26008 $MC_NIBBLE_PUNCH_CODE
</description>
</parameter>
<parameter number="10715" type="DWORD" dim="1">
<name>M_NO_FCT_CYCLE</name>
<brief>Durch ein Unterprogramm zu ersetzende M-Funktion</brief>
<description>M-Nummer mit der ein Unterprogramm aufgerufen wird.
Der Name des Unterprogramms steht in MD10716 $MN_M_NO_FCT_CYCLE_NAME[n]. Wird in einem Teileprogrammsatz die mit MD10715 $MN_M_NO_FCT_CYCLE[n] festgelegte M-Funktion programmiert, wird am Satzende das in MD10716 $MN_NO_FCT_CYCLE_NAME definierte Unterprogramm gestartet. Wird die M-Funktion im Unterprogramm nochmals programmiert, findet keine Ersetzung durch einen Unterprogrammaufruf mehr statt. Auch andere mit MD10715 $MN_M_NO_FCT_CYCLE projektierte Ersetzungen werden im Unterprogramm nicht ausgeführt. MD10715 $MN_M_NO_FCT_CYCLE wirkt sowohl im Siemens-Mode G290, als auch im externen Sprach-Mode G291.

Die mit MD10716 $MN_M_NO_FCT_CYCLE_NAME[n] und MD10717 $MN_T_NO_FCT_CYCLE_NAME projektierten Unterprogramme dürfen nicht gleichzeitig in einem Satz (Teileprogrammzeile) wirksam werden, d.h. pro Satz kann maximal eine M/T-Funktionsersetzung wirksam werden. In dem Satz mit der M-Funktionsersetzung darf weder ein M98- noch ein modaler Unterprogramm-Aufruf  programmiert sein.
Auch Unterprogrammrücksprung und Teileprogrammende sind nicht erlaubt. Im Konfliktfall wird Alarm 14016 abgesetzt.

Einschränkungen:
M-Funktionen mit fester Bedeutung und projektierbare M-Funktionen werden auf konkurrierende Einstellungen hin überprüft. Ein Konfliktfall wird mit einem Alarm gemeldet.
Folgende M-Funktionen werden geprüft:
- M0 bis M5,
- M17,M30,
- M19,
- M40 bis M45,
- M-Funktion zur Umschaltung Spindelbetrieb/Achsbetrieb laut MD20094 $MC_SPIND_RIGID_TAPPING_M_NR (Vorbelegung M70)
- M-Funktionen für Nibbeln/Stanzen laut Projektierung über MD26008 $MC_NIBBLE_PUNCH_CODE sofern sie über MD26012 $MC_PUNCHNIB_ACTIVATION aktiviert wurden.
- bei applizierter externer Sprache (MD18800 $MN_MM_EXTERN_LANGUAGE) M19, M96-M99.
Ausnahme: die mit MD22560 $MC_TOOL_CHANGE_M_CODE festgelegten M-Funktionen für den Werkzeugwechsel.
</description>
</parameter>
<parameter number="10716" type="STRING" dim="1">
<name>M_NO_FCT_CYCLE_NAME</name>
<brief>Unterprogrammname für M-Funktions-Ersetzung</brief>
<description>Im Maschinendatum steht der Name des Zyklus. Dieser Zyklus wird aufgerufen, wenn die M-Funktion aus dem MD10715 $MN_M_NO_FCT_CYCLE programmiert wurde.
Ist die M-Funktion in einem Bewegungssatz programmiert, so wird der Zyklus nach der Bewegung ausgeführt.

MD10715 $MN_M_NO_FCT_CYCLE wirkt sowohl im Siemens-Mode G290, als auch im externen Sprach-Mode G291.
Ist im Aufrufsatz eine T-Nummer programmiert, so kann die programmierte T-Nummer im Zyklus unter der Variablen $P_TOOL abgefragt werden.

M- und T-Funktionsersetzung dürfen nicht gleichzeitig in einem Satz programmiert werden, d.h. pro Satz kann maximal eine M/T-Funktionsersetzung wirksam werden.
In dem Satz mit der M-Funktions- Ersetzung darf weder ein M98- noch ein modaler Unterprogramm-Aufruf programmiert sein.
Auch Unterprogrammrücksprung und Teileprogrammende sind nicht erlaubt.
Im Konfliktfall wird Alarm 14016 abgesetzt.

Korrespondiert mit:
	MD10715 $MN_M_NO_FCT_CYCLE,
	MD10717 $MN_T_NO_FCT_CYCLE_NAME
</description>
</parameter>
<parameter number="10717" type="STRING" dim="0">
<name>T_NO_FCT_CYCLE_NAME</name>
<brief>Name des Werkzeugwechselzyklus für T-Funktions-Ersetzung</brief>
<description>Zyklenname für Werkzeugwechselroutine bei Aufruf über T-Funktion.
Wird in einem  Teileprogrammsatz eine T-Funktion programmiert, so wird am Satzende das in T_NO_FCT_CYCLE_NAME definierte Unterprogramm aufgerufen.
Die programmierte T-Nummer kann im Zyklus über die Systemvariablen $C_T /  $C_T_PROG als Dezimalwert und über $C_TS / $C_TS_PROG als String (nur mit Werkzeugverwaltung) abgefragt werden. MD10717 $MN_T_NO_FCT_CYCLE_NAME wirkt sowohl im Siemens-Mode G290, als auch im externen Sprach-Mode G291.

MD10716 $MN_M_NO_FCT_CYCLE_NAME und MD10717 $MN_T_NO_FCT_CYCLE_NAME dürfen nicht gleichzeitig in einem Satz wirksam werden, d.h. pro Satz kann maximal eine M/T-Funktionsersetzung wirksam werden. In dem Satz mit der T-Funktionsersetzung darf weder ein M98- noch ein modaler Unterprogramm-Aufruf programmiert sein. Auch Unterprogrammrücksprung und Teileprogrammende sind nicht erlaubt.

Im Konfliktfall wird Alarm 14016 abgesetzt.

Korrespondiert mit:
	MD10715 $MN_M_NO_FCT_CYCLE,
	MD10716 $MN_M_NO_FCT_CYCLE_NAME
</description>
</parameter>
<parameter number="10718" type="DWORD" dim="0">
<name>M_NO_FCT_CYCLE_PAR</name>
<brief>M-Funktionsersetzung mit Parametern</brief>
<description>Wurde mit MD10715 $MN_M_NO_FCT_CYCLE[n] / MD10716 $MN_M_NO_FCT_CYCLE_NAME[n] eine M-Funktionsersetzung projektiert, so kann mit MD10718 $MN_M_NO_FCT_CYCLE_PAR für eine dieser M-Funktionen eine Parameterübergabe per Systemvariable wie bei der T-Funktionsersetzung spezifiziert werden. Die in den Systemvariablen abgelegten Parameter beziehen sich immer auf die Teileprogrammzeile in der die zu ersetzenden M-Funktion programmiert wurde.

Folgende Systemvariable stehen zur Verfügung:
$C_ME      : Adresserweiterung der substituierten M-Funktion
$C_T_PROG  : TRUE wenn Adresse T programmiert wurde
$C_T       : Wert der Adresse T ( Integer )
$C_TE      : Adresserweiterung der Adresse T
$C_TS_PROG : TRUE wenn Adresse TS programmiert wurde
$C_TS      : Wert der Adresse TS ( String, nur mit Werkzeugverwaltung )
$C_D_PROG  : TRUE wenn Adresse D programmiert wurde
$C_D       : Wert der Adresse D
$C_DL_PROG : TRUE wenn Adresse DL programmiert wurde
$C_DL      : Wert der Adresse DL
</description>
</parameter>
<parameter number="10719" type="UDWORD" dim="0" display="HEX">
<name>T_NO_FCT_CYCLE_MODE</name>
<brief>Parametrierung der T-Funktionsersetzung</brief>
<description>Mit diesem Maschinendatum wird die Bearbeitung des Substitutionsunterprogramms für die Werkzeug  bzw. Werkzeugkorrekturanwahl parametriert.

Bit 0 = 0:
	 D  bzw. DL Nummer wird an das Substitutionsunterprogramm übergeben (Default Wert)

Bit 0 = 1:
	die D  bzw. DL Nummer wird nicht an das Substitutionsunterprogramm übergeben wenn folgende Bedingungen erfüllt sind:   MD22550 $MC_TOOL_CHANGE_MODE = 1   Programmierung von D/DL mit T oder der M Funktion, mit der der Werkzeug  wechselzyklus aufgerufen wird, in einer Teileprogrammzeile

Bit 1 = 0
	Bearbeitung des Substitutionsunterprogramms am Satzende (Default Wert)
Bit 1 = 1
	Bearbeitung des Substitutionsunterprogramms am Satzanfang

Bit 2 = 0:
	Bearbeitung des Substitutionsunterprogramms entsprechend Einstellung von Bit 1
Bit 2 = 1:
	Bearbeitung des Substitutionsunterprogramms am Satzanfang und am Satzende
</description>
</parameter>
<parameter number="10720" type="BYTE" dim="1">
<name>OPERATING_MODE_DEFAULT</name>
<brief>Einstellung der Betriebsart nach Power On</brief>
<description>Default-Betriebsart (BA) der Betriebsartengruppen (BAGs) nach Power-On:
Wenn von der PLC keine Betriebsart angewählt wird, sind alle zur BAG n gehörigen Kanäle nach Power-On in der durch OPERATING_MODE_DEFAULT[ n -1 ] vorgegebenen Betriebsart:
0 = BA Automatik
1 = BA Automatik, Unter-BA REPOS
2 = BA MDA
3 = BA MDA, Unter-BA REPOS
4 = BA MDA, Unter-BA Teach In
5 = BA MDA, Unter-BA Referenzpunktfahren
6 = BA JOG
7 = BA JOG, Unter-BA Referenzpunktfahren
8 = BA AUTO, Unter-BA Teach In
9 = BA AUTO, Unter-BA Teach In, Unter-BA  Referenzpunktfahren
10 = BA AUTO, Unter-BA Teach In, Unter-BA  Repos
11 = BA MDA, Unter-BA Teach In, Unter-BA  Referenzpunktfahren
12 = BA MDA, Unter-BA Teach In, Unter-BA Repos

Achtung: Abhängig vom Maschinendatum MD10721 $MN_OPERATING_MODE_EXTENDED wird unter Umständen nicht die hier eingestellte Betriebsart bei Power-On eingenommen.
</description>
</parameter>
<parameter number="10721" type="BYTE" dim="1">
<name>OPERATING_MODE_EXTENDED</name>
<brief>Erweiterte Einstellung der Betriebsart nach Power On</brief>
<description>Erweiterte Einstellung einer Betriebsart (BA) der Betriebsartengruppen (BAGs) nach Power-On:
0 = Anwahl der Betriebsart entsprechend MD10720 $MN_OPERATING_MODE_DEFAULT
1 = Anwahl der Betriebsart JOG, wenn PLC-Signal "Retract-Daten verfügbar" (&lt;Retract_Daten_verfuegbar/&gt;) in mindestens einem Kanal der Betriebsartengruppe gesetzt ist
</description>
</parameter>
<parameter number="10722" type="UDWORD" dim="0" display="HEX">
<name>AXCHANGE_MASK</name>
<brief>Parametrierung des Achstausch-Verhaltens</brief>
<description>Über dieses Maschinendatum kann man den Achstausch-Verhalten
verändern.

Bit0 = 1
	bedeutet, dass ein automatischer Achstausch über Kanäle auch dann stattfindet, wenn die Achse durch Waitp in einen neutralen Zustand gebracht wurde.

Bit1 = 1
	bedeutet, dass ein AXCTSWE alle dem Kanal zuordenbaren Achs-Container-Achsen mittels impliziten GET bzw. GETD holt und einen Achstausch erst nach der Achs-Container-Rotation wieder erlaubt.

Bit2 = 1
	bedeutet, dass bei einem GET ein Zwischensatz ohne Vorlaufstop erzeugt wird und erst im Hauptlauf geprüft wird, ob ein Reorganisieren erforderlich ist.

Bit3 = 1 bedeutet, dass die NC eine Achstausch-Anforderung über die VDI-Nahtstelle nur ausführt für eine:
         - ausschließlich von der PLC kontrollierte Achse (MD30460 $MA_BASE_FUNCTION_MASK Bit 4 == 1)
         - fest zugeordnete PLC Achse (MD30460 $MA_BASE_FUNCTION_MASK Bit 5 == 1
         Für solche Achsen ist das VDI-Nahtstellen Signal 'Achstausch möglich' immer 1.
         Für alle anderen Achsen ist das VDI-Nahtstellen Signal 'Achstausch möglich' immer 0.
         Für fest zugeordnete PLC Achsen ist nur ein Achstausch von neutraler Achse zu PLC Achse
         bzw. von PLC Achse zu neutraler Achse möglich.
Bit3 = 0 bedeutet, dass für jede Achse von der PLC ein Achstausch angefordert werden kann.
         Für fest zugeordnete PLC Achsen ist nur ein Achstausch von neutraler Achse zu PLC Achse
         bzw. von PLC Achse zu neutraler Achse möglich.
</description>
</parameter>
<parameter number="10724" type="STRING" dim="1" readonly="true">
<name>NC_SYS_CODE_CONF_NAME_TAB</name>
<brief>Liste umprojektierter NC-Codes</brief>
<description>Bezeichner-Liste interner NC-Codes
reserviert für interne Applikationen
</description>
</parameter>
<parameter number="10731" type="BOOLEAN" dim="0">
<name>JOG_MODE_KEYS_EDGETRIGGRD</name>
<brief>Wirkungsweisen der JOG-Tasten</brief>
<description>Das Datum bestimmt, ob die Signale der VDI-Nahtstelle, die den JOG Mode ( kontinuierlich, INC10000, ... INC1 ) einstellen, als Schalter (level triggered) oder als Taster (edge triggered) wirken. Im letzteren Fall wird NCK-intern eine Selbsthaltung der zuletzt gedrückten Taste eingestellt.
</description>
</parameter>
<parameter number="10735" type="UDWORD" dim="0" display="HEX">
<name>JOG_MODE_MASK</name>
<brief>Einstellungen für Betriebsart Jog</brief>
<description>Bit 0:
	Joggen in Automatik ermöglichen.

	Joggen in Automatik wird ermöglicht, wenn alle Kanäle der BAG in Kanalzustand Reset sind und kein Kanal der BAG DRF angewählt hat. Mit der +/- Taste und dem Handrad wechselt die BAG intern nach JOG und die Achse bewegt sich. Nachdem die JOG-Bewegung beendet ist, wird auch intern nach AUTO zurückgewechselt.

Bit 1:
	Position mit AxFrame.

	Bei der Funktion 'Joggen auf Position' werden axiale Frames und, bei einer als Geometrieachse projektierten Achse,  die Werkzeuglängenkorrektur berücksichtigt.

Bit 2:
	Fahren in Gegenrichtung.

	Bei den Funktionen 'Joggen auf Position' und 'Maschinenfestpunkt anfahren manuell' ist ein Verfahren in Gegenrichtung, d.h. weg von der vorgegebenen Position, erlaubt.

Bit 3:
	Werkzeugradiuskorrektur.

	Das MD21020 $MC_WORKAREA_WITH_TOOL_RADIUS wirkt bei Jog-Bewegungen der Geometrieachsen.

Bit 4:
	Alarmeunterdrückung Arbeitsfeldbegrenzung im Basiskoordinatensystem in Jog.

	Alarme, die in Jog beim Erreichen einer Arbeitsfeldbegrenzung im Basiskoordinatensystem ausgegeben würden, werden unterdrückt.

Bit 5:
	Alarmeunterdrückung Arbeitsfeldbegrenzung im Werkstückkoordinatensystem in Jog.

	Alarme, die in Jog beim Erreichen einer Arbeitsfeldbegrenzung im Werkstückkoordinatensystem ausgegeben würden, werden unterdrückt.

Bit 6, 7:
	Joggen von Kreisen:

	Bit 7 und Bit 6 = 0: Ein Verfahren der 2. Geometrieachse der aktiven Ebene nach Plus zu einer Radiusvergrößerung, ein Verfahren nach Minus zu einer Radiusverkleinerung unabhängig davon ob Innen- oder Außenbearbeitung aktiv ist.
	Bit 7 = 1 und Bit 6 = 0: Ein Verfahren der 2. Geometrieachse der aktiven Ebene nach Plus fährt immer in Richtung zum begrenzenden Kreis hin. D.h. bei Innenbearbeitung wird der Radius vergrößert und bei Außenbearbeitung verkleinert.
	Bit 7 = 1 und Bit 6 = 1: Ein Verfahren der 2. Geometrieachse der aktiven Ebene nach Minus fährt immer in Richtung zum begrenzenden Kreis hin. D.h. bei Innenbearbeitung wird der Radius vergrößert und bei Außenbearbeitung verkleinert.

Bit 8:
	Bit 8 = 0 Bei einer JOG-Retract-Bewegung kann die Rückzugsachse nur in Plus-Richtung gejoggt werden.
	Bit 8 = 1 Bei einer JOG-Retract-Bewegung kann die Rückzugsachse in Plus- und Minus-Richtung gejoggt werden.

Bit 9-31:
	z.Z. unbelegt.
</description>
</parameter>
<parameter number="10750" type="DWORD" dim="0">
<name>SPRINT_FORMAT_P_CODE</name>
<brief>String-Codierung des SPRINT-Formats %P</brief>
<description>Beschreibung:
Festlegung des Zeichen- bzw. Lochstreifen-Codes, mit dem der String codiert wird, den der SPRINT-Befehl mit Formatsteuerzeichen %P generiert:

0: ASCII
1: ISO (DIN66024)
2. EIA (RS-244)
</description>
</parameter>
<parameter number="10751" type="DWORD" dim="0">
<name>SPRINT_FORMAT_P_DECIMAL</name>
<brief>Parametrierung des SPRINT-Formats %P</brief>
<description>Beschreibung:
Parametrierung der Formatbeschreibung %n.mP des SPRINT-Befehls
Wertebereich:
0: Die Formatangabe %n.mP generiert aus einem Übergabeparameter vom Typ REAL oder INT einen String, der aus einer Ganzzahl mit n + m Stellen besteht. Dabei representieren die ersten n Stellen  die Vorkommastellen und die folgenden m Stellen die Nachkommastellen des Übergabeparameters. Fehlende Nachkommastellen werden mit 0 aufgefüllt. Sind mehr als m Nachkommastellen vorhanden wird gerundet. Fehlende Vorkommastellen werden mit Leerzeichen aufgefüllt.
1: Die Formatangabe %n.mP generiert aus einem Übergabeparameter vom Typ REAL oder INT einen String, der aus einer Dezimalzahl mit bis zu n Vorkommastellen, dem Dezimalpunkt und m Nachkommastellen besteht, die ggf. mit 0 aufgefüllt oder gerundet werden.
</description>
</parameter>
<parameter number="10760" type="UDWORD" dim="0" display="HEX">
<name>G53_TOOLCORR</name>
<brief>Wirkungsweise bei G53, G153 und SUPA</brief>
<description>Mit diesem MD wird festgelegt, ob bei den Sprachbefehlen G53, G153 und SUPA auch die Werkzeuglängen- und die Werkzeugradiuskorrektur unterdrückt werden soll.
Das Maschinendatum ist bitcodiert.
Bit 0 = 0: G53, G153 und SUPA ist ein satzweises Unterdrücken von Nullpunktverschiebungen. Die aktive Werkzeuglängen- und Werkzeugradiuskorrektur bleibt erhalten.

Bit 0 = 1: G53, G153 und SUPA ist ein satzweises Unterdrücken von Nullpunktverschiebungen, aktiver Werkzeuglängen- und Werkzeugradiuskorrektur. Das Verhalten bezüglich der Werkzeuglängen kann mit Bit 1 modifiziert werden.

Bit 1 wird nur ausgewertet, wenn Bit 0 den Wert 1 hat.

Bit1 = 0: Ist Bit 0 gesetzt, wird die Werkzeuglänge bei G53, G153 und SUPA immer unterdrückt.

Bit1 = 1: Ist Bit 0 gesetzt, wird die Werkzeuglänge bei G53, G153 und SUPA nur dann unterdrückt, wenn nicht im gleichen Satz eine Schneide angewählt wird (das kann auch die bereits aktive Schneide sein).
</description>
</parameter>
<parameter number="10780" type="BOOLEAN" dim="0">
<name>UNLOCK_EDIT_MODESWITCH</name>
<brief>Aufhebung der Startsperre beim Editieren eines Teileprogramms</brief>
<description>In der Betriebsart Teach In(falls verfügbar) wird beim Editieren des Teileprogramms eine Startsperre erzwungen, um inkonsistente Zustände zu verhindern.
Diese Startsperre beim Editieren kann zusätzlich zu den jeweiligen Bedienalgorithmen der einzelnen HMI's durch NC-Reset oder einen Betriebsarten-Wechsel aufgehoben werden.

0: Startsperre beim Editieren wird zusätzlich mit NC-Reset aufgehoben

1: Startsperre beim Editieren wird zusätzlich bei einem Betriebsarten-Wechsel aufgehoben
</description>
</parameter>
<parameter number="10800" type="DWORD" dim="0">
<name>EXTERN_CHAN_SYNC_M_NO_MIN</name>
<brief>1. M-Funktion für die Kanalsynchronisation</brief>
<description>M-Nummer der ersten M-Funktion, mit der eine Kanal-(Programm-)Synchronisation im ISO2/3-Mode durchgeführt werden kann.
Um Konflikte mit Standard-M-Funktionen zu vermeiden, ist als kleinster Wert 100 erlaubt. Wird ein Wert zwischen 0 - 99 einegeben, wird der Alarm 4170 ausgegeben.
</description>
</parameter>
<parameter number="10802" type="DWORD" dim="0">
<name>EXTERN_CHAN_SYNC_M_NO_MAX</name>
<brief>Letzte M-Funktion für die Kanalsynchronistaion</brief>
<description>M-Nummer der letzten M-Funktion, mit der eine Kanal-(Programm-)Synchronisation im ISO2/3-Mode durchgeführt werden kann.
Das Maschinendatum definiert zusammen mit MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN einen M-Nummernbereich, der für die Kanalsynchronisation reserviert ist. Der Bereich darf maximal 10 * Kanalanzahl groß sein, da für jeden Kanal nur 10 WAIT-Marken gesetzt werden dürfen.
Wird ein Wert zwischen 0 - 99 oder kleiner als MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN, wird der Alarm 4170 ausgegeben.
</description>
</parameter>
<parameter number="10804" type="DWORD" dim="0">
<name>EXTERN_M_NO_SET_INT</name>
<brief>M-Funktion für ASUP Aktivierung</brief>
<description>M-Funktionsnummer, mit der im ISO2/3-Mode ein Interruptprogramm (ASUP) aktiviert wird. Das Interruptprogramm wird immer mit dem 1. schnellen Eingang der NC gestartet.
Die im Maschinendatum definierte M-Nummer ersetzt M96 im externen Sprachmode.

Einschränkungen: siehe MD10715 $MN_M_NO_FCT_CYCLE

Korrespondiert mit:
	MD10714 $MN_M_NO_FCT_EOP,
	MD10715 $MN_M_NO_FCT_CYCLE,
	MD20094 $MC_SPIND_RIGID_TAPPING_M_NR,
	MD22254 $MC_AUXFU_ASSOC_M0_VALUE
	MD10814 $MN_EXTERN_M_NO_MAC_CYCLE,
	MD10804 $MN_EXTERN_M_NO_SET_INT
	MD10806 $MN_EXTERN_M_NO_DISABLE_INT,
	MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN,
	MD10802 $MN_EXTERN_CHAN_SYNC_M_NO_MAX
	MD20095 $MC_EXTERN_RIGID_TAPPING_M_NR
	MD26008 $MC_NIBBLE_PUNCH_CODE
</description>
</parameter>
<parameter number="10806" type="DWORD" dim="0">
<name>EXTERN_M_NO_DISABLE_INT</name>
<brief>M-Funktion für ASUP Deaktivierung</brief>
<description>M-Funktionsnummer, mit der im ISO2/3-Mode ein Interruptprogramm (ASUP) deaktiviert wird.
Die im Maschinendatum definierte M-Nummer ersetzt M97 im externen Sprachmode.

Einschränkungen: siehe MD10715 $MN_M_NO_FCT_CYCLE

	MD10714 $MN_M_NO_FCT_EOP,
	MD10715 $MN_M_NO_FCT_CYCLE,
	MD20094 $MC_SPIND_RIGID_TAPPING_M_NR,
	MD22254 $MC_AUXFU_ASSOC_M0_VALUE
	MD10814 $MN_EXTERN_M_NO_MAC_CYCLE,
	MD10804 $MN_EXTERN_M_NO_SET_INT
	MD10806 $MN_EXTERN_M_NO_DISABLE_INT,
	MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN,
	MD10802 $MN_EXTERN_CHAN_SYNC_M_NO_MAX
	MD20095 $MC_EXTERN_RIGID_TAPPING_M_NR
	MD26008 $MC_NIBBLE_PUNCH_CODE
</description>
</parameter>
<parameter number="10808" type="UDWORD" dim="0" display="HEX">
<name>EXTERN_INTERRUPT_BITS_M96</name>
<brief>Interruptprogramm (ASUP) aktivieren</brief>
<description>Mit dem Setzen der verschiedenen Bits kann der Ablauf der mit M96 P.. aktivierten Interruptroutine beeinflusst werden.
Bit 0 = 0
	kein Interrupt-Programm möglich, M96/M97 sind normale M-Funktionen
Bit 0 = 1
	Aktivierung eines Interrupt-Programms mit M96/M97 erlaubt
Bit 1 = 0
	Teileprogramm mit der Endposition des nächsten Satz nach dem Unterbrechungssatz weiterbearbeiten
Bit 1 = 1
	Teileprogramm ab der Unterbrechungsposition weiterbearbeiten
Bit 2 = 0
	Das Interruptsignal unterbricht den aktuellen Satz sofort und startet die Interruptroutine
Bit 2 = 1
	Die Interruptroutine wird erst am Ende des Satzes gestartet.
Bit 3 = 0
	Bearbeitungszyklus bei einem Interuptsignal unterbrechen
Bit 3 = 1
	Interrupt-Programm erst am Ende des Bearbeitungszyklus starten.
</description>
</parameter>
<parameter number="10810" type="UBYTE" dim="1" display="HEX">
<name>EXTERN_MEAS_G31_P_SIGNAL</name>
<brief>Zuordnung der Messeingänge für G31 P..</brief>
<description>Mit dem Maschinendatum wird eine Zuordnung der Messeingänge 1 und 2 zu den mit G31 P1 ( - P4) programmierten P-Nummern festgelegt. Das Maschinendatum ist Bit- Codiert. Es werden nur Bit 0 und Bit 1 ausgewertet. Ist z. B. in MD10810 $MN_EXTERN_MEAS_G31_P_SIGNAL[1] das Bit 0 = 1, wird mit G31 P2 der 1. Messeingang aktiviert. Mit MD10810 $MN_EXTERN_MEAS_G31_P_SIGNAL[3]=2 wird mit G31 P4 der 2. Messeingang aktiviert.
Bit 0:   = 0, Messeingang 1 bei G31 P1 (- P4) nicht auswerten
Bit 0:   = 1, Messeingang 1 bei G31 P1 (- P4) aktivieren
Bit 1:   = 0, Messeingang 2 bei G31 P1 (- P4) nicht auswerten
Bit 1:   = 1, Messeingang 2 bei G31 P1 (- P4) aktivieren
</description>
</parameter>
<parameter number="10812" type="BOOLEAN" dim="0">
<name>EXTERN_DOUBLE_TURRET_ON</name>
<brief>Doppelrevolverkopf mit G68</brief>
<description>Mit diesem Maschinendatum wird festgelegt, ob mit G68 eine Doppelschlittenbearbeitung (Kanalsynchronisation für 1. und 2. Kanal ) gestartet werden soll oder das zweite Werkzeug eins Doppelrevolvers (= zwei, mit dem im SD42162 SC_EXTERN_DOUBLE_TURRET_DIST definierten Abstand, fest miteinander verbundene Werkzeuge) aktiviert werden soll.

FALSE:
	Kanalsynchronisation für Doppelschlittenbearbeitung

TRUE:
	2. Werkzeug eines Doppelrevolvers einwechseln (= $SC_EXTERN_DOUBLE_TURRET_DISTANCE als additive Nullpunktverschiebung und Spiegeln um Z- Achse aktivieren)
</description>
</parameter>
<parameter number="10814" type="DWORD" dim="1">
<name>EXTERN_M_NO_MAC_CYCLE</name>
<brief>Makroaufruf über M-Funktion</brief>
<description>M-Nummer mit der ein Makro aufgerufen wird.

Der Name des Unterprogramms steht in MD10815 $MN_EXTERN_M_NO_MAC_CYCLE_NAME[n].

Wird in einem Teileprogrammsatz die mit MD10814 $MN_EXTERN_M_NO_MAC_CYCLE[n] festgelegte M-Funktion programmiert, wird das in MD10815 $MN_EXTERN_M_NO_MAC_CYCLE_NAME[n] definierte Unterprogramm gestartet, alle im Satz programmierten Adressen werden in die dazugehörigen Variablen geschrieben.

Wird die M-Funktion im Unterprogramm nochmals programmiert, findet die Ersetzung durch einen Unterprogrammaufruf nicht mehr statt.

MD10814 $MN_EXTERN_M_NO_MAC_CYCLE[n] wirkt nur im externen Sprach-Mode G291.

Die mit MD10815 $MN_EXTERN_M_NO_MAC_CYCLE_NAME[n] projektierten Unterprogramme dürfen nicht gleichzeitig in einem Satz (Teileprogrammzeile) wirksam werden, d.h. pro Satz kann maximal eine M-Funktionsersetzung wirksam werden. In dem Satz mit der M-Funktionsersetzung darf weder ein M98- noch ein modaler Unterprogramm-Aufruf  programmiert sein.

Auch Unterprogrammrücksprung und Teileprogrammende sind nicht erlaubt. Im Konfliktfall wird Alarm 14016 abgesetzt. Einschränkungen: siehe MD10715 $MN_M_NO_FCT_CYCLE

Korrespondiert mit:
	MD10714 $MN_M_NO_FCT_EOP,
	MD10715 $MN_M_NO_FCT_CYCLE,
	MD20094 $MC_SPIND_RIGID_TAPPING_M_NR,
	MD22254 $MC_AUXFU_ASSOC_M0_VALUE

	MD10814 $MN_EXTERN_M_NO_MAC_CYCLE,
	MD10804 $MN_EXTERN_M_NO_SET_INT
	MD10806 $MN_EXTERN_M_NO_DISABLE_INT,
	MD10800 $MN_EXTERN_CHAN_SYNC_M_NO_MIN,
	MD10802 $MN_EXTERN_CHAN_SYNC_M_NO_MAX
	MD20095 $MC_EXTERN_RIGID_TAPPING_M_NR

	MD26008 $MC_NIBBLE_PUNCH_CODE
</description>
</parameter>
<parameter number="10815" type="STRING" dim="1">
<name>EXTERN_M_NO_MAC_CYCLE_NAME</name>
<brief>Unterprogrammname für Makroaufruf über M-Funktion</brief>
<description>Name des Unterprogramms, das bei Aufruf über die mit MD10814 $MN_EXTERN_M_NO_MAC_CYCLE[n] definierte M-Funktion gestartet wird.
</description>
</parameter>
<parameter number="10816" type="DOUBLE" dim="1">
<name>EXTERN_G_NO_MAC_CYCLE</name>
<brief>Makroaufruf über G-Funktion</brief>
<description>G-Nummer mit der ein Makro aufgerufen wird.
Der Name des Unterprogramms steht in MD10817 $MN_EXTERN_G_NO_MAC_CYCLE_NAME[n].
Wird in einem Teileprogrammsatz die mit MD10816 $MN_EXTERN_G_NO_MAC_CYCLE[n] festgelegte G-Funktion programmiert, wird das in MD10817 $MN_EXTERN_M_NO_MAC_CYCLE_NAME[n] definierte Unterprogramm gestartet. Alle im Satz programmierten Adressen werden in die dazugehörigen $C_xx Variablen geschrieben.
Ist bereits ein Unterprogrammaufruf über ein M/G-Makro oder eine M-Substitution aktiv, wird kein Unterprogrammaufruf ausgeführt. Ist in diesem Fall eine Standard-G-Funktion programmiert, wird diese ausgeführt, andernfalls wird der Alarm 12470 ausgegeben.

MD10816 $MN_EXTERN_G_NO_MAC_CYCLE[n] wirkt nur im externen Sprach-Mode G291.
In einem Satz darf nur ein Unterprogrammaufruf stehen. D. h., in einem Satz darf immer nur eine M/G-Funktionsersetzung programmiert werden und es darf kein zusätzlicher Unterprogramm- (M98) oder Zyklenaufruf im Satz stehen.
Auch Unterprogrammrücksprung und Teileprogrammende im selben Satz sind nicht erlaubt.

Im Konfliktfall wird Alarm 14016 abgesetzt.
</description>
</parameter>
<parameter number="10817" type="STRING" dim="1">
<name>EXTERN_G_NO_MAC_CYCLE_NAME</name>
<brief>Unterprogrammname für Makroaufruf über G-Funktion</brief>
<description>Name des Unterprogramms, das bei Aufruf über die mit MD10816 $MN_EXTERN_G_NO_MAC_CYCLE[n] definierte G-Funktion gestartet wird.
</description>
</parameter>
<parameter number="10818" type="BYTE" dim="0">
<name>EXTERN_INTERRUPT_NUM_ASUP</name>
<brief>Interruptnummer für ASUP-Start (M96)</brief>
<description>Nummer des Interrupteingangs, mit dem ein im ISO-Mode aktiviertes asynchrones Unterprogramm ASUP gestartet wird. (M96 &lt;Programmnummer&gt;)
</description>
</parameter>
<parameter number="10820" type="BYTE" dim="0">
<name>EXTERN_INTERRUPT_NUM_RETRAC</name>
<brief>Interruptnummer für Schnellrückzug (G10.6)</brief>
<description>Nummer des Interrupteingangs, mit dem im ISO-Mode ein Schnellrückzug auf die mit G10.6 programmierte Position ausgelöst wird.
</description>
</parameter>
<parameter number="10830" type="STRING" dim="1">
<name>EXTERN_PRINT_DEVICE</name>
<brief>Ausgabegerät für ISOPRINT</brief>
<description>Pfad des Ausgabegerätes für ISOPRINT
</description>
</parameter>
<parameter number="10831" type="UDWORD" dim="0" display="HEX">
<name>EXTERN_PRINT_MODE</name>
<brief>Ausgabegerät für ISOPRINT parametrieren</brief>
<description>Ausgabegerät für ISOPRINT parametrieren
Bit 0: 0= synchrone Ausgabe
       1= asynchrone Ausgabe
Bit 1: 0= exklusive Belegung
       1= shared Belegung
Bit 2: Ausgabe von DC2 (H12) beim Öffnen
Bit 3: Ausgabe von DC4 (H14) beim Schließen
Bit 4: Ausgabe-String wird mit LF abgeschlossen
Bit 5: Ausgabe-String wird mit CR + LF abgeschlossen
</description>
</parameter>
<parameter number="10850" type="DWORD" dim="0">
<name>MM_EXTERN_MAXNUM_OEM_GCODES</name>
<brief>Maximale Anzahl der OEM-G-Codes</brief>
<description>Mit dem Maschinendatum wird die Anzahl der G-Codes definiert, die für eine externe Sprache über eine OEM-Applikation implementiert werden.
</description>
</parameter>
<parameter number="10880" type="DWORD" dim="0">
<name>MM_EXTERN_CNC_SYSTEM</name>
<brief>Definition des zu adaptierenden Steuerungssystems</brief>
<description>Festlegung des externen CNC-Systems, dessen Teileprogramme auf der SINUMERIK-Steuerung neben SINUMERIK-Code (ISO_1) abgearbeitet werden sollen:

1: ISO_21: System Fanuc0 Milling (ab 5.1)
2: ISO_31: System Fanuc0 Turning (ab P5.2)
3: externe Sprache über OEM-Applikation (ab P6.2)
4: ISO_22: System Fanuc0 Milling (ab P7.)
5: ISO_32: System Fanuc0 Turning (ab P7.)
</description>
</parameter>
<parameter number="10881" type="DWORD" dim="0">
<name>MM_EXTERN_GCODE_SYSTEM</name>
<brief>ISO_3 Mode: GCodeSystem</brief>
<description>Festlegung des GCodeSystems, das im ISO_3 Mod ( Turning ) aktiv abgearbeitet werden sollen:

Wert = 0 : ISO_3: Code System B
Wert = 1 : ISO_3: Code System A
Wert = 2 : ISO_3: Code System C
</description>
</parameter>
<parameter number="10882" type="STRING" dim="1">
<name>NC_USER_EXTERN_GCODES_TAB</name>
<brief>Liste anwenderspezifischer G-Befehle einer externen NC-Sprache</brief>
<description>Liste der vom Anwender umprojektierten G-Befehle externe NC-Sprachen.
Die realisierten G-Befehle sind der aktuellen Siemens-Dokumentation für diese Programmiersprache zu entnehmen.
Die Liste ist wie folgt aufzubauen:
gerade Adresse:                   zu verändernder G-Befehl
darauffolgende ungerade Adresse:  neuer G-Befehl
Umprojektiert werden können nur G-Codes,  z.B.: G20, G71.
</description>
</parameter>
<parameter number="10884" type="BOOLEAN" dim="0">
<name>EXTERN_FLOATINGPOINT_PROG</name>
<brief>Bewertung programmierter Werte ohne Dezimalpunkt</brief>
<description>Mit diesem Maschinendatum wird die Bewertung programmierter Werte ohne Dezimalpunkt festgelegt:

0: 'standard notation', Werte ohne Dezimalpunkt werden in interne Einheiten interpretiert. z. B. X1000 = 1mm (bei 0.001mm Eingabefeinheit) X1000.0 = 1000 mm

1: 'pocketcalculator notation', Werte ohne Dezimalpunkt werden als mm, inch oder Grad interpretiert. z. B. X1000 = 1000 mm, X1000.0 = 1000 mm

Korrespondiert mit:
	MD10886 $MN_EXTERN_INCREMENT_SYSTEM
</description>
</parameter>
<parameter number="10886" type="BOOLEAN" dim="0">
<name>EXTERN_INCREMENT_SYSTEM</name>
<brief>Inkrementsystem im externen Sprachmode</brief>
<description>Dieses Maschinendatum wirkt für externe Programmiersprachen
d.h. wenn MD18800 $MN_MM_EXTERN_LANGUAGE = 1.

Mit diesem Maschinendatum wird festgelegt,  welches Inkrement System aktiv ist:
0: Inkrementsystem  IS-B = 0.001 mm/Grad
                                                 = 0.0001 inch
1: Inkrementsystem  IS-C = 0.0001 mm/Grad
                                                 = 0.00001 inch
Korrespondiert mit:
	MD10884 $MN_EXTERN_FLOATINGPOINT_PROG
</description>
</parameter>
<parameter number="10888" type="BYTE" dim="0">
<name>EXTERN_DIGITS_TOOL_NO</name>
<brief>Stellenzahl für die T-Nummer im ISO-Mode</brief>
<description>Das Maschinendatum ist nur wirksam bei MD10880 $MN_MM_EXTERN_CNC_SYSTEM == 2.
Stellenanzahl Werkzeugnummer im programmierten T-Wort.
Aus dem programmierten T-Wort werden die über MD10888 $MN_EXTERN_DIGITS_TOOL_NO angegebene Anzahl führender Stellen als Werkzeugnummer interpretiert.
Die folgenden Stellen adressieren den Korrekturspeicher.
Wird in das MD10889 $MN_EXTERN_DIGITS_OFFSET_NO ein Wert &gt; 0 eingetragen, wirkt das MD10888  $MN_EXTERN_DIGITS_TOOL_NO nicht.
MD10889 $MN_EXTERN_DIGITS_OFFSET_NO hat Vorrang vor MD10888 $MN_EXTERN_DIGITS_TOOL_NO.
</description>
</parameter>
<parameter number="10889" type="BYTE" dim="0">
<name>EXTERN_DIGITS_OFFSET_NO</name>
<brief>Stellenzahl für die Korrekturnummer im ISO-Mode</brief>
<description>Das Maschinendatum ist nur wirksam bei MD10880 $MN_MM_EXTERN_CNC_SYSTEM == 2.
Stellenanzahl Korrekturnummer im programmierten T-Wort.
Aus dem programmierten T-Wort werden die über MD10889 $MN_EXTERN_DIGITS_OFFSET_NO angegebene Anzahl Stellen als Korrekturnummer interpretiert.
Die folgenden Stellen adressieren die Werkzeugnummer.
</description>
</parameter>
<parameter number="10890" type="UDWORD" dim="0" display="HEX">
<name>EXTERN_TOOLPROG_MODE</name>
<brief>Werkzeugwechsel-Programm bei externer Sprache</brief>
<description>Konfiguration der Programmierung des Werkzeugwechsels bei externer Programmiersprache:
Bit0=0:
	Wirkt nur bei ISO-Mode Turning: Im T-Wort werden Werkzeugnummer und Korrekturnummer programmiert. $MN_DIGITS_TOOLNO bestimmt die Anzahl der führenden Stellen, die die Werkzeugnummer bilden.
	Beispiel:
	$MN_DIGITS_TOOLNO = 2
	T=1234    ; Werkzeugnummer 12,
	          ; Korrekturnummer 34

 Bit0=1:
	Wirkt nur bei ISO-Mode Turning: Im T-Wort wird nur die Werkzeugnummer programmiert. Korrekturnummer == Werkzeugnummer. $MN_DIGITS_TOOLNO ist irrelevant.
	Beispiel:
	T=12      ; Werkzeugnummer 12
	          ; Korrekturnummer 12

 Bit1=0:
	Wirkt nur bei ISO-Mode Turning:
Ist die Anzahl der im T-Wort programmierten Stellen gleich der in MD10888 $MN_EXTERN_DIGITS_TOOL_NO bestimmten Anzahl, so werden führende 0 ergänzt
 Bit1=1:
	Wirkt nur bei ISO-Mode Turning:
 Ist die Anzahl der im T-Wort programmierten Stellen gleich der in MD10888 $MN_EXTERN_DIGITS_TOOL_NO angegebenen Stellenanzahl, so gilt die programmierte Nummer als Korrekturnummer und Werkzeugnummer

 Bit2=0:
	Wirkt nur bei ISO-Mode Turning: ISO T Korrekturanwahl nur mit D (Siemens Schneidennummer)
 Bit2=1:
	Wirkt nur bei ISO-Mode Turning: ISO T Korrekturanwahl nur mit H ($TC_DPH[t,d])


 Bit6=0:
               Die Korrekturspeicher für die Werkzeuglänge und den Werkzeugradius sind der Art gekoppelt, dass mit der Programmierung von H oder D immer Werkzeuglänge und Werkzeugradius angewählt werden.
 Bit6=1:
              Die Korrekturspeicher für die Werkzeuglänge und den Werkzeugradius sind entkoppelt, so dass mit der Programmierung von H die Nummer des Werkzeuglängenwertes und mit der Programmierung von D die Nummer des Werkzeugradiuswerts angewählt wird.

Bit7=0:
	Wirkt nur bei ISO-Mode Turning. Bei aktiver T-Substitution ( MD10717 $MN_T_NO_FCT_CYCLE_NAME ) wird die im T-Wort programmierte H-Nummer dem Zyklus in der Variable $C_D übergeben.

Bit7=1:
	Wirkt nur bei ISO-Mode Turning. Bei aktiver T-Substitution ( MD10717 $MN_T_NO_FCT_CYCLE_NAME ) wird die, der im T-Wort programmierten H-Nummer entsprechende Siemens Schneidennummer D, dem Zyklus in der Variable $C_D übergeben.
</description>
</parameter>
<parameter number="10900" type="DWORD" dim="0">
<name>INDEX_AX_LENGTH_POS_TAB_1</name>
<brief>Anzahl der Positionen für Teilungsachstabelle 1</brief>
<description>Mit der Teilungspositionstabelle erfolgt die Zuordnung zwischen den Teilungspositionen [n] der Teilungsachse und den Achspositionen in der gültigen Maßeinheit (mm, inch oder Grad). Die Anzahl der in der Tabelle 1 verwendeten Teilungspositionen wird durch das MD10900 $MN_INDEX_AX_LENGTH_POS_TAB_1 festgelegt.

In der Tabelle 1 müssen  diese Teilungspositionen mit gültigen Werten belegt sein. Alle Teilungspositionen der Tabelle größer der in dem Maschinendatum festgelegten Anzahl werden nicht berücksichtigt. Maximal können 60 Teilungspositionen (0 bis 59) in die Tabelle eingetragen werden.
Tabellenlänge = 0 bedeutet, dass die Tabelle nicht ausgewertet wird. Ist die Länge ungleich 0, so muss die Tabelle einer Achse mit dem MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB zugeordnet werden.

Ist die Teilungsachse als Rundachse (MD30300 $MA_IS_ROT_AX = "1") mit Modulo 360° (MD30310 $MA_ROT_IS_MODULO = "1") definiert, so wird mit dem Maschinendatum die letzte Teilungsposition festgelegt, nach der bei weiterer Verfahrbewegung in positiver Drehrichtung die Teilungspositionen wieder von 1 beginnen.

Sonderfälle:
	Alarm 17090 "Wert größer als Obergrenze", falls im MD10900 $MN_INDEX_AX_LENGTH_POS_TAB_1 Werte größer 60 eingetragen werden.

Korrespondiert mit:
	MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB (Achse ist Teilungsachse)
	MD10910 $MN_INDEX_AX_POS_TAB_1 (Teilungspositionstabelle 1)
	MD30300 $MA_IS_ROT_AX (Rundachse)
	MD30310 $MA_ROT_IS_MODULO (Moduloumwandlung für Rundachse)
</description>
</parameter>
<parameter number="10910" type="DOUBLE" dim="1">
<name>INDEX_AX_POS_TAB_1</name>
<brief>Teilungspositionstabelle 1</brief>
<description>Mit der Teilungspositionstabelle erfolgt die Zuordnung zwischen den Teilungspositionen [n] der Teilungsachse und den Positionen in der gültigen Maßeinheit (mm, inch oder Grad).
[n] =    Index für die Eingabe der Teilungspositionen in die Teilungspositionstabelle
Bereich:  0 y n x 59, wobei  0 der 1. Teilungsposition entspricht und 59 der 60. Teilungsposition.

Beachte:
	Bei Programmierung auf die absolute Teilungsposition  (z.B. CAC) wird mit Teilungsposition 1 begonnen. Dies entspricht der mit Index n = 0 in der Teilungspositionstabelle eingetragenen Teilungsposition.

Bei der Eingabe der Teilungspositionen ist folgendes zu beachten:
- Maximal können in der Tabelle 60 verschiedene Teilungspositionen abgelegt werden.
- Der 1. Eintrag in der Tabelle entspricht Teilungsposition 1; der n-te Eintrag somit Teilungsposition n.
- Die Teilungspositionen müssen in aufsteigender Reihenfolge, beginnend vom negativen zum positiven Verfahrbereich, ohne Lücken in die Tabelle eingetragen werden. Dabei dürfen aufeinanderfolgende Positionswerte nicht identisch sein.
- Ist die Teilungsachse als Rundachse (MD30300 $MA_IS_ROT_AX = "1") mit Modulo 360° (MD30310 $MA_ROT_IS_MODULO = "1") definiert, so sind die Positionswerte auf den Bereich  0o x Pos. &lt; 360o beschränkt.

Die Anzahl der in der Tabelle verwendeten Teilungspositionen wird durch das MD10900 $MN_INDEX_AX_LENGTH_POS_TAB_1 festgelegt.
Durch Eintrag des Wertes 1 in das axiale MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB wird der jeweiligen Achse die Teilungspositionstabelle 1 zugeordnet.

Sonderfälle:
	Alarm 17020 "unerlaubter Array-Index", falls mehr als 60 Positionen in die Tabelle eingetragen werden.

Korrespondiert mit:
	MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB (Achse ist Teilungsachse)
	MD10900 $MN_INDEX_AX_LENGTH_POS_TAB_1 (Anzahl der in Tabelle 1 verwendeten Teilungspositionen)
	MD30300 $MA_IS_ROT_AX (Rundachse)
	MD30310 $MA_ROT_IS_MODULO (Moduloumwandlung für Rundachse)
</description>
</parameter>
<parameter number="10920" type="DWORD" dim="0">
<name>INDEX_AX_LENGTH_POS_TAB_2</name>
<brief>Anzahl der Positionen für Teilungsachstabelle 2</brief>
<description>Mit der Teilungspositionstabelle erfolgt die Zuordnung zwischen den Teilungspositionen [n] der Teilungsachse und den Achspositionen in der gültigen Maßeinheit (mm, inch oder Grad). Die Anzahl der in der Tabelle 2 verwendeten Teilungspositionen wird durch das MD10920 $MN_INDEX_AX_LENGTH_POS_TAB_2 festgelegt.

In der Tabelle 2 müssen  diese Teilungspositionen mit gültigen Werten belegt sein. Alle Teilungspositionen der Tabelle größer der in dem Maschinendatum festgelegten Anzahl werden nicht berücksichtigt.
Maximal können 60 Teilungspositionen  (0 bis 59) in die Tabelle eingetragen werden.
Tabellenlänge = 0 bedeutet, dass die Tabelle nicht ausgewertet wird. Ist die Länge ungleich 0, so muss die Tabelle einer Achse mit MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB zugeordnet werden.
Ist die Teilungsachse als Rundachse (MD30300 $MA_IS_ROT_AX = "1") mit Modulo 360° (MD30310 $MA_ROT_IS_MODULO = "1") definiert, so wird mit dem Maschinendatum die letzte Teilungsposition festgelegt, nach der bei weiterer Verfahrbewegung in positiver Drehrichtung die Teilungspositionen wieder von 1 beginnen.

Nicht relevant bei Werkzeugmagazinen (Revolver, Kettenmagazin)

Sonderfälle:
	Alarm 17090 "Wert größer als Obergrenze", falls im MD10920 $MN_INDEX_AX_LENGTH_POS_TAB_2 Werte größer 60 eingetragen werden.

Korrespondiert mit:
	MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB (Achse ist Teilungsachse)
	MD10930 $MN_INDEX_AX_POS_TAB_2 (Teilungspositionstabelle 2)
	MD30300 $MA_IS_ROT_AX (Rundachse)
	MD30310 $MA_ROT_IS_MODULO (Moduloumwandlung für Rundachse)
</description>
</parameter>
<parameter number="10930" type="DOUBLE" dim="1">
<name>INDEX_AX_POS_TAB_2</name>
<brief>Teilungspositionstabelle 2</brief>
<description>Mit der Teilungspositionstabelle erfolgt die Zuordnung zwischen den Teilungspositionen [n] der Teilungsachse und den Positionen in der gültigen Maßeinheit (mm, inch oder Grad).
[n] =      Index für die Eingabe der Teilungspositionen in die Teilungspositionstabelle
Bereich:  0 y n x 59, wobei  0 der 1. Teilungsposition entspricht und 59 der 60. Teilungsposition

Beachte:
	Bei Programmierung auf die absolute Teilungsposition (z.B. CAC) wird mit Teilungsposition 1 begonnen. Dies entspricht der mit Index n = 0 in der Teilungspositionstabelle eingetragenen Teilungsposition.

Bei der Eingabe der Teilungspositionen ist folgendes zu beachten:
-  Maximal können in der Tabelle 60 verschiedene Teilungspositionen abgelegt werden.
-  Der 1. Eintrag in der Tabelle entspricht Teilungsposition 1; der n-te Eintrag somit Teilungsposition n.
-  Die Teilungspositionen müssen in aufsteigender Reihenfolge, beginnend vom negativen zum positiven Verfahrbereich, ohne Lücken in die Tabelle eingetragen werden. Dabei dürfen aufeinanderfolgende Positionswerte nicht identisch sein.
-  Ist die Teilungsachse als Rundachse (MD30300 $MA_IS_ROT_AX = "1") mit Modulo 360° (MD30310 $MA_ROT_IS_MODULO = "1") definiert, so sind die Positionswerte auf den Bereich  0° x Pos. &lt; 360° beschränkt.

Die Anzahl der in der Tabelle verwendeten Teilungspositionen wird durch das MD10920 $MN_INDEX_AX_LENGTH_POS_TAB_2 festgelegt.
Durch Eintrag des Wertes 1 in das axiale MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB wird der jeweiligen Achse die Teilungspositionstabelle 1 zugeordnet.

Sonderfälle:
	Alarm 17020 "unerlaubter Array-Index", falls mehr als 60 Positionen in die Tabelle eingetragen werden.

Korrespondiert mit:
	MD30500 $MA_INDEX_AX_ASSIGN_POS_TAB (Achse ist Teilungsachse)
	MD10920 $MN_INDEX_AX_LENGTH_POS_TAB_2 (Anzahl der in Tabelle 2 verwendeten Teilungspositionen)
	MD30300 $MA_IS_ROT_AX (Rundachse)
	MD30310 $MA_ROT_IS_MODULO (Moduloumwandlung für Rundachse)
</description>
</parameter>
<parameter number="10940" type="UDWORD" dim="0" display="HEX">
<name>INDEX_AX_MODE</name>
<brief>Einstellungen für Teilungsposition</brief>
<description>Beeinflusst die Anzeige von Teilungspositionen (AA_ACT_INDEX_AX_POS_NO und aaActIndexAxPosNo).
Bit 0 = 0:
	Teilungspositionsanzeige ändert sich beim Erreichen/Überfahren der Teilungsposition (Teilungsbereich liegt zwischen den Teilungspositionen, kompatibles Verhalten).
Bit 0 = 1:
	Teilungspositionsanzeige ändert sich beim Überschreiten der halben Teilungsachsposition (Teilungsbereich liegt quasi symmetrisch um die Teilungsposition).
</description>
</parameter>
<parameter number="11100" type="DWORD" dim="0">
<name>AUXFU_MAXNUM_GROUP_ASSIGN</name>
<brief>Anzahl der auf HIFU-Gruppen verteilten Hilfsfunktionen</brief>
<description>Maximale Anzahl der Hilfsfunktionen, die über
AUXFU_ASSIGN_TYPE,
AUXFU_ASSIGN_EXTENTION,
AUXFU_ASSIGN_VALUE,
AUXFU_ASSIGN_GROUP
einer Gruppe zugeordnet werden können. Es zählen nur die anwenderdefinierten Hilfsfunktionen, nicht die vordefinierten Hilfsfunktionen.

Korrespondiert mit:
	MD22010 $MC_AUXFU_ASSIGN_TYPE[n].
</description>
</parameter>
<parameter number="11110" type="UDWORD" dim="1" display="HEX">
<name>AUXFU_GROUP_SPEC</name>
<brief>Hilfsfunktionsgruppenspezifikation</brief>
<description>Hiermit wird das Ausgabeverhalten der Hilfsfunktionen einer Gruppe spezifiziert.
Das Ausgabeverhalten einer projektierten Hilfsfunktion durch MD22080 $MC_AUXFU_PREDEF_SPEC[ preIndex ] oder MD22035 $MC_AUXFU_ASSIGN_SPEC[ auxIndex ] ist jedoch höherprior.

Bit 0 = 1	Quittierung "normal" nach einen OB1-Takt
Bit 1 = 1	Quittierung "quick" mit OB40
Bit 2 = 1	keine vordefinierte Hilfsfunktion
Bit 3 = 1	keine Ausgabe an die PLC
Bit 4 = 1	Spindelreaktion nach der Quittung durch die PLC
Bit 5 = 1	Ausgabe vor der Bewegung
Bit 6 = 1	Ausgabe während der Bewegung
Bit 7 = 1	Ausgabe am Satzende
Bit 8 = 1	keine Ausgabe nach Satzsuchlauf Type 1,2,4
Bit 9 = 1	Aufsammlung während Satzsuchlauf Type 5 (SERUPRO)
Bit 10 = 1 keine Ausgabe während Satzsuchlauf Type 5 (SERUPRO)
Bit 11 = 1	kanalübergreifende Hilfsfunktion während Satzsuchlauf Type 5 (SERUPRO)
Bit 12 = 1	Ausgabe erfolgte über Synchronaktion
Bit 13 = 1 implizite Hilfsfunktion
Bit 14 = 1 aktives M01
Bit 15 = 1 keine Ausgabe während Einfahr-Testlauf
Bit 16 = 1 Nibbeln aus
Bit 17 = 1 Nibbeln ein
Bit 18 = 1 Nibbeln

Das MD ist für jede vorhandene Hilfsfunktionsgruppe zu definieren.
Der Index [n] entspricht dem Hilfsfunktionsgruppenindex: 0..63

Die Zuordnung einzelner Hilfsfunktionen zu bestimmten Gruppen wird in kanalspez. Maschinendaten festgelegt (  AUXFU_PREDEF_TYPE, AUXFU_PREDEF_EXTENTION, AUXFU_PREDEF_VALUE,  AUXFU_PREDEF_GROUP, AUXFU_ASSIGN_TYPE, AUXFU_ASSIGN_EXTENTION, AUXFU_ASSIGN_VALUE,  AUXFU_ASSIGN_GROUP ).
M0, M1, M2, M17 und M30 werden defaultmäßig der Gruppe 1 zugeordnet.
Die Spezifikation dieser Gruppe ( 0x81: Ausgabedauer 1 OB1 Durchlauf, Ausgabe am Satzende ) darf nicht verändert werden.
Alle spindelspez. Hilfsfunktionen ( M3, M4, M5, M19, M70 ) werden defaultmäßig der Gruppe 2 zugeordnet.
Werden mehrere Hilfsfunktionen mit unterschiedlichen Ausgabetypen ( vor / während / am Ende der Bewegung ) in einem Satz mit Bewegung programmiert, erfolgt die Ausgabe der einzelnen Hifus entsprechend ihrem Ausgabetyp.
In einem Satz ohne Bewegung werden alle Hilfsfunktionen gleichzeitig ausgegeben.

Standardvorbesetzung:
	AUXFU_GROUP_SPEC[0]=81H
	AUXFU_GROUP_SPEC[1]=21H
	AUXFU_GROUP_SPEC[2]=41H
...
	AUXFU_GROUP_SPEC[n]=41H
</description>
</parameter>
<parameter number="11120" type="BOOLEAN" dim="0">
<name>LUD_EXTENDED_SCOPE</name>
<brief>Funktion 'programmglobale Anwenderdaten (PUD)' aktiv</brief>
<description>Funktion "programmglobale Anwenderdaten (PUD)" aktivieren:
MD = 0: Anwenderdaten der Hauptprogrammebene wirken nur in dieser Ebene.
MD = 1: Anwenderdaten der Hauptprogrammebene sind auch in den Unterprogrammebenen sichtbar.
</description>
</parameter>
<parameter number="11140" type="UDWORD" dim="1" display="HEX">
<name>GUD_AREA_SAVE_TAB</name>
<brief>Zusätzliche Sicherung für GUD-Bausteine</brief>
<description>Diese Datum gibt an, mit welchen Bereich der Inhalt des GUD Bausteins zusätzlich gesichert wird.
MD11140 $MN_GUD_AREA_SAVE_TAB[0] : SGUD_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[1] : MGUD_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[2] : UGUD_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[3] : GUD4_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[4] : GUD5_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[5] : GUD6_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[6] : GUD7_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[7] : GUD8_DEF
MD11140 $MN_GUD_AREA_SAVE_TAB[8] : GUD9_DEF

BitNr.   Hexadez        Bedeutung bei gesetztem Bit
Wert
0 (LSB)  0x00000001     Bereich TOA
</description>
</parameter>
<parameter number="11160" type="BYTE" dim="0">
<name>ACCESS_EXEC_CST</name>
<brief>Ausführungsrecht für /_N_CST_DIR</brief>
<description> Ausführungsrecht das den im Verzeichnis /_N_CST_DIR abgelegten Programmen zugeordnet wird:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11161" type="BYTE" dim="0">
<name>ACCESS_EXEC_CMA</name>
<brief>Ausführungsrecht für /_N_CMA_DIR</brief>
<description>Ausführungsrecht das den im Verzeichnis /_N_CMA_DIR abgelegten Programmen zugeordnet wird:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11162" type="BYTE" dim="0">
<name>ACCESS_EXEC_CUS</name>
<brief>Ausführungsrecht für /_N_CUS_DIR</brief>
<description>Ausführungsrecht das den im Verzeichnis /_N_CUS_DIR abgelegten Programmen zugeordnet wird:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0,1 und 2 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11165" type="DWORD" dim="0">
<name>ACCESS_WRITE_CST</name>
<brief>Schreibschutz für Verzeichnis /_N_CST_DIR</brief>
<description>Schreibschutz für das Zyklenverzeichnis /_N_CST_DIR einstellen:
Programmen zugeordnet wird:
 Wert -1: aktuell eingestellten Wert beibehalten
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11166" type="DWORD" dim="0">
<name>ACCESS_WRITE_CMA</name>
<brief>Schreibschutz für Verzeichnis /_N_CMA_DIR</brief>
<description>Schreibschutz für das Zyklenverzeichnis /_N_CMA_DIR einstellen:
Programmen zugeordnet wird:
 Wert -1: aktuell eingestellten Wert beibehalten
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11167" type="DWORD" dim="0">
<name>ACCESS_WRITE_CUS</name>
<brief>Schreibschutz für Verzeichnis /_N_CUS_DIR</brief>
<description>Schreibschutz für das Zyklenverzeichnis /_N_CUS_DIR einstellen:
Programmen zugeordnet wird:
 Wert -1: aktuell eingestellten Wert beibehalten
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0,1 und 2 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11170" type="BYTE" dim="0">
<name>ACCESS_WRITE_SACCESS</name>
<brief>Schreibschutz für _N_SACCESS_DEF</brief>
<description>Schreibschutz für Definitionsdatei /_N_DEF_DIR/_N_SACCESS_DEF einstellen:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11171" type="BYTE" dim="0">
<name>ACCESS_WRITE_MACCESS</name>
<brief>Schreibschutz für _N_MACCESS_DEF</brief>
<description>Schreibschutz für Definitionsdatei /_N_DEF_DIR/_N_MACCESS_DEF einstellen:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0 und 1 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11172" type="BYTE" dim="0">
<name>ACCESS_WRITE_UACCESS</name>
<brief>Schreibschutz für _N_UACCESS_DEF</brief>
<description>Schreibschutz für Definitionsdatei /_N_DEF_DIR/_N_UACCESS_DEF einstellen:
 Wert  0: Kennwort Siemens
 Wert  1: Kennwort Maschinenhersteller
 Wert  2: Kennwort Inbetriebnehmer, Service
 Wert  3: Kennwort Endanwender
 Wert  4: Schlüsselschalter Stellung 3
 Wert  5: Schlüsselschalter Stellung 2
 Wert  6: Schlüsselschalter Stellung 1
 Wert  7: Schlüsselschalter Stellung 0
Das Maschinendatum kann mit den Werten 0,1 und 2 nur beschrieben werden, wenn auch das entsprechende Kennwort aktiv ist.
</description>
</parameter>
<parameter number="11190" type="UDWORD" dim="0" display="HEX">
<name>IBN_LOAD_FASTOPT</name>
<brief>Optimierung der Serien-Inbetriebnahme</brief>
<description>Optimierung der Serien-Inbetriebnahme
Bitcodiertes Aktivierungsdatum. D.h. die Serien-Inbetriebnahme kann in verschiedenen Ausprägungen aktiviert werden.
Bitcodiertes Aktivierungsdatum:
Bit 0 = 0x1: Die Link-Kommunikation wird erst nach einem gepuffertem Power-On-Hochlauf aktiviert.
Bit 1 = 0x2: Die PLC-Kommunikation wird erst am Ende der Serien-Inbetriebnahme aktiviert.
Bit 2 = 0x4: Freischaltung der Parametrisierung des Inbetriebnahme-PI (_N_IBN_SS-PI) zur Hochlauf-Beschleunigung.

Bit 0 nur relevant bei Systemen mit Link-Modulen

Korrespondiert mit:
 MD18780 $MN_NCU_LINK_MASK,
 MD12551 $MN_TIMEOUT_LINK_COMMUNICATION
</description>
</parameter>
<parameter number="11200" type="UBYTE" dim="0" display="HEX">
<name>INIT_MD</name>
<brief>Laden der Standard-Maschinendaten beim nächsten Hochlauf</brief>
<description>Nach dem Setzen des MD11200 $MN_INIT_MD muss ein Power On ausgelöst werden. Beim Hochlauf wird die Funktion ausgeführt und das MD wieder auf den Wert "0" zurückgesetzt.

Bedeutung der Eingabe:
Bit 0   gesetzt:
	Beim nächsten NCK-Hochlauf werden alle Maschinendaten (mit Ausnahme der speicherkonfigurierenden Daten) mit den einkompilierten Werten überschrieben.

Bit 1   gesetzt:
	Beim nächsten NCK-Hochlauf werden alle speicherkonfigurierenden Maschinendaten mit den einkompilierten Werten überschrieben.

Bit 2   gesetzt:
	Beim nächsten Hochlauf werden die über Compile-Zyklen eingebrachten OEM-Maschinendaten und die SIEMENS-Zyklen-Maschinendaten aus dem gepufferten Speicher gelöscht.

Bit 3   gesetzt:
	Beim nächsten Hochlauf werden alle Settingdaten mit den einkompilierten Werten überschrieben.

Bit 4  gesetzt:
     Beim nächsten Hochlauf werden alle Optionsdaten mit den einkompilierten Werten überschrieben.

Bit 5  gesetzt:
     Beim nächsten Hochlauf des NCK wird das passives File System (inklusive PowerFail-Logdatei) gelöscht.

INIT_MD wird nach dem Hochlauf automatisch auf 0 gesetzt.

Speicherkonfigurierende MD sind:
- MD10010 $MN_ASSIGN_CHAN_TO_MODE_GROUP
- alle Maschinendaten die mit "MM_" beginnen
	MD 18000 - 18999 (allgemeine MD)
	MD 28000 - 28999 (kanalspezifische MD)
	MD 38000 - 38999 (achsspezifische MD)
</description>
</parameter>
<parameter number="11202" type="UBYTE" dim="0" display="HEX">
<name>MD_MODE_MASK</name>
<brief>Verhalten von Maschinendatenänderungen</brief>
<description>Verhalten von Maschinendatenänderungen
Bit 0 (LSB): bei Lin-/Rotachsprojektierung keine Initialwerte für achstypabhängige MD's laden
Durch das Vorhandensein von jeweils einem sinnvollen Defaultwert für eine Linear- oder Rundachse ist es für axiale Maschinendaten möglich dem Anwender in Falle eine Inbetriebnahme die Arbeit zu erleichtern. Mit dem Umschaltvorgang (Lin -&gt; Rot, bzw. Rot -&gt; Lin) werden die jeweilig projektierten Defaultwerte beim nächsten Warmstart der Steuerung als Aktualwerte aktiv.
</description>
</parameter>
<parameter number="11210" type="UBYTE" dim="0" display="HEX">
<name>UPLOAD_MD_CHANGES_ONLY</name>
<brief>Maschinendaten-Sicherung nur von geänderten Maschinendaten</brief>
<description>Für die Erstellung von Standardarchiven (ARC) und beim Kopieren von 'NC-Aktive-Daten' kann eingestellt werden ob alle Daten oder nur die von der Standardeinstellung abweichenden Daten ausgegeben werden.

Bit0(LSB)  Wirksamkeit des differentiellen Upload bei INI-/TEA-Files
0: alle Daten werden ausgegeben
1: nur gegenüber dem einkompilierten Wert geänderte MDs werden ausgegeben

Bit1 ist reserviert und wirkt wie Bit 0

Bit2 Änderung eines Feldelementes
0: komplette Array werden ausgeben
1: nur geänderte Feldelemente eines Arrays werden ausgeben

Bit3 R-Parameter (nur für INI-Files)
0: alle R-Parameter werden ausgeben
1: nur R-Parameter ungleich '0' werden ausgeben

Bit4 Frames (nur für INI-Files)
0: alle Frames werden ausgeben
1: nur Frames, die keine Nullframes sind, werden ausgeben.

Bit5 Werkzeugdaten (Schneidenparameter) (nur für INI-Files)
0: alle Werkzeugdaten werden ausgeben
1: nur Werkzeugdaten ungleich '0' werden ausgeben.

Bit6 Gepufferte Systemvariablen ($AC_MARKER[], $AC_PARAM[] nur für INI-Files)
0: alle Systemvariablen werden ausgegeben
1: nur Systemvariablen ungleich '0' werden ausgeben

Bit7 Synchronaktions-GUD (nur für INI-Files)
0: alle Syna-GUD werden ausgeben
1: nur Syna-GUD ungleich '0' werden ausgeben

Wirksamkeit: Die Veränderung des Datums wird beim Start des Uploads für den nächsten Bereich wirksam.
Die Einstellungen wirken nur, falls gilt MD11212 $MN_UPLOAD_CHANGES_ONLY=FALSE.
</description>
</parameter>
<parameter number="11212" type="BOOLEAN" dim="0">
<name>UPLOAD_CHANGES_ONLY</name>
<brief>Art der Datensicherung des Aktiven Filesystems.</brief>
<description>In die Datensicherung gehen nur die von der Standardeinstellung abweichenden Werte
der ausgewählten Datei des Aktiven Filesystems ein.

TRUE  = In die Datensicherung gehen nur die von der Standardeinstellung abweichenden Werte der ausgewählten Datei des Aktiven Filesystems ein. (differentielle Datensicherung)
        Der Wert von MD11210 $MN_UPLOAD_MD_CHANGES_ONLY ist dann ohne Wirkung.

FALSE = In die Datensicherung gehen alle Werte der ausgewählten Datei des Aktiven Filesystems ein.
        Bedeutungsgleich mit MD11210 $MN_UPLOAD_MD_CHANGES_ONLY=0.
        Falls jedoch MD11210 $MN_UPLOAD_MD_CHANGES_ONLY ungleich 0 ist, wirkt diese Einstellung.
</description>
</parameter>
<parameter number="11220" type="BYTE" dim="0">
<name>INI_FILE_MODE</name>
<brief>Fehlerverhalten bei INI-File-Fehlern</brief>
<description>Werden beim Einlesen von Maschinendaten-Dateien (INI-Files) in Steuerungen Daten eingelesen,
- die fehlerhaft sind oder
- die nicht zur Prüfsumme passen,
so werden Alarme erzeugt und das Einlesen ggf. abgebrochen. Folgende Verhaltensweisen der Steuerung sind über Einstellungen des Maschinendatums
MD wählbar:
0: Ausgabe eines Alarms, Abbruch beim Erkennen des 1. Fehlers. (Wie SW-Stand 1 und 2).

1: Ausgabe eines Alarms, Fortsetzung der Bearbeitung.Am Ende der Bearbeitung wird ein Alarm mit der Anzahl der Fehler ausgegeben

2: Die Bearbeitung läuft trotz eventueller Fehler weiter. Am Ende der Bearbeitung wird ein Alarm mit der Anzahl der Fehler ausgegeben
</description>
</parameter>
<parameter number="11230" type="UBYTE" dim="0" display="HEX">
<name>MD_FILE_STYLE</name>
<brief>Struktur der Maschinendaten-Sicherungsdateien</brief>
<description>Aussehen eines Maschinendatenfiles beim 'upload'
Bit 0 (LSB): Zeilenprüfsumme wird generiert
Bit 1:
	MD-Nummern werden generiert
Bit 2:
	Kanalachsnamen als Feldindex bei AchsMD im TEA-File
Bit 3:
	Bei NCU-Link werden auch die MD's der LINK-Achsen ausgegeben.
Bit 4:
	Alle lokalen Achsen werden ausgegeben (auch wenn sie nicht durch MD20070 $MC_AXCONF_MACHAX_USED aktiviert sind)

Wirksamkeit:
Die Veränderung des Datums wird beim Start des Uploads für den nächsten Bereich wirksam.

Defaulteinstellung:
Es werden Zeilenprüfsummen und MD-Nummern, aber keine Kanalachsnamen als Feldindex bei AchsMD erzeugt.
</description>
</parameter>
<parameter number="11240" type="DWORD" dim="1">
<name>PROFIBUS_SDB_NUMBER</name>
<brief>SDB-Nummer</brief>
<description>Nummer des verwendeten Systemdatenbausteins (SDB) zur Konfigurierung der Peripherie

Bei 828D sind folgende Belegungen von MD11240[0,1,2,3] zugelassen:
[0, -1, 0, 0] Telegramm 136 und Achserweiterung NX10.3
[1, -1, 1, 1] Telegramm 136 und Achserweiterung NX15.3 (= Voreinstellung)
[2, -1, 2, 2] Telegramm 136 und Achserweiterung NX15.3, 1x CU320-2 PN (nur PPU26x.3/28x.3)
[3, -1, 3, 3] Telegramm 116 und Achserweiterung NX10.3
[4, -1, 4, 4] Telegramm 136 und Achserweiterung NX15.3, 1x CU310-2 PN (nur PPU26x.3/28x.3)
[5, -1, 5, 5] Telegramm 136 und Achserweiterung NX15.3, 2x CU310-2 PN (nur PPU26x.3/28x.3)
Bei 808D sind folgende Belegungen von MD11240[0,1,2,3] zugelassen:
[0, -1, -1, -1] Drive-Bus für 5 Achsen - Adressen 11..15 (= Voreinstellung)
[1, -1, -1, -1] Drive-Bus für 6 Achsen - Adressen 11..16 (nur PPU16x)
</description>
</parameter>
<parameter number="11241" type="DWORD" dim="0">
<name>PROFIBUS_SDB_SELECT</name>
<brief>Auswahl SDB-Quelle</brief>
<description>Bei MD11240 $MN_PROFIBUS_SDB_NUMBER &gt; 0 werden SDBs direkt aus dem Verzeichnis geladen:
MD11241 $MN_PROFIBUS_SDB_SELECT = 0: /siemens/sinumerik/sdb/...
MD11241 $MN_PROFIBUS_SDB_SELECT = 1: /addon/sinumerik/sdb/...
MD11241 $MN_PROFIBUS_SDB_SELECT = 2: /oem/sinumerik/sdb/...
MD11241 $MN_PROFIBUS_SDB_SELECT = 3: /user/sinumerik/sdb/...
</description>
</parameter>
<parameter number="11250" type="BYTE" dim="0">
<name>PROFIBUS_SHUTDOWN_TYPE</name>
<brief>PROFIBUS/PROFINET Shutdownhandling</brief>
<description>Nur bei PROFIBUS/PROFINET:
Handling des PROFIBUS/PROFINET bei Shutdown des NCK (NCK-Reset)
Wert 0:
	direkt aus dem zyklischen Betrieb wird der Bus abgeschaltet, ohne 'Vorwarnung'

Wert 1:
	Bei NCK Shutdown wird der Bus zunächst für min. 20 Takte in den Zustand CLEAR gebracht, und dann abgeschaltet. Wenn dies hardwaremäßig nicht möglich ist, wird statt dessen wie bei Wert 2 verfahren.

Wert 2:
	Bei NCK Shutdown wird der Bus zunächst für min. 20 Takte in einen Zustand gebracht, bei dem alle Antriebe als Steuerwort1 und Steuerwort2 ein Nullwort gesendet bekommen (Pseudoclear). Der Bus selbst bleibt in  Status Operate.
</description>
</parameter>
<parameter number="11280" type="BYTE" dim="0">
<name>WPD_INI_MODE</name>
<brief>Bearbeitungsmode von Ini-Files im Werkstückdirectory</brief>
<description>Bearbeitungsmode von Ini-Files im Werkstückdirectory:

Wert = 0:
	Beim ersten NC-Start nach Werkstückanwahl wird ein im Werkstückdirectory abgelegtes und mit dem Namen des Werkstücks versehenes INI-File ausgeführt.
Wert = 1:
	Beim ersten NC-Start nach Werkstückanwahl werden INI-Files mit dem Namen des angewählten Teileprogramms und den Extensions

SEA,
GUD,
RPA,
UFR,
PRO,
TOA,
TMA und
CEC
ausgeführt.
</description>
</parameter>
<parameter number="11285" type="BYTE" dim="0">
<name>MACH_MODEL_MODE</name>
<brief>Art der Datei mit Maschinenmodell.</brief>
<description>Falls 3d-Schutzbereiche definiert sind, kann mit Hilfe dieses Datums die Erzeugung eines Maschinenmodells verlangt werden.

Wert 0: Es wird kein Modell erzeugt.

Wert 1: Nach jeder Veränderung (samt Aktivierung) der 3d-Schutzbereiche wird ein Maschinenmodell im Anwenderverzeichnis /_N_VRML_DIR mit Namen _N_VRMLMODEL_WRL erzeugt.
</description>
</parameter>
<parameter number="11294" type="UDWORD" dim="0" display="HEX">
<name>SIEM_TRACEFILES_CONFIG</name>
<brief>Konfiguration der Tracefiles SIEM*</brief>
<description>Konfiguration der Tracefiles SIEM*
  Bit0:
	Beim Download sollen Zusatzinformationen über die gesendeten  PDUs in _N_SIEMDOMAINSEQ_MPF eingetragen werden
  Bit1:
	Beim Download sollen Zusatzinformationen über die empfangenen PDUs in _N_SIEMDOMAINSEQ_MPF eingetragen werden
  Bit2:
	Trace von Warmstart und Verbindungsabbruch in _N_SIEMDOMAINSEQ_MPF
  Bit4:
	Beim Upload   sollen Zusatzinformationen über die gesendeten  PDUs in _N_SIEMDOMAINSEQ_MPF eingetragen werden
  Bit5:
	Beim Upload   sollen Zusatzinformationen über die empfangenen PDUs in _N_SIEMDOMAINSEQ_MPF eingetragen werden
</description>
</parameter>
<parameter number="11297" type="BYTE" dim="1">
<name>PROTOC_IPOCYCLE_CONTROL</name>
<brief>Überlauf IPO-Zeitebene verhindern</brief>
<description>Einstellung, ob bei der Aufzeichnung von Daten in der Zeitebene des IPOs ein Überlauf der Zeitebene verhindert werden soll.
Bei aktiver Funktion werden ggf. Datensätze verworfen und nicht in den Protokollfile eingetragen, um einen drohenden Überlauf der IPO-Zeitebene zu verhindern.
Das kann ggf. zur Folge haben, dass auch dann Datensätze verloren gehen, wenn es bei inaktiver Funktion noch nicht zum Ebenenüberlauf gekommen wäre.

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="11298" type="DOUBLE" dim="1">
<name>PROTOC_PREPTIME_CONTROL</name>
<brief>Unterbrechungszeit Prep-Zeitebene in Sekunden.</brief>
<description>Zeit in Sekunden wielange die Prep-Zeitebene blockiert werden darf. Wenn die PREP in der eingestellten Zeit keinen Durchlauf schafft, so werden die Zyklischen Events bei der Protokollierung ausgelassen. Damit ist sichergestellt, dass die Bedienung nicht durch die Datenaufzeichnung vollständig blockiert werden kann.

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="11300" type="BOOLEAN" dim="0">
<name>JOG_INC_MODE_LEVELTRIGGRD</name>
<brief>INC und REF im Tippbetrieb</brief>
<description>1: Tippbetrieb für JOG-INC und Referenzpunktfahren
	Bei JOG-INC:
	Mit Drücken der Verfahrtaste in die gewünschte Richtung (z.B. +) beginnt die Achse das eingestellte Inkrement zu verfahren. Wird die Verfahrtaste losgelassen, bevor das Inkrement vollständig abgefahren wurde, so wird die Bewegung unterbrochen und die Achse bleibt stehen. Mit erneuter Betätigung der gleichen Verfahrtaste verfährt die Achse den noch verbleibenden Restweg, bis dieser 0 ist.

0: Dauerbetrieb für JOG-INC und Referenzpunktfahren
	Bei JOG-INC:
	Die Achse fährt das eingestellte Inkrement mit Betätigung der Verfahrtaste (erste steigende Flanke) vollständig ab. Wird die gleiche Verfahrtaste ein zweites Mal betätigt (zweite steigende Flanke) bevor die Achse das Inkrement abgefahren hat, so wird die Verfahrbewegung abgebrochen; d.h. nicht mehr zu Ende gefahren.

Das unterschiedliche Fahrverhalten der Achse zwischen Tipp- und Dauerbetrieb  beim inkrementellen Verfahren ist in den Kapiteln  ausführlich beschrieben.
Das Fahrverhalten beim Referenzpunktfahren siehe:

Literatur:        /FB/, R1, "Referenzpunktfahren"

Nicht relevant:
	Kontinuierliches Verfahren (JOG-kontinuierlich)
</description>
</parameter>
<parameter number="11310" type="BYTE" dim="0">
<name>HANDWH_REVERSE</name>
<brief>Schwelle für Richtungswechsel Handrad</brief>
<description>Handradfahren:
Wert = 0:
	kein sofortiges Fahren in Gegenrichtung

Wert &gt; 0:
	sofortiges Fahren in Gegenrichtung, wenn das Handrad um mindestens die angegebene Anzahl Impulse in Gegenrichtung gedreht wird.

Ob dieses Maschinendatum auch für das Handradfahren bei DRF wirksam ist, ist von Bit10 des MD20624 $MC_HANDWH_CHAN_STOP_COND abhängig.
</description>
</parameter>
<parameter number="11320" type="DOUBLE" dim="1">
<name>HANDWH_IMP_PER_LATCH</name>
<brief>Handradimpulse pro Raststellung</brief>
<description>Mit dem MD11320 $MN_HANDWH_IMP_PER_LATCH werden die angeschlossenen Handräder an die Steuerung angepasst.

Es ist die Anzahl der vom Handrad erzeugten Impulse je Handrad-Rasterstellung einzugeben. Die Handrad-Pulsbewertung ist einzeln für jedes vorhandene Handrad  (1 bis 3) festzulegen. Mit dieser Anpassung wirkt jede Handrad-Rasterstellung wie eine Betätigung der Verfahrtaste beim inkrementellen Verfahren.

Mit Eingabe eines negativen Wertes wird eine Richtungsumkehr der Handrad-Drehrichtung bewirkt.

Korrespondiert mit:
                    MD31090 $MA_JOG_INCR_WEIGHT
                    (Bewertung eines Inkrements einer  Maschinenachse bei
                    INC/Hand)
</description>
</parameter>
<parameter number="11322" type="DOUBLE" dim="1">
<name>CONTOURHANDWH_IMP_PER_LATCH</name>
<brief>Konturhandradimpulse pro Raststellung</brief>
<description>Anpassungsfaktor an die Hardware des Konturhandrades:
Einzugeben ist die Anzahl der pro Raststellung vom Konturhandrad ausgegebenen
Impulse.
Durch diese Normierung entspricht eine Raststellung des Konturhandrades einem
Tastendruck bei inkrementellem Jog-Verfahren.
Vorzeichenumkehr bewirkt Umkehr der Richtungsbewertung.
</description>
</parameter>
<parameter number="11324" type="DWORD" dim="0">
<name>HANDWH_VDI_REPRESENTATION</name>
<brief>Darstellung der Handradnummer im VDI-Interface</brief>
<description>Darstellung der Handradnummer in den kanal-/achsspezifischen Signalen der
VDI-Schnittstelle erfolgt:

value = 0 :
bit-codiert (1 aus 3, es können nur 3 Handräder dargestellt werden)

value = 1 :
binär-codiert (es können 6 Handräder dargestellt werden)
</description>
</parameter>
<parameter number="11330" type="DOUBLE" dim="1">
<name>JOG_INCR_SIZE_TAB</name>
<brief>Inkrementgröße bei INC/Handrad</brief>
<description>Beim inkrementellen Verfahren bzw. Handradfahren können vom Bediener die Anzahl der von der Achse zu verfahrenen Inkremente z.B. über die Maschinensteuertafel vorgegeben werden.
Neben der variablen Inkrementgröße (INCvar) sind noch zusätzlich 5 feste Inkrementgrößen (INC...) einstellbar.
Mit den Eingabewerten in JOG_INCR_SIZE_TAB [n] wird gemeinsam für alle Achsen für diese 5  festen Inkremente die jeweilige Inkrementgröße bestimmt. Standardmäßig wird INC1, INC10, INC100, INC1000 und INC10000 eingestellt.
Die eingegebenen Inkrementgrößen gelten auch bei DRF.
Die Größe des variablen Inkrements wird per SD41010 $SN_JOG_VAR_INCR_SIZE festgelegt.

Korrespondiert mit:
             MD31090 $MA_JOG_INCR_WEIGHT(Bewertung eines Inkrementes für INC/Hand)
             NC/PLC-Nahtstellensignal &lt;Geometrieachse1-3aktiveMaschinenfunktion/&gt;
                 (Geometrieachse 1-3 aktive Maschinenfunktion: INC1; ...; INC10000)
             NC/PLC-Nahtstellensignal &lt;aktiveMaschinenfunktionINC1-INC10000/&gt;
                 (aktive Maschinenfunktion: INC1; ...; INC10000).
</description>
</parameter>
<parameter number="11340" type="BYTE" dim="0">
<name>ENC_HANDWHEEL_SEGMENT_NR</name>
<brief>3. Handrad: Antriebstyp</brief>
<description>Nur zu Testzwecken bei PROFIBUS/PROFINET:
Nummer des Bussegments, über das das 3. Handrad (Geberanschluss) angesprochen wird:

Korrespondiert mit    MD11342 $MN_ENC_HANDWHEEL_MODULE_NR
                      MD11344 $MN_ENC_HANDWHEEL_INPUT_NR
</description>
</parameter>
<parameter number="11342" type="BYTE" dim="0">
<name>ENC_HANDWHEEL_MODULE_NR</name>
<brief>3. Handrad: Antriebsnummer/Messkreisnummer</brief>
<description>Nur zu Testzwecken bei PROFIBUS/PROFINET:
Nummer des Moduls innerhalb eines Segments (MD11340 $MN_ENC_HANDWHEEL_SEGMENT_NR), über das das 3. Handrad angesprochen wird.

= 0: Die Konfiguration eines 3. Handrads wird deaktiviert, in diesem Fall
     ist die Einstellung von MD11340 $MN_ENC_HANDWHEEL_SEGMENT_NR und
     MD11344 $MN_ENC_HANDWHEEL_INPUT_NR irrelevant.

Korrespondiert mit     MD11340 $MN_ENC_HANDWHEEL_SEGMENT_NR
                       MD11344 $MN_ENC_HANDWHEEL_INPUT_NR
</description>
</parameter>
<parameter number="11344" type="BYTE" dim="0">
<name>ENC_HANDWHEEL_INPUT_NR</name>
<brief>3. Handrad: Eingang auf Modul/Messkreiskarte</brief>
<description>Nur zu Testzwecken bei PROFIBUS/PROFINET:
Nummer des Eingangs auf einem Modul, über den das 3. Handrad angesprochen wird.
840D: 1/2 = oberer/unterer Istwerteingang

Korrespondiert mit      MD11340 $MN_ENC_HANDWHEEL_SEGMENT_NR
                        MD11342 $MN_ENC_HANDWHEEL_MODULE_NR
</description>
</parameter>
<parameter number="11346" type="BYTE" dim="0">
<name>HANDWH_TRUE_DISTANCE</name>
<brief>Handrad Weg- oder Geschwindigkeitsvorgabe</brief>
<description>Einstellung des Verhaltens beim Fahren mit Handrad, Konturhandrad bzw. bei FDA=0:

Wert = 1:  (Standardwert)
Die Vorgaben vom Handrad sind Wegvorgaben. Es gehen keine Impulse verloren. Infolge einer Begrenzung auf die maximal zulässige Geschwindigkeit kommt es zu einem Nachlaufen der Achsen.

Wert = 0:
Die Vorgaben vom Handrad sind Geschwindigkeitsvorgaben. Sobald das Handrad steht, bleiben auch die Achsen stehen. Die Bewegung wird sofort abgebremst, wenn in einem Interpolationstakt keine Impulse vom Handrad kommen. Dadurch kann es nur zu einem kurzen Nachlaufen der Achsen infolge der Bremsrampe kommen. Die Handradimpulse liefern keine Wegvorgabe.

Wert = 2:
Die Vorgaben vom Handrad sind Geschwindigkeitsvorgaben. Sobald das Handrad steht, sollen auch die Achsen stehen. Die Bewegung wird sofort abgebremst, wenn in einem Ipo-Takt keine Impulse vom Handrad kommen. Im Gegensatz zu Wert = 0 wird jedoch nicht auf dem kürzest möglichen Weg gebremst, sondern auf den nächstmöglichen Punkt einer gedachten Rasterung.
Diese Rasterung entspricht jeweils einer Wegstrecke, die die angewählte Achse pro Handrad-Raststellung verfährt
siehe MD31090 $MA_JOG_INCR_WEIGHT und
MD11330 $MN_JOG_INCR_SIZE_TAB,
MD20620 $MC_HANDWH_GEOAX_MAX_INCR_SIZE,
MD32080 $MA_HANDWH_MAX_INCR_SIZE).
Als Nullpunkt der Rasterung wird der Beginnder Verfahrbewegung angenommen.

Wert = 3:
Die Vorgaben vom Handrad sind Wegvorgaben. Ist aufgrund von Einstellungen in anderen Maschinendaten
MD11310 $MN_HANDWH_REVERSE != 0
MD20624 $MC_HANDWH_CHAN_STOP_COND
MD32084 $MA_HANDWH_STOP_COND
ein vorzeitiges Bremsen erforderlich, so wird im Gegensatz zu Wert = 1 jedoch nicht auf dem kürzest möglichen Weg gebremst, sondern auf den nächstmöglichen Punkt einer gedachten Rasterung (siehe Wert = 2).

Wert = 6:
Wie Wert = 2, es wird jedoch nicht auf die letztmögliche Rasterposition vor einer Begrenzung angehalten, sondern die Begrenzung wird angefahren.

Wert = 7:
Wie Wert = 3, es wird jedoch nicht auf die letztmögliche Rasterposition vor einer Begrenzung angehalten, sondern die Begrenzung wird angefahren.
</description>
</parameter>
<parameter number="11350" type="DWORD" dim="1">
<name>HANDWHEEL_SEGMENT</name>
<brief>Handradsegment</brief>
<description>Maschinendatum gibt an, an welchem
HW-Segment das Handrad angeschlossen ist:
  0 = SEGMENT_EMPTY     ;kein Handrad
  1 = SEGMENT_840D_HW   ;Handrad an 840D-HW
  2 = SEGMENT_8xxD_HW   ;Handrad an 828D-, 808D -HW
  5 = SEGMENT_PROFIBUS  ;Handrad an PROFIBUS
  7 = SEGMENT_ETHERNET  ;Handrad an Ethernet
</description>
</parameter>
<parameter number="11351" type="BYTE" dim="1">
<name>HANDWHEEL_MODULE</name>
<brief>Handradmodul</brief>
<description>Maschinendatum spezifiziert auf welchem
HW-Modul das Handrad angeschlossen ist.
(Inhalt von MD11350 $MN_HANDWHEEL_SEGMENT abhängig):
  0 = kein Handrad konfiguriert
    MD11351 $MN_HANDWHEEL_MODUL =
  1    ;SEGMENT_840D_HW
  1    ;SEGMENT_8xxD_HW; 828D-, 808D -HW
  1..6 ;SEGMENT_PROFIBUS/PROFINET  ;Index für MD11353 $MN_HANDWHEEL_LOGIC_ADDRESS[(x-1)]
  1    ;SEGMENT_ETHERNET
</description>
</parameter>
<parameter number="11352" type="BYTE" dim="1">
<name>HANDWHEEL_INPUT</name>
<brief>Handradanschluss</brief>
<description>Maschinendatum welches der auf einem
HW-Modul angeschlossenen Handräder
ausgewählt werden soll:
  0 = kein Handrad konfiguriert
  1..6 = Handradanschluss auf HW-Modul/Ethernet-Schnittstelle
</description>
</parameter>
<parameter number="11353" type="DWORD" dim="1">
<name>HANDWHEEL_LOGIC_ADDRESS</name>
<brief>Logische Handradslotadressen</brief>
<description>Nur bei PROFIBUS/PROFINET:
Logische Basisadressen der Handradslots, wenn Handräder über PROFIBUS/PROFINET angeschlossen sind (MD11340 $MN_HANDWHEEL_SEGMENT = 5)
</description>
</parameter>
<parameter number="11354" type="DOUBLE" dim="1">
<name>HANDWHEEL_FILTER_TIME</name>
<brief>Filterzeit für Handradimpulse</brief>
<description>Die Filterzeit gibt an, in welcher Zeitdauer, die vom Handrad gelieferten Impulse an den Interpolator abgegeben werden. Die Rasterung erfolgt intern in Interpolationstakten.

Bei Filterzeit = 0.0 werden die gelieferten Handradimpulse innerhalb eines einzigen Interpolationstaktes an den Interpolator abgegeben. Dies kann zu einem ruckartigen Verfahren der angesteuerten Achse führen.

Maschinendatum ist für folgende Handrad-Typen (siehe 11350 $MN_HANDWHEEL_SEGMENT) gültig:

SEGMENT_ETHERNET:
- empfohlene Filterzeit:  0.2 - 0.5 s
</description>
</parameter>
<parameter number="11380" type="UDWORD" dim="0" display="HEX">
<name>MONITOR_ADDRESS</name>
<brief>Test-MD zum Ändern von NCK-Code oder Daten für Safety Integrated</brief>
<description>Adresse einer NCU-Speicherzelle, deren Inhalt in den MD11382 $MN_MONITOR_DISPLAY_INT und MD11384 $MN_MONITOR_DISPLAY_REAL angezeigt wird.

Es sind keine Schutzmechanismen eingebaut, um unerlaubte Zugriffe zu verhindern, d.h. zeigt die eingegebene Adresse auf einen vom System geschützten oder nicht bestückten Speicherbereich, so wird durch das Auffrischen der MD-Werte MONITOR_DISPLAY_INT und MONITOR_DISPLAY_REAL ein Quittungsverzug auftreten und die NCU bleibt stehen (Watchdog-LED leuchtet)!

Für den Test existiert eine Liste zulässiger Adressen, die vom Softwarestand abhängt.

Durch einen Warmstart wird die Adresse auf ihren Startwert zurückgesetzt.
Sie zeigt dann auf eine beliebig beschreibbare und lesbare Speicherzelle, die von keiner anderen Systemfunktion benutzt wird.
</description>
</parameter>
<parameter number="11382" type="UDWORD" dim="0" display="HEX">
<name>MONITOR_DISPLAY_INT</name>
<brief>INTEGER-Anzeige der adressierten Zelle</brief>
<description>INTEGER-Anzeige der adressierten Zelle SW3.2
Dieses MD stellt den Inhalt der NCU-Speicherzelle dar, die im MD11380 $MN_MONITOR_ADDRESS festgelegt ist. Der angezeigte Wert enthält die vier aufeinanderfolgenden Bytes ab der angegebenen Adresse, wobei das erste Byte ganz rechts steht und das vierte ganz links.

Dieses MD ist ein Anzeige-MD, dessen Inhalt bei jedem Anzeige-Refresh neu gelesen wird. Ein Schreiben auf dieses MD wird ignoriert (ohne Alarm).
</description>
</parameter>
<parameter number="11384" type="DOUBLE" dim="0">
<name>MONITOR_DISPLAY_REAL</name>
<brief>REAL-Anzeige der adressierten Zelle</brief>
<description>REAL-Anzeige der adressierten Zelle, SW3.2

Dieses MD stellt den Inhalt der NCU-Speicherzelle dar, die im MD11380 $MN_MONITOR_ADDRESS festgelegt ist. Der angezeigt Wert interpretiert die acht aufeinanderfolgenden Speicherstellen ab der angegebenen Adresse als eine Gleitkommazahl mit doppelter Genauigkeit (64-Bit-IEEE-Format). Sofern dieser Wert keiner gültigen Gleitkommazahl entspricht, wird 0.0 angezeigt.

Dieses MD ist ein Anzeige-MD, dessen Inhalt bei jedem Anzeige-Refresh neu gelesen wird. Ein Schreiben auf dieses MD wird ignoriert (ohne Alarm).
</description>
</parameter>
<parameter number="11386" type="UDWORD" dim="0" display="HEX">
<name>MONITOR_INPUT_INT</name>
<brief>INTEGER-Eingabe für adressierte Zelle</brief>
<description>INTEGER-Eingabe für adressierte Zelle, SW3.2
Der Wert wird mit Hilfe des MD11390 $MN_MONITOR_INPUT_STROBE in die mit MD11380 $MN_MONITOR_ADDRESS angewählte Adresse geschrieben. Die 4 Bytes ab der angegeben Adresse werden durch das Schreiben des Wertes 1 in das MD11390 $MN_MONITOR_INPUT_STROBE übernommen.
Dabei wandert das Byte ganz rechts in die Speicherstelle MONITOR_ADDRESS, das Byte links daneben in die Speicherstelle MONITOR_ADDRESS+1, usw.
</description>
</parameter>
<parameter number="11388" type="DOUBLE" dim="0">
<name>MONITOR_INPUT_REAL</name>
<brief>REAL-Eingabe für adressierte Zelle</brief>
<description>REAL-Eingabe für adressierte Zelle, SW3.2
Der Wert wird mit Hilfe des MD11390 $MN_MONITOR_INPUT_STROBE in die mit MD11380 $MN_MONITOR_ADDRESS angewählte Adresse geschrieben. Die 8 Bytes ab der angegeben Adresse, werden durch das Schreiben des Wertes 2 in das MD11390 $MN_MONITOR_INPUT_STROBE übernommen.
Dabei wird die eingegebene Gleitkommazahl in 64-Bit-IEEE-Format gewandelt.
</description>
</parameter>
<parameter number="11390" type="BYTE" dim="0">
<name>MONITOR_INPUT_STROBE</name>
<brief>Überschreiben der adressierten Zelle mit MONITOR_INPUT_INT/REAL</brief>
<description>Überschreiben der adressierten Zelle mit MD11386 $MN_MONITOR_INPUT_INT oder MD11388 $MN_MONITOR_INPUT_REAL, SW3.2
Eine Eingabe in dieses MD bewirkt die Übernahme des Inhalts des MD11386 $MN_MONITOR_INPUT_INT oder des MD11388 $MN_MONITOR_INPUT_REAL. Der eingegebene Wert entscheidet, welches Datum übernommen wird:

0: keine Aktion
1: Inhalt des MD11386 $MN_MONITOR_INPUT_INT wird in vier NCU-Bytes ab MD11380 $MN_MONITOR_ADDRESS geschrieben.
2: Inhalt des MD11388 $MN_MONITOR_INPUT_REAL wird in acht NCU-Bytes ab MD11380 $MN_MONITOR_ADDRESS geschrieben.

Der Inhalt von MONITOR_INPUT_STROBE wird nach der Übernahme wieder auf 0 (keine Aktion) gesetzt. Man kann also sofort wieder eine neue Eingabe machen.

Um sich mit der Funktion vertraut zu machen, sollte man das MD11380 $MN_MONITOR_ADDRESS zunächst auf seinem Standardwert belassen. Man kann dann Daten schreiben, ohne Schaden anzurichten.
Beispiele:
	MONITOR_INPUT_INT = 55AA
	MONITOR_INPUT_STROBE = 1
	=&gt; in MONITOR_DISPLAY_INT erscheint 55AA

	MONITOR_INPUT_REAL = 1.234
	MONITOR_INPUT_STROBE = 2
	=&gt; in MONITOR_DISPLAY_REAL erscheint 1.234

Vorsicht!!!
	Werden Daten auf unbekannte Adressen geschrieben, kann man auch das NCK-Systemprogramm zerstören! Das kann unvorhersehbare Folgen haben (Gefährdung von Maschine und Personen!). Wenn die Maschine und Anwesende eine solche Aktion unbeschadet überstehen, kann das Systemprogramm in der Regel durch Power off/on wiederhergestellt werden.
</description>
</parameter>
<parameter number="11398" type="UBYTE" dim="0" display="HEX">
<name>AXIS_VAR_SERVER_SENSITIVE</name>
<brief>Verhalten des Axis-Var-Servers</brief>
<description>Der Axis-Variablen-Server liefert die Daten für die BTSS-Bausteine SMA/SEMA, SGA/SEGA und SSP.
Wenn für eine Achse keine Werte geliefert werden können (z.B. weil die Achse eine Link-Achse ist), so wird ein Default-Wert (i.d.R. 0) zurückgegeben.

Für Debug-Zwecke kann mit Hilfe dieses Maschinendatums der Axis-Var-Server sensitiv eingestellt werden, so dass er anstatt von Default-Werten eine Fehlermeldung zurückgibt.

0: Default-Wert
1: Fehler-Meldung
</description>
</parameter>
<parameter number="11400" type="UDWORD" dim="0" display="HEX">
<name>TRACE_SELECT</name>
<brief>Aktivierung interner Trace-Funktionen</brief>
<description>Bitleiste zur Aktivierung interner Trace-Funktionen für NCK-Zeitmessungen, Analogausgabe von Variablen etc.
</description>
</parameter>
<parameter number="11405" type="BOOLEAN" dim="0">
<name>TCI_TRACE_ACTIVE</name>
<brief>Aktivierung der internen Task-Trace-Funktion</brief>
<description>Aktivierung der TCI-Schnittstelle für den NRKpro steuern. Dadurch werden die TCI- und Kerntask-Trace-Baugruppen aktiviert .
</description>
</parameter>
<parameter number="11410" type="UDWORD" dim="0" display="HEX">
<name>SUPPRESS_ALARM_MASK</name>
<brief>Maske zur Unterstützung spezieller Alarmausgaben</brief>
<description>Maske zur Unterdrückung spezieller Alarmausgaben
Bit gesetzt: Der entsprechende Alarm (Warnung) wird NICHT ausgelöst.

Bit 0:
	Alarm  15110 "Kanal %1 Satz %2 REORG nicht möglich"
Bit 1:
	Alarm  10763 "Kanal %1 Satz %2 Die Bahnkomponente des Satzes in der Konturebene wird Null"
Bit 2:
	Alarm  16924 "Kanal %1 Vorsicht: Programmtest kann Werkzeug- /Magazindaten ändern".
	Anmerkung: Der Alarm ist nur Hinweisalarm
Bit 3:
	Alarm  22010 "Kanal %1 Spindel %2 Satz %3 Istgetriebestufe entspricht nicht der Sollgetriebestufe"
Bit4:
	Alarm  17188 "Kanal %1 D-Nummer %2 bei Werkzeug T-Nr. %3 und %4 definiert"
	Alarm  17189 "Kanal %1 D-Nummer %2 der Werkzeuge auf Magazin/ -Platz %3 und %4 definiert". Beide Alarme sind gleichrangig und nur Hinweisalarme.
Bit5:
	Alarm  22071  "TO-Einheit %1 Werkzeug %2 Duplonr. %3 ist aktiv, aber nicht im aktiven Verschleißverbund". Der Alarm ist nur Hinweisalarm.
Bit6:
	Alarm   4027 "Achtung: MD %1 wurde auch für die anderen Achsen des Achscontainers %2 geändert"
	Alarm   4028 "Achtung: Beim nächsten Hochlauf werden die axialen MD im Achscontainer angeglichen"
Bit7:
	Alarm  22070 "TO-Einheit %1 Bitte Werkzeug T= %2 ins Magazin wechseln. Datensicherung wiederholen". Der Alarm ist nur Hinweisalarm.
Bit8:
	Alarm   6411 "Kanal %1 Werkzeug %2 mit Duplonr. %3 hat WZ-Vorwarngrenze erreicht"
	Alarm   6413 "Kanal %1 Werkzeug %2 mit Duplonr. %3 hat WZ-Überwachungsgrenze erreicht".
	Beide Alarme sind nur Hinweisalarme. Sie treten aus der Programmbearbeitung heraus auf.
Bit9:
	Alarm   6410 "TO-Einheit %1 Werkzeug %2 mit Duplonr. %3 hat WZ-Vorwarngrenze erreicht".
	Alarm   6412 "TO-Einheit %1 Werkzeug %2 mit Duplonr. %3 hat WZ-Überwachungsgrenze erreicht".
	Beide Alarme sind nur Hinweisalarme. Sie treten aufgrund einer Bedienhandlung auf.
Bit10:
	Alarm 10604 "Kanal %1 Satz %2 "Gewindesteigungszunahme zu hoch"
	Alarm 10605 "Kanal %1 Satz %2 "Gewindesteigungsabnahme zu hoch"
Bit11:
	Alarm 14088 "Kanal 51 Satz %2 Achse %3 zweifelhafte Position".
Bit12:
	obsolete (Alarm 10607)"
Bit13:
	Alarm 10704 "Kanal %1 Satz %2 Schutzbereichsüberwachung ist nicht
                                        gewährleistet."
Bit14:
	Alarm 21701 "Erneutes Aktivieren von Messen zu schnell (&lt;2 IPO-Takte)"
Bit15:
	Alarm  5000 "Kommunikationsauftrag nicht ausführbar"
Bit16:
	Alarm 21600 "Überwachung für ESR aktiv"
Bit17:
	Alarm 16945 "Kanal %1 Aktion %2&lt;ALNX&gt; wird bis zum Satzende verzögert".
	Anmerkung: Der Alarm ist nur ein Hinweisalarm
Bit18:
	Alarm 10750 "Kanal %1 Satz %2 Aktivierung der Werkzeugradiuskorrektur ohne Werkzeugnummer"
Bit19:   	Alarm 17193 "Kanal %1 Satz %2 Das aktive Werkzeug ist nicht mehr auf WZ-Halternr./Spindelnr. %3, Programm %4"
Bit20:
	Alarm  2900 "Reboot erfolgt verzögert"
Bit21:
	Alarm 22012 "Kanal %1 Satz %2. Leitachse %3 ist im Simulationsbetrieb"
	Alarm 22013 "Kanal %1 Satz %2. Folgeachse %3 ist im Simulationsbetrieb"
	Alarm 22014 "Kanal %1 Satz %2. Die Dynamik von Leitachse %3 und Folgeachse %4 ist stark unterschiedlich"
	Alarm 22040 "Kanal %1 Satz %3 Spindel %2 ist nicht mit Nullmarke referenziert" wird bei gesetztem
		Bit21 nach eingeschaltener Lageregelung nicht mehr (zyklisch) überprüft.
Bit22:
	Alarm 26080 "Kanal %1 Rückzugsposition der Achse %2 nicht programmiert oder ungültig"
	Alarm 26081 "Kanal %1 EinzelAchsTrigger Achse %2 wurde ausgelöst, aber Achse ist nicht PLC-kontrolliert"
Bit23:
	Alarm 16949 "Korrespondenz zwischen Marke von Kanal %1 und Kanal %2
                                ist ungültig"
Bit24:
	Alarm 16950 "Kanal %1 Suchlauf mit Haltesatz"
Bit25:
	Alarm 22016 "Kanal %1 Satz %2 Folgespindel %3 im Bereich reduzierten Beschleunigungsvermögens"
Bit26:
	Alarm 22015 "Kanal %1 Satz %2 Folgespindel %3 keine Dynamik für Zusatzbewegung"
Bit27:
	Alarm 16112 und 22030  Kanal %1 Satz %2 Folgespindel %3 unerlaubte Programmierung"
Bit28:
	Alarm 26083 "Kanal %1 ESR für PLC-kontrollierte Achse %2 wurde ausgelöst"
Bit29:
	Alarm 16772 "Kanal %1 Satz %2 Achse %3 ist Folgeachse, Kopplung wird geöffnet"
Bit30:
	Alarm 16600 "Kanal %1 Satz %2 Spindel %3 Getriebestufenwechsel nicht möglich"
Bit31:
	Alarm 16774 "Kanal %1 Achse %2 Synchronisation abgebrochen"
</description>
</parameter>
<parameter number="11411" type="UDWORD" dim="0" display="HEX">
<name>ENABLE_ALARM_MASK</name>
<brief>Aktivierung von Warnungen</brief>
<description>Maske zum Erzeugen von Alarmen, die normalerweise unterdrückt werden.

Bit gesetzt:		Alarme dieser Alarmgruppe werden ausgegeben.
Bit nicht gesetzt:	Alarme dieser Alarmgruppe werden nicht ausgegeben.

Bit	Hex.	Bedeutung
	Wert
============================================================================
0:	0x1	Alarme, die als Alarmreaktion SHOWALARMAUTO haben, werden ausgegeben.
1:	0x2	Alarme, die als Alarmreaktion SHOWWARNING haben, werden ausgegeben.
2:	0x4	Alarm 22280 "Gewindehochlaufweg zu kurz" wird ausgegeben.
3:	0x8	Alarme, die durch das NCU-LINK-MODUL getriggert sind, werden eingeschaltet.
4:	0x10	Alarm 10883 "Fase oder Rundung muss verkürzt werden" erlaubt.
5:	0x20	Alarm 20096 "Bremsentest abgebrochen" wird ausgegeben.
6:	0x40	Alarm 16956 "Programm kann wg. globaler Startsperre  nicht gestartet werden" wird ausgegeben.
		Alarm 14005 "Programm kann wg. programmspezifischer Startsperre  nicht gestartet werden" wird ausgegeben. Alarm ist nur im Kanalzustand RESET einschaltbar, in allen anderen Kanalzuständen wird er bedingungslos ausgegeben.
7:	0x80	Alarm 16957 "Stop-Delay-Bereich wird unterdrückt" wird ausgegeben.
8:	0x100	Alarm 1011 Feincodierung 150019 bzw. 150020 "falsche Achsnummer im LINK"
9:	0x200	Alarm 22033 Diagnose 1 bis 6 für "Synchronlauf nachführen" (Kopplungen)
10:	0x400	Alarm 15122 "PowerOn nach Powerfail: %1 Daten wurden restauriert, davon %2 Maschinendaten, %3 Fehler" wird ausgegeben.
11:	0x800	Es werden die Alarme 10722, 10723, 10732 bzw. 10733 statt der Alarme 10720, 10721, 10730 bzw. 10731 ausgegeben.
12:	0x1000	Alarm 22033 Diagnose größergleich 7 für "Synchronlauf nachführen" (Kopplungen)
13:	0x2000	Alle Alarme, die sich auf die Ablehnung eines ASUP-Starts beziehen, werden mit ausgegeben.
14:	0x4000	Alle Alarme, die sich auf die Ablehnung eines PI-Dienstes beziehen, werden mit ausgegeben.
15:	0x8000	Alarm 14004 "kanalspezifische Startsperre ist gesetzt" wird bei einem NC-Start ausgegeben. Bei Satzsuchlauf erscheint der Alarm immer, unabhängig von Bit 15.
</description>
</parameter>
<parameter number="11412" type="BOOLEAN" dim="0">
<name>ALARM_REACTION_CHAN_NOREADY</name>
<brief>Alarmreaktion CHAN_NOREADY zulässig</brief>
<description>Dieses MD dient der Kompatibilität zu PLC-Systemen vor SW4.1.
Ist dieses MD nicht gesetzt, so wird das vor SW4.1 implementierte Verhalten eingestellt (projektierte Alarmreaktion)
Ab SW4.1 besteht die Möglichkeit bei Alarmen das Setzen des Signals CHANNEL_NOREADY an der PLC.

Ist dieses MD gesetzt, so wird intern durch den Alarmhandler die Projektierung von BAG_NOREADY nach CHAN_NOREADY umgesetzt.
</description>
</parameter>
<parameter number="11413" type="BOOLEAN" dim="0">
<name>ALARM_PAR_DISPLAY_TEXT</name>
<brief>Alarmparameter als Textausgabe</brief>
<description>Ist das MD gesetzt, können statt Zahlen auch Texte als Alarmparameter ausgegeben werden.
</description>
</parameter>
<parameter number="11414" type="BOOLEAN" dim="0">
<name>ALARM_CLR_NCSTART_W_CANCEL</name>
<brief>Das Löschen von NCSTART-Alarmen mit CANCEL</brief>
<description>Wenn dieses MD gesetzt ist, so werden die Alarmmeldungen mit ClearInfo=NCSTART durch Drücken der Schaltfläche 'Alarm abbrechen' und mit NC-Start gelöscht.
Wenn dieses MD nicht gesetzt ist, werden die NCSTART Alarmmeldungen nicht mit "Alarm abbrechen" gelöscht.
Dieses MD soll die Kompatibilität mit dem Systemverhalten herstellen.
</description>
</parameter>
<parameter number="11415" type="UDWORD" dim="0" display="HEX">
<name>SUPPRESS_ALARM_MASK_2</name>
<brief>Maskierung von Alarmausgaben</brief>
<description>Maske zur Unterdrückung spezieller Alarmausgaben

Bit gesetzt:	entsprechender Alarm ( Warnung ) wird NICHT ausgelöst.

Bit	Hex.	Bedeutung
	Wert
====================================================================================
0:	0x1	16773 "Kanal %1 Achse %3 ist Folgeachse. Die Achs-/Spindelsperren der Leitachsen sind unterschiedlich"
1:	0x2	2100  "NCK-Batterie Warnschwelle erreicht"
		2101  "NCK-Batteriealarm"
		2102  "NCK-Batteriealarm"
2:	0x4	2120  "NCK-Lüfteralarm"  (unwirksam auf Baugruppen, die aufgrund ihrer Konstruktion einen Lüfter brauchen)
3:	0x8	15120 "PowerFail: Pufferüberlauf anzeigen"
4:	0x10	15187 "Fehler beim Abarbeiten der PROGEVENT-Datei"
5:	0x20	15188 "Fehler beim Abarbeiten der ASUP-Datei"
6:	0x40	26120 "$AA_ESR_ENABLE = 1 und Achse soll neutral werden"
		26121 "Achse ist neutral und $AA_ESR_ENABLE =1 soll gesetzt werden"
		26123 "$AA_ESR_ENABLE = 1 soll gesetzt werden, aber MD37500 $MA_ESR_REACTION ist nicht gesetzt"
		26124 "$AC_TRIGGER ausgelöst, aber Achse ist neutral, ESR ignoriert diese Achse"
7:	0x80	10724 "Software-Limit am Satzanfang verletzt"
		10734 "Arbeitsfeldbegrenzung am Satzanfang verletzt"
		10737 "WKS-Arbeitsfeldbegrenzung am Satzanfang verletzt"
8:	0x100	14008 "WRITE-Befehl in /_N_EXT_DIR"
		10734 "Arbeitsfeldbegrenzung am Satzanfang verletzt"
		10737 "WKS-Arbeitsfeldbegrenzung am Satzanfang verletzt"
9:	0x200	14006 "unzulässiger Programmname
10:	0x400	4006  "Maximale Anzahl der aktivierbaren Achsen ist überschritten"
11:	0x800	16017 "LIFTFAST ignoriert diese Achse, da für aktuellen Achstyp nicht anwendbar"
12:	0x1000	22025 "Kanal %1 Satz %2 Folgeachse/spindel %3 Synchronlauf(2): Toleranz fein überschritten"
		           - Ausnahme: Alarm wird generiert wenn für die betreffende Folgeachse/-spindel CPMALARM[FAx] Bit8 = 0 programmiert ist.
		22026 "Kanal %1 Satz %2 Folgeachse/spindel %3 Synchronlauf(2): Toleranz grob überschritten"
		           - Ausnahme: Alarm wird generiert wenn für die betreffende Folgeachse/-spindel CPMALARM[FAx] Bit9 = 0 programmiert ist.
13:	0x2000	22001 "Bremsrampe länger als Stop D -Zeit."
           	22002 "Bremsrampe länger als Stop D -Zeit bei Getriebestufe %3 Grund %4"
14:	0x4000	16963 "ASUP-Start wurde abgelehnt."
15:	0x8000	21751,"Grenzgeschwindigkeit %2 grad/min auf der Modulo-Achse %1 überschritten (fehlerhafte Nockenausgabe)"
		21752,"Achse %1 minimale Nockenbreite Nocken %3 unterschritten bei akt. Geschwindigkeit %2 "
16:	0x10000	17212 "Kanal %1 Werkzeugverwaltung: Handwerkzeug %3, Duplonr. %2 einwechseln auf Spindel/Werkzeughalter"
           	17214 "Kanal %1 Werkzeugverwaltung: Handwerkzeug %3 von Spindel/Werkzeughalter %2 entnehmen"
           	17215 "Kanal %1 Werkzeugverwaltung: Handwerkzeug %3 von Zwischenspeicherplatz %2 entnehmen"
            	17216 "Kanal %1 Hand-WZ aus WZ-Halter %4 entnehmen und Hand-WZ %3 %2 einwechseln"
17: 0x20000	16771 "Kanal %1 Satz %3 Folge-Achse %2 Überlagerte Bewegung nicht freigegeben"
18: 0x40000	4039  "Kanal %1 Achscontainer %2 weiterschalten nicht erlaubt: Kanal hat keine Containerachsen"
19: 0x80000	7204  "Der Compile-Zyklus %1 ist eine Vorab-Version"
20: 0x100000 Dieses Bit ist RESET-wirksam. Damit können die SHOWALARM und SETVDI Reaktionen folgender Alarme unterdrückt werden:
             10700 "Kanal %1Satz %2 NCK-Schutzbereich %3 in Automatik oder MDA verletzt"
             10701 "Kanal %1Satz %2 kanalspezifischer Schutzbereich %3 in Automatik oder MDA verletzt"
21: 0x200000	26295 "Schutzbereich %1 wurde nur grob approximiert."
22: 0x400000	 6030 "Hinweisalarm:Kanal-/Achs-Aktivierung oder Speicheroption (MD19240, 19250) fordert mehr Speicher an, als verfügbar ist"
23: 0x800000  6035 "Hinweisalarm: bei Kaltstart wird erkannt, dass weniger freier Speicher verfügbar ist, als definiert mit MD18050, 18060"
24: 0x1000000 380040 "PROFIBUS/PROFINET: Bus %3, Projektierfehler %1, Parameter %2"
              PROFINET-device-spezifische Konsistenzkontrollen bzgl. Ti/To werden abgeschaltet.
              Damit ist der Inbetriebnehmer bzw. Anwender selbst verantwortlich, dass Achsen und dezentrale IOs am PROFINET synchron zu einander arbeiten, z.B. miteinander interpolieren können.
25: 0x2000000 16736/22282 "Hinweisalarme Kanal %1 Satz %2: Prog. Gewindesatz zur Einhaltung der Dynamikgrenzwerte zu kurz %3, benötigt %4
              Alarme bzgl. zu kurzer Überschleifsätze und damit verbundener Überziehung der Dynamikgrezwerte zwischen zwei Gewindesätzen werden abgeschaltet.
27: 0x8000000 5020 "Kommunikationsauftrag ist zu umfangreich"
28:0x10000000 5030 "Kommunikationsauftrag nicht ausführbar"
26: 0x4000000 6710 "Datenverlust beim Trace im Bedienbereich Diagnose. Der IPO-Takt ist zu kurz, um alle ausgewählten Daten sicher aufzeichnen zu können"
              6720 "Datenverlust beim Trace im Bedienbereich Diagnose. Der Vorlauf ist zu stark ausgelastet, um alle ausgewählten Daten sicher aufzeichnen zu können"
              6730 "Datenverlust beim Trace im Bedienbereich Diagnose. Der Wert des Maschinendatums $MN_MM_PROTOC_FILE_BUFFER_SIZE[5-8] ist zu niedrig"
              6740 "Datenverlust beim Trace im Bedienbereich Diagnose. Die Kommunikation zum HMI ist zu stark belastet, um alle ausgewählten Daten übertragen zu können"
</description>
</parameter>
<parameter number="11416" type="UDWORD" dim="0" display="HEX">
<name>LINK_DYNMSG_ALARM_MASK</name>
<brief>Maske zur Aktivierung spezieller Alarmausgaben bei NCU-Link</brief>
<description>Diese Maske dient Zyklenentwicklern zur Diagnose.
Maske zur Aktivierung spezieller Alarmausgaben bei NCU-Link, wenn nicht-zyklische Nachrichten nicht sofort übertragen werden können.
Der Alarm 14764 (NCU-Link kann nicht alle nicht-zyklischen Link-Nachrichten vom angegebenen Typ sofort übertragen) wird ausgelöst, wenn für den eingestellten Typ (entspricht den Bits dieses MDs) der betroffenen Nachrichtentyp nicht sofort übertragen werden konnte.
</description>
</parameter>
<parameter number="11420" type="DWORD" dim="0">
<name>LEN_PROTOCOL_FILE</name>
<brief>Dateigröße für Protokollfiles (kB)</brief>
<description>Mit dem Befehl WRITE können aus dem Teileprogramm Sätze in einer Datei im passiven Filesystem abgelegt werden. Die Länge der Protokolldatei ist begrenzt. Der WRITE-Befehl liefert bei Überschreitung dieser Maximallänge einen Fehler (Fehlercode 10).
</description>
</parameter>
<parameter number="11422" type="UDWORD" dim="0" display="HEX">
<name>PROTOCOL_FILE_MODE</name>
<brief>Einstellung des Verhaltens des WRITE-Befehls</brief>
<description>Einstellung des Verhaltens des WRITE-Befehls beim Schreiben in das passive Filesystem
Bit 0 = 0:
     Die mit WRITE angelegte Datei wird persistent im Bereich USR angelegt (siehe $MM_U_FILE_MEM_SIZE).
     Der mit WRITE geschriebene Satz wird sofort persistent, d.h. Power-Fail-sicher abgelegt.
     Mit dieser Einstellung verzögert sich der WRITE durch die Sicherung.
Bit 0 = 1:
     Die mit WRITE angelegte Datei wird persistent im Bereich USR angelegt (siehe $MM_U_FILE_MEM_SIZE).
     Der mit WRITE geschriebene Satz wird zeitverzögert persistent.
     Bei Power-Fail können WRITEs, die weniger als eine Sekunde zurückliegen, ggf. verloren gehen
     Mit dieser Einstellung arbeitet der WRITE performanter.

Bit 1: reserviert
</description>
</parameter>
<parameter number="11450" type="UDWORD" dim="0" display="HEX">
<name>SEARCH_RUN_MODE</name>
<brief>Suchlauf Parametrierung</brief>
<description>Mit den folgenden Bits kann das Verhalten nach Satzsuchlauf während der Aktionssätze beeinflusst werden:

Bit 0 = 0:
	Mit dem Einwechseln des letzten Aktionssatzes nach Satzsuchlauf wird die Bearbeitung gestoppt, das NC/PLC-Nahtstellensignal &lt;letzterAktionssatz_aktiv/&gt; (letzter Aktionssatz aktiv) gesetzt und der Alarm 10208 ausgegeben.
Bit 0 = 1:
	Mit dem Einwechseln des letzten Aktionssatzes nach Satzsuchlauf wird die Bearbeitung gestoppt und das NC/PLC-Nahtstellensignal &lt;letzterAktionssatz_aktiv/&gt; (letzter Aktionssatz aktiv) gesetzt. Der Alarm 10208 wird erst ausgegeben, wenn die PLC dies durch Setzen des NC/PLC-Nahtstellensignal &lt;PLC-Aktion_beendet/&gt; (PLC-Aktion beendet) anfordert.

Anwendung:
	Start eines ASUPs von PLC nach Satzsuchlauf.
	Der Hinweis an den Bediener, dass zur Programmfortsetzung noch ein NC-Start notwendig ist, soll erst nach ASUP-Ende angezeigt werden.

Bit 1 = 1
	Automatischer ASUP-Start nach Ausgabe der Aktionssätze. Der Alarm 10208 wird erst ausgegeben, wenn das ASUP beendet ist.
siehe auch MD11620 $MN_PROG_EVENT_NAME

Bit 2 = 0:
	Spindel: Ausgabe der Hilfsfunktionen erfolgt in den Aktionssätzen.
Bit 2 = 1:
	Die Ausgabe der Hilfsfunktionen in den Aktionssätzen wird unterdrückt. Die bei Satzsuchlauf aufgesammelten Spindelprogrammierungen können zu einem späteren Zeitpunkt (z. B. in einem ASUP) ausgegeben werden.
	Die Programmdaten werden dazu in folgenden Systemvariablen gespeichert:
	- $P_SEARCH_S,
	- $P_SEARCH_SDIR,
	- $P_SEARCH_SGEAR,
	- $P_SEARCH_SPOS,
	- $P_SEARCH_SPOSMODE

Bit 3 = 1:
	Der kaskadierte Suchlauf ist gesperrt (Voreinstellung: Freigabe).
	Kaskadierter Suchlauf bedeutet, dass der Suchlauf, direkt nachdem ein Suchziel gefunden wurde, erneut gestartet wird.

Bit 4:	reserviert

Bit 5 = 0:
 	Bei Satzsuchlauf auf einen Nibblingsatz wird der 1. Nibbling-Hub nicht ausgeführt.
Bit 5 = 1:
	Bei Satzsuchlauf auf einen Nibblingsatz wird am Anfang des Satzes ein Stanzhub ausgelöst (1. Nibbling-Hub).
Bit 6 = 0:
 	Bei Satzsuchlauf werden komplexe Bahnberechnungen ausgeführt.
Bit 6 = 1:
	Bei Satzsuchlauf erfolgt die Berechnung mit einfachen, rechenzeitoptimierten Algorithmen.
Bit 7 = 0:
	Die evtl. beim Einschalten einer Tangentialachskopplung, während oder nach einem SSL, notwendigen Justierbewegungen der Tangentialchsen werden mit den im Einschaltsatz aktiven Vorschubbedingungen ausgeführt (G0 bzw. G1 mit Vorschub). Bei G1 kann der Vorschub zusätzlich mit dem SD 42121: $SC_AX_ADJUST_FEED vorgegeben werden.
Bit 7 = 1:
	Die beim Einschalten einer Tangentialachskopplung, während oder nach einem SSL, ausgeführten Justierbewegungen der Tangentialachsen werden immer mit Eilganggeschwindigkeit verfahren (G0). In diesem Fall wird der Vorschubwert durch das SD 42121: $SC_AX_ADJUST_FEED ignoriert.
</description>
</parameter>
<parameter number="11460" type="UDWORD" dim="0" display="HEX">
<name>OSCILL_MODE_MASK</name>
<brief>Mode-Maske für asynchrones Pendeln</brief>
<description>Bit 0
Wert 1
	Bei Satzsuchlauf wird sofort nach NC-Start, also während des Anfahrens der Anfahrposition die Pendelbewegung gestartet, sofern sie im durchlaufenen Programmteil aktiviert wurde.

Wert 0
	(Standardwert)
	Die Pendelbewegung wird erst nach Erreichen der Anfahrposition gestartet.
</description>
</parameter>
<parameter number="11470" type="UDWORD" dim="0" display="HEX">
<name>REPOS_MODE_MASK</name>
<brief>Repositioniereigenschaften</brief>
<description>Über diese Bitmaske kann das Verhalten der Steuerung beim Repositionieren eingestellt werden.

BitNr.      Bedeutung bei gesetztem Bit
-----------------------------------------------------------------------------
0 (LSB)
	Im Restsatz des Repositionierens wird die Verweilzeit dort fortgesetzt, wo sie unterbrochen wurde. (Wenn das Bit nicht gesetzt ist, wird die Verweilzeit komplett wiederholt).
1	Reserviert
2	Wenn das Bit gesetzt ist, kann über die VDI-Schnittstelle das Repositionieren von einzelnen Achsen verhindert oder verzögert werden.
3	Wenn das Bit gesetzt ist, werden bei Satzsuchlauf über Programmtest Positionierachsen im Anfahrsatz repositioniert.
4	Wie 3, aber bei jedem Repos, nicht nur bei Satzsuchlauf.
5	Wenn das Bit gesetzt ist, werden geänderte Vorschübe und Spindeldrehzahlen bereits im Restsatz gültig, sonst erst im darauffolgenden Satz.
6	Wenn das Bit gesetzt ist, werden nach Serupro neutrale Achsen und positionierende Spindeln im Anfahrsatz als Kommando-Achsen repositioniert.
7	Das Bit verändert das Verhalten des VDI-AXIN-Nahtstellen-Signals &lt;Repos_Delay/&gt; (Repos-Delay). Der Pegel von  &lt;Repos_Delay/&gt; (Repos-Delay) wird gelesen, wenn REPOSA interpretiert wird.
     Achsen, die weder Geo- noch Orientierungsachsen sind, werden dann vom REPOS ausgeschlossen, d.h. REPOS bewegt diese Achsen NICHT.
     Achtung: Dieses Bit schaltet das kanalspezifische VDI-Signal &lt;Repos_Path_Mode/&gt; (ReposPathMode) komplett ab.
</description>
</parameter>
<parameter number="11480" type="DWORD" dim="0">
<name>PLC_OB1_TRACE_DEPTH</name>
<brief>Puffertiefe der PLC-Trace-Daten in OB1</brief>
<description>Speichertiefe der PLC-Trace-Daten bei OB1.

Mehrfachwerte der PLC-Daten werden zwischen dem Zeitpunkt ihrer Erfassung in der PLC und dem Zeitpunkt, an dem sie im NCK geprüft werden, gespeichert. Variable, die bei "OB1" aufgezeichnet werden, werden einmal in jedem kompletten PLC-Scan zusammengeführt, können jedoch nur einmal pro IPO-Zyklus geprüft werden.

Der Speicher muss mindestens einen Wert mehr als die Gesamtanzahl der zu prüfenden  Speicherwerte beinhalten. Damit soll verhindert werden, dass der NCK einen Wert prüft, den die PLC gerade aufnimmt.

Ein passender Wert, um damit zu beginnen, liegt um eins höher als das MD10074 $MN_PLC_IPO_TIME_RATIO.

Je größer die Speichertiefe, desto geringer ist die Anzahl der PLC-Variablen, die aufgezeichnet werden können, weil es nur einen einzigen, kleinen, definierten Daten-Slot-Pool zum Versand von Beispieldaten von der PLC an den NCK gibt (64 Daten-Slots). Jeder aufgezeichneten PLC-Variable wird, entsprechend dem Wert der Speichertiefe, die entsprechende Anzahl an Daten-Slots aus dem Pool zugewiesen.

Dieser Daten-Slot-Pool wird auch für Daten verwendet, die bei OB1, OB35, und OB40 zusammenlaufen (auch wenn die Speichertiefe von OB1, OB35, und OB40 konfiguriert werden kann, um sich voneinander zu unterscheiden). Er wird auch von allen parallelen Trace-Anwendern verwendet, auch wenn sich diese gegenseitig vielleicht gar nicht kennen.
</description>
</parameter>
<parameter number="11481" type="DWORD" dim="0">
<name>PLC_OB35_TRACE_DEPTH</name>
<brief>Puffertiefe der PLC-Trace-Daten in OB35</brief>
<description>Speichertiefe der PLC-Trace-Daten bei OB35.

Mehrfachwerte der PLC-Daten werden zwischen dem Zeitpunkt ihrer Erfassung in der PLC und dem Zeitpunkt, an dem sie im NCK geprüft werden, gespeichert.  Variable, die bei "OB35" aufgezeichnet werden, werden bei jeder Unterbrechung des PLC-Timers zusammengeführt, können jedoch nur einmal pro IPO-Zyklus geprüft werden.

Der Speicher muss mindestens einen Wert mehr als die Gesamtanzahl der zu prüfenden Speicherwerte beinhalten. Damit soll verhindert werden, dass der NCK einen Wert prüft, den die PLC gerade aufnimmt.

Ein passender Wert, um damit zu beginnen, übersteigt die Anzahl der PLC-Timerunterbrechungen, die erwartungsgemäß in jedem IPO-Zyklus vorkommen, um eins.

Je größer die Speichertiefe, desto geringer ist die Anzahl der PLC-Variablen, die aufgezeichnet werden können, weil es nur einen einzigen, kleinen, definierten Daten-Slot-Pool zum Versand von Beispieldaten von der PLC an den NCK gibt (64 Daten-Slots). Jeder aufgezeichneten PLC-Variable wird, entsprechend dem Wert der Speichertiefe, die entsprechende Anzahl an Daten-Slots aus dem Pool zugewiesen.

Dieser Daten-Slot-Pool wird auch für Daten verwendet, die bei OB1, OB35, und OB40 zusammenlaufen (auch wenn die Speichertiefe von OB1, OB35, und OB40 konfiguriert werden kann, um sich voneinander zu unterscheiden).  Er wird auch von allen parallelen Trace-Anwendern verwendet, auch wenn sich diese gegenseitig vielleicht gar nicht kennen.
</description>
</parameter>
<parameter number="11482" type="DWORD" dim="0">
<name>PLC_OB40_TRACE_DEPTH</name>
<brief>Puffertiefe der PLC-Trace-Daten in OB40</brief>
<description>Speichertiefe der PLC-Trace-Daten bei OB40.

Mehrfachwerte der PLC-Daten werden zwischen dem Zeitpunkt ihrer Erfassung in der PLC und dem Zeitpunkt, an dem sie im NCK geprüft werden, gespeichert.  Variable, die bei "OB40" aufgezeichnet werden, werden nur dann zusammengeführt, wenn die PLC den ausdrücklichen OB40 Programm-Interrupt vom NCK erhalten, und können nur einmal pro IPO-Zyklus geprüft werden.

Der Speicher muss mindestens einen Wert mehr als die Gesamtanzahl der zu prüfenden Speicherwerte beinhalten. Damit soll verhindert werden, dass der NCK einen Wert prüft, den die PLC gerade aufnimmt.

Wenn der OB40-Interrupt seltener als einmal pro IPO-Zyklus ausgegeben wird, dann sollte die OB40-Puffertiefe bei 2 liegen. Sonst sollte diese die Höchstanzahl der in einem IPO-Zyklus zu erwartenden Interrupts um eins übersteigen.

Je größer die Speichertiefe, desto geringer ist die Anzahl der PLC-Variablen, die aufgezeichnet werden können, weil es nur einen einzigen, kleinen, definierten Daten-Slot-Pool zum Versand von Beispieldaten von der PLC an den NCK gibt (64 Daten-Slots).  Jeder aufgezeichneten PLC-Variable wird, entsprechend dem Wert der Speichertiefe, die entsprechende Anzahl an Daten-Slots aus dem Pool zugewiesen.

Dieser Daten-Slot-Pool wird auch für Daten verwendet, die bei OB1, OB35, und OB40 zusammenlaufen (auch wenn die Speichertiefe von OB1, OB35, und OB40 konfiguriert werden kann, um sich voneinander zu unterscheiden). Er wird auch von allen parallelen Trace-Anwendern verwendet, auch wenn sich diese gegenseitig vielleicht gar nicht kennen.
</description>
</parameter>
<parameter number="11500" type="DWORD" dim="1">
<name>PREVENT_SYNACT_LOCK</name>
<brief>Geschützte Synchronaktionen</brief>
<description>Erste und letzte ID eines geschützten Synchronaktions-Bereichs.

Synchronaktionen mit ID-Nummern, die im geschützten Bereich liegen, können nicht mehr:
- überschrieben
- gelöscht (CANCEL)
- gesperrt (LOCK)
werden, wenn sie einmal definiert sind. Geschützte Synchronaktionen können auch durch PLC nicht gesperrt werden. Sie werden der PLC an der Nahtstelle als nicht sperrbar angezeigt.

Hinweis:
	Während der Erstellung der zu schützenden Synchronaktionen sollte der Schutz aufgehoben werden, da sonst bei jeder Änderung Power On notwendig ist, um die Logik neu definieren zu können. Mit 0,0 gibt es keinen Bereich von geschützten Synchronaktionen. Die Funktion ist ausgeschaltet. Die Werte werden als Absolutwerte gelesen und Ober- und Unterwert können in beliebiger Reihenfolge angegeben werden.
</description>
</parameter>
<parameter number="11510" type="DOUBLE" dim="0">
<name>IPO_MAX_LOAD</name>
<brief>Maximale erlaubte IPO-Last</brief>
<description>Auslastungsauswertung über Synchronaktionen aktivieren.
Über dieses MD11510 $MN_IPO_MAX_LOAD wird eingestellt, ab welcher IPO-Rechenzeit (in % vom IPO-Takt) die Variable $AN_IPO_LOAD_LIMIT auf TRUE gesetzt werden soll. Wird der Wert nach Überschreitung wieder unterschritten, so wird die Variable wieder auf FALSE gesetzt.
Ist das Maschinendatum 0, so ist diese Diagnosefunktion deaktiviert.
</description>
</parameter>
<parameter number="11550" type="UDWORD" dim="0" display="HEX">
<name>STOP_MODE_MASK</name>
<brief>Legt das Stopp-Verhalten fest.</brief>
<description>Das MD beschreibt das Stopp-Verhalten des NCKs in bestimmten Situationen:

BitNr.  Bedeutung

Bit 0 == 0 :=
	kein Stopp, wenn die G-Codes G331/G332 aktiv sind und zusätzlich eine Bahnbewegung oder G4 programmiert wurde.

Bit 0 == 1 :=
	Stopp während G331/G332 ist bei Unterbrechung des Bahnsteuerbetriebs möglich (G60 oder G4 zwischen G331/G332-Sätzen unterbrechen den Bahnsteuerbetrieb).

Bit 1.....15
	nicht belegt
</description>
</parameter>
<parameter number="11600" type="UDWORD" dim="0" display="DECIMAL">
<name>BAG_MASK</name>
<brief>Definiert das BAG-Verhalten</brief>
<description>Das MD beschreibt die Wirkung der VDI-Signale auf alle Kanäle einer BAG sowie das Verhalten der interne Betriebsartenumschaltung in Bezug auf ASUPs/Interruptroutinen.

Wert = 0: Wenn in einem Kanal der BAG ein Interrupt gestartet wird, reagieren alle Kanäle der BAG ganz normal auf BAG-VDI-Signale (wie z.B. BAG-RESET und BAG-STOP). Wird der Interrupt aus JOG heraus gestartet, wechseln alle Kanäle der BAG intern in die Betriebsart AUTO. Am Ende des Interrupts findet ein automatischer Rückmodeswitch nach JOG statt.

Wert = 1: Wenn in einem Kanal der BAG ein Interrupt gestartet wird, reagiert dieser Kanal nicht mehr auf BAG-VDI-Signale (wie z.B. BAG-RESET und BAG-STOP). Wenn beispielsweise BAG-STOP ausgelöst wird, werden alle Kanäle der BAG angehalten, der Interrupt läuft aber weiter. Ein Kanal-STOP wirkt nach wie vor. Zusätzlich gilt, dass wenn in einem Kanal der BAG ein Interrupt aus JOG heraus gestartet wird, nur dieser Kanal intern automatisch die Betriebsart nach AUTO wechselt, alle anderen Kanäle der BAG bleiben in der Betriebsart JOG. Der automatische Rückmodeswitch am Ende des Interrupts bezieht sich entsprechend auch nur auf den Kanal, in dem der Interrupt lief.

Wert = 2: Wenn in einem Kanal der BAG ein Interrupt gestartet wird, reagieren alle Kanäle der BAG ganz normal auf BAG-VDI-Signale (wie z.B. BAG-RESET und BAG-STOP). Wenn in einem Kanal der BAG ein Interrupt aus JOG heraus gestartet wird, wechselt nur dieser Kanal intern automatisch die Betriebsart nach AUTO, alle anderen Kanäle der BAG bleiben in der Betriebsart JOG. Der automatische Rückmodeswitch am Ende des Interrupts bezieht sich entsprechend auch nur auf den Kanal, in dem der Interrupt lief. Dieses Verhalten wird erst ab V4.7 SP4 HF1 unterstützt. In früheren Versionen war diese Einstellung nicht definiert. Zusätzlich ist bei dieser Einstellung ist die Funktionalität "Joggen in ASUP" (siehe MD11602 $MN_ASUP_START_MASK, Bit3) erlaubt.

Wert = 3: Wie Wert=1. Zusätzlich ist aber die Funktionalität "Joggen in ASUP" (siehe MD11602 $MN_ASUP_START_MASK, Bit3) erlaubt.
</description>
</parameter>
<parameter number="11602" type="UDWORD" dim="0" display="HEX">
<name>ASUP_START_MASK</name>
<brief>Stoppgründe für ASUP ignorieren</brief>
<description>Das Maschinendatum legt fest, welche Stoppgründe bei einem ASUP-Start ignoriert werden. Das ASUP wird gestartet bzw. es werden folgende Stoppgründe ignoriert:

Bit 0:
	Stopp-Grund: Stopp-Taste, M0  oder M01
	Falls NCK im RESET-Zustand (bzw. JOG Mode) ist, wird ein ASUP sofort gestartet (ohne dieses Bit kann in RESET/JOG kein ASUP gestartet werden).
Bit 1:
	Reserviert! Dieses Bit wurde durch MD20105 $MC_PROG_EVENT_IGN_REFP_LOCK und MD20115 $MC_IGNORE_REFP_LOCK_ASUP ersetzt.
Bit 2:
	Starten auch erlaubt, wenn Einlesesperre aktiv ist, d. h. die Sätze des ASUP-Programmes werden sofort eingewechselt und abgearbeitet. Damit werden die Maschinendatem MD20107 $MC_PROG_EVENT_IGN_INHIBIT und MD20116 $MC_IGNORE_INHIBIT_ASUP unwirksam. Das NCK-Verhalten entspricht dem der Maschinendatenbelegung $MC_PROG_EVENT_IGN_INHIBIT=H3F $MC_IGNORE_INHIBIT_ASUP=HFFFFFFFF.
	Bei nicht gesetztem Bit:
	Die Belegung der Maschinendaten MD20107 $MC_PROG_EVENT_IGN_INHIBIT und MD20116 $MC_IGNORE_INHIBIT_ASUP wird ausgewertet.
	Ist das jeweilige Bit in $MC_PROG_EVENT_IGN_INHIBIT bzw. $MC_IGNORE_INHIBIT_ASUP gleich 0, wird ein ASUP oder Prog-Event zwar intern sofort ausgelöst, die Sätze des ASUP-Programms werden erst mit dem Aufheben der Einlesesperre eingewechselt.
	Mit dem Auslösen des ASUPs wird die Bahn sofort gebremst (außer mit Option BLSYNC).
	Im ASUP-Programm wirkt ein erneutes Setzen der Einlesesperre.

Bit 3:
	Achtung:
		Folgende Funktion ist in einkanaligen Systemen immer aktivierbar. Mehrkanalige Systeme benötigen zusätzlich das Bit1 im MD11600 $MN_BAG_MASK. Die Funktion wirkt  n_u_r  bei ASUPs, die aus dem Programmzustand abgebrochen (Kanalzustand Reset) heraus aktiviert worden waren. In mehrkanaligen Systemen ohne MD11600 $MN_BAG_MASK, Bit 1 wirkt die Funktion nicht.

	Wird ein ASUP aus der Betriebsart JOG heraus automatisch gestartet, so darf der Benutzer mitten im ASUP-Programm stoppen. Dem Benutzer wird ständig die Betriebsart JOG angezeigt. Durch das gesetzte BIT 3 kann der Benutzer in dieser Situation joggen. Das ist ohne das Bit 3 nicht möglich. Der BA-Wechsel bleibt in dieser Situation mit dem Alarm 16927 verriegelt. Mit der Taste "Start" kann der Benutzer das ASUP-Programm fortsetzen. Solange das ASUP-Programm läuft, kann der Anwender natürlich nicht joggen. Mit dem ASUP-Programm-Ende darf der Anwender wieder joggen.

Bit 4...15:	reserviert

Korrespondiert mit:
	MD11604 $MN_ASUP_START_PRIO_LEVEL
	MD20105 $MC_PROG_EVENT_IGN_REFP_LOCK
	MD20107 $MC_PROG_EVENT_IGN_INHIBIT
	MD20115 $MC_IGNORE_REFP_LOCK_ASUP
	MD20116 $MC_IGNORE_INHIBIT_ASUP
</description>
</parameter>
<parameter number="11604" type="DWORD" dim="0">
<name>ASUP_START_PRIO_LEVEL</name>
<brief>Prioritäten ab der 'ASUP_START_MASK' wirksam ist</brief>
<description>Das Maschinendatum legt fest, ab welcher ASUP-Priorität das MD11602 $MN_ASUP_START_MASK verwendet wird. MD11602 $MN_ASUP_START_MASK wird von der hier angegebenen bis zur höchsten ASUP-Prioritätsebene 1 berücksichtigt.

Korrespondiert mit:
	MD11602 $MN_ASUP_START_MASK
</description>
</parameter>
<parameter number="11610" type="UDWORD" dim="0" display="HEX">
<name>ASUP_EDITABLE</name>
<brief>Aktivierung eines anwenderspezifischen ASUP Programms</brief>
<description>Das Maschinendatum steuert, ob statt der vom System bereitgestellten Routinen für die Bearbeitung von RET und REPOS die anwenderspezifische Routine: _N_ASUP_SPF im Verzeichnis _N_CUS_DIR / _N_CMA_DIR verwendet werden soll. Der AnwenderASUP wird zu erst im _N_CUS_DIR gesucht

Wert:      Bedeutung:

0	Weder bei RET noch bei REPOS wird die Routine _N_ASUP_SPF aktiviert

Bit0 = 1	Bei RET läuft die anwenderspezifische Routine _N_ASUP_SPF, bei REPOS läuft die vom System bereitgestellte Routine

Bit1 = 1	Bei REPOS läuft die anwenderspezifische Routine _N_ASUP_SPF, bei RET läuft die vom System bereitgestellte Routine

Bit0 + Bit1 = 3	Sowohl bei RET als auch bei REPOS läuft die anwenderspezifische Routine _N_ASUP_SPF

Bit2 = 1	Der AnwenderASUP _N_ASUP_SPF wird zu erst im _N_CMA_DIR gesucht

Korrespondiert mit:
	MD11612 $MN_ASUP_EDIT_PROTECTION_LEVEL
</description>
</parameter>
<parameter number="11612" type="DWORD" dim="0">
<name>ASUP_EDIT_PROTECTION_LEVEL</name>
<brief>Schutzstufe des anwenderspezifischen ASUP Programms</brief>
<description>Schutzstufe des anwenderspezifischen ASUP Programmes für RET und/oder REPOS
Das Datum ist nur wirksam, wenn MD11610 $MN_ASUP_EDITABLE ungleich 0 gesetzt ist.
Das Maschinendatum legt den Protectionlevel des Programms _N_ASU_CUS fest.

Nicht relevant bei:
	MD11610 $MN_ASUP_EDITABLE gleich 0

Korrespondiert mit:
	MD11610 $MN_ASUP_EDITABLE
</description>
</parameter>
<parameter number="11620" type="STRING" dim="0">
<name>PROG_EVENT_NAME</name>
<brief>Programmname für PROG_EVENT</brief>
<description>Name des Anwenderprogramms, das durch die Funktionen "ereignisgesteuerte Programm-aufrufe" und "automatischer ASUP-Start nach Satzsuchlauf" (MD11450 $MN_SEARCH_RUN_MODE, Bit 1) aufgerufen wird. Voreingestellt ist _N_PROG_EVENT_SPF.
Die Voreinstellung wird aktiv, wenn MD11620 $MN_PROG_EVENT_NAME einen Leerstring enthält.
Enthält das Maschinendatum keinen Leerstring, so wird  String syntaktisch wie bei einem Unterprogrammbezeichner geprüft, d.h. die ersten beiden Zeichen müssen Buchstaben (keine Ziffern) oder Unterstriche sein. Ist dies nicht der Fall, wird im Hochlauf der 4010 gemeldet.
Das Programm muss sich in einem Zyklendirectory befinden. Beim Aufruf werden die Zyklendirectories entsprechend der Einstellung von MD11622 $MN_PROG_EVENT_PATH durchsucht.
Prefix (_N_) und Suffix (_SPF) des Programmnamens werden - wenn nicht angegeben - automatisch ergänzt.
</description>
</parameter>
<parameter number="11622" type="BYTE" dim="0">
<name>PROG_EVENT_PATH</name>
<brief>Aufrufpfad für PROG_EVENT</brief>
<description>Pfad, mit dem das mit MD11620 $MN_PROG_EVENT_NAME eingestellte Anwenderprogramm aufgrund eines mit MD20108 $MC_PROG_EVENT_MASK projektierten ereignisgesteuerten Programmaufrufes (Prog-Event) aufgerufen wird:

0:	/_N_CMA_DIR
1:	/_N_CUS_DIR
2:	/_N_CST_DIR
3:            Suchpfad in der Reihenfolge /_N_CUS_DIR, /_N_CMA_DIR und  /_N_CST_DIR
</description>
</parameter>
<parameter number="11625" type="BYTE" dim="0">
<name>FILE_ONLY_WITH_EXTENSION</name>
<brief>Beim Programmaufruf nur nach Dateien mit einer Extension suchen</brief>
<description>Mit diesem Maschinendatum kann man einstellen, ob bei einem Unterprogrammaufruf im Filesystem nach Dateien ohne Extension gesucht wird. Um die Suche nach einem Programm in den verschiedenen Pfaden im Filesystem zu beschleunigen, z. B. bei der Verwendung von EES, kann die Suche nach Dateien ohne Extension ausgeschaltet werden.

0:	Bei Unterprogrammaufrufen wird auch nach Dateien ohne Extension gesucht
1:	Bei Unterprogrammaufrufen wird nur nach Dateien mit Extension (z. B SPF, MPF etc.) gesucht
</description>
</parameter>
<parameter number="11626" type="BYTE" dim="0">
<name>CYCLES_ONLY_IN_CYCDIR</name>
<brief>Unterprogramme mit PROC-Anweisung nur in den Zyklenverzeichnissen suchen</brief>
<description>Mit diesem Maschinendatum kann man einstellen, dass Unterprogramme, die eine PROC-Anweisung haben und in den Zyklenverzeichnissen (CUS, CMA, CST) abgelegt sind, beim Unterprogramm-Aufruf nur in diesen Verzeichnissen gesucht werden. Die PROC-Anweisungen werden beim Warmstart eingelesen. Die Funktion wirkt damit nur für Unterprogramme, die sich zum Zeitpunkt des Warmstarts in den Zyklenverzeichnissen befunden haben.
Anwendung: diese Einstellung verhindert bei der Programmbearbeitung durch die Funktion "Execution from External Storage EES" unnötige Zugriffe auf den externen Speicher und beschleunigt damit z.B. den Aufruf der SIEMENS-Zyklen.

0:   Bei Unterprogrammaufrufen wird das NC-Programm gemäß Suchpfad in allen Programmverzeichnissen gesucht
1:   Bei Unterprogrammaufrufen wird das NC-Programm nur in den Zyklenverzeichnissen CUS, CMA und CST gesucht
2:   Bei Unterprogrammaufrufen wird das NC-Programm in dem mit der CALLPATH-Anweisung definierten Verzeichnis und danach in den Zyklenverzeichnissen CUS, CMA und CST gesucht
</description>
</parameter>
<parameter number="11640" type="UDWORD" dim="0" display="HEX">
<name>ENABLE_CHAN_AX_GAP</name>
<brief>Kanalachslücken in AXCONF_MACHAX_USED werden erlaubt</brief>
<description>Bit0 = 1
Das Maschinendaten ermöglicht die Projektierung von Kanalachslücken im MD20070 $MC_AXCONF_MACHAX_USED.
Damit wird folgende MD-Belegung erlaubt:
$AXCONF_MACHAX_USED[0] = 1    ; 1. MA ist 1. Achse im Kanal
$AXCONF_MACHAX_USED[1] = 2    ; 2. MA ist 2. Achse im Kanal
$AXCONF_MACHAX_USED[2] = 0    ; Kanalachslücke
$AXCONF_MACHAX_USED[3] = 3    ; 3. MA ist 3. Achse im Kanal
$AXCONF_MACHAX_USED[4] = 0

A C H T U N G:
(mit MD20070 $MC_AXCONF_MACHAX_USED BIT0 gesetzt):
	Falls mit MD20050 $MC_AXCONF_GEOAX_ASSIGN_TAB[1]= 3 eine Geo-Achse auf eine Kanalachslücke gelegt wird, so verhält sich die Steuerung wie MD20050 $MC_AXCONF_GEOAX_ASSIGN_TAB[1]= 0. Damit ist diese Geoachse entfernt!

Transformations - Maschinendaten dürfen nicht mit einer Kanalachsnummer versorgt werden, die als Lücke ausgelegt ist.

BIT1 - BIT31: unbenutzt.

Korrespondiert mit:
	MD20080 $MC_AXCONF_CHANAX_NAME_TAB,
	MD20050 $MC_AXCONF_GEOAX_ASSIGN_TAB,
	MD20060 $MC_AXCONF_GEOAX_NAME_TAB
	MD20070 $MC_AXCONF_MACHAX_USED
	MD24... $MC_TRAFO_AXES_IN_...
	MD24... $MC_TRAFO_GEOAX_ASSIGN_TAB_...
</description>
</parameter>
<parameter number="11717" type="STRING" dim="0">
<name>D_NO_FCT_CYCLE_NAME</name>
<brief>Unterprogrammname für D-Funktions-Ersetzung</brief>
<description>Zyklenname für Ersetzungsroutine der D-Funktion.
Wird in einem  Teileprogrammsatz eine D-Funktion programmiert, so wird in Abhängigkeit von den Maschinendaten MD10717 $MN_T_NO_FCT_CYCLE_NAME, MD10719 $MN_T_NO_FCT_CYCLE_MODE und MD10718 $MN_M_NO_FCT_CYCLE_PAR das mit MD11717 $MN_D_NO_FCT_CYCLE_NAME definierte Unterprogramm aufgerufen.

Die programmierte D-Nummer kann im Zyklus über die Systemvariablen $C_D / $C_D_PROG abgefragt werden.

MD11717 $MN_D_NO_FCT_CYCLE_NAME wirkt nur im Siemens-Mode (G290).

Pro Teileprogrammzeile kann maximal eine M/T/D-Funktionsersetzung wirksam werden.
In dem Satz mit der D-Funktionsersetzung darf kein modaler Unterprogramm-Aufruf programmiert sein. Auch Unterprogrammrücksprung und Teileprogrammende sind nicht erlaubt.
Im Konfliktfall wird Alarm 14016 abgesetzt.
</description>
</parameter>
<parameter number="11750" type="UDWORD" dim="0" display="HEX">
<name>NCK_LEAD_FUNCTION_MASK</name>
<brief>Funktionen zur Leitwertkopplung</brief>
<description>Mit diesem MD werden spezielle Funktionen der Leitwertkopplung eingestellt.
Das MD ist bitcodiert, folgende Bits sind belegt:

Bit 0 -  3:
	reserviert

Bit 4 == 0:
	Die Folgeachse einer Leitwertkopplung bremst eigenständig bei NC- od.Bag-Stopp od. kanalspez. Vorschubsperre
Bit 4 == 1:
	Die Folgeachse einer Leitwertkopplung bremst nicht eigenständig bei NC- od. Bag-Stopp od. kanalspez. Vorschubsperre

Bit 5 - 31:
	reserviert
</description>
</parameter>
<parameter number="11752" type="UDWORD" dim="0" display="HEX">
<name>NCK_TRAIL_FUNCTION_MASK</name>
<brief>Funktionen zum Mitschleppen</brief>
<description>Mit diesem MD werden spezielle Funktionen zum Mitschleppen eingestellt.
Das MD ist bitcodiert, folgende Bits sind belegt:

Bit 0 - 3:
	reserviert

Bit 4 == 0:
	Die Folgeachse eines Mitschleppverbandes aktiviert aus einer Synchronaktion bremst eigenständig bei NC- od. Bag-Stopp od. kanalspez. Vorschubsperre
Bit 4 == 1:
	Die Folgeachse einer Mitschleppverbandes aktiviert aus einer Synchronaktion bremst nicht eigenständig bei NC- od. Bag-Stopp od. kanalspez. Vorschubsperre

Bit 5 - 31:
	reserviert
</description>
</parameter>
<parameter number="11756" type="UDWORD" dim="0" display="HEX">
<name>NCK_EG_FUNCTION_MASK</name>
<brief>Funktionen zum Elektronischen Getriebe</brief>
<description>Mit diesem MD werden spezielle Funktionen zum Elektronischen Getriebe (EG) eingestellt.
Das MD ist bitcodiert, folgende Bits sind belegt:

Bit 0 - 4:
	reserviert

Bit 5 == 0:
	Positionsangaben in EGONSYN und EGONSYNE werden entsprechend der im aktuell bearbeiteten Teileprogrammsatz gültigen Einstellung G700 oder G710 inch oder metrisch bewertet.

Bit 5 == 1
	Positionsangaben in EGONSYN und EGONSYNE werden im angestellten Grundsystem bewertet.

Bit 6 - 31:
	reserviert
</description>
</parameter>
<parameter number="12000" type="BOOLEAN" dim="0">
<name>OVR_AX_IS_GRAY_CODE</name>
<brief>Achs-Vorschubkorrekturschalter Gray-codiert</brief>
<description>Dieses Maschinendatum dient der Anpassung an die Schnittstellencodierung der PLC-Nahtstelle für den Achs-Vorschubkorrekturschalter.

1:	Die niederwertigen 5 Bits des PLC-Nahtstellensignals &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H) werden als Gray-Code interpretiert. Der gelesene Wert entspricht einer Schalterstellung. Er dient als Index für die Auswahl des gültigen Korrekturfaktors aus der Tabelle des MD12010 $MN_OVR_FACTOR_AX_SPEED [n]

0:	Das Vorschubkorrektur-Byte der PLC-Nahtstelle wird als binäre Darstellung des Override-Wertes in Prozent interpretiert (Begrenzung: 200 Prozent).

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H), (achsspezifisch)
	MD12010 $MN_OVR_FACTOR_AX_SPEED [n]
	(Bewertung des Achs-Vorschubkorrekturschalters)
</description>
</parameter>
<parameter number="12010" type="DOUBLE" dim="1">
<name>OVR_FACTOR_AX_SPEED</name>
<brief>Bewertung des Achs-Vorschubkorrekturschalters</brief>
<description>Bewertung des Achsgeschwindigkeits-Override-Schalters bei graycodierter Schnittstelle

Nicht relevant bei:
	MD12000 $MN_OVR_AX_IS_GRAY_CODE = 0

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H)), (achsspezifisch)
</description>
</parameter>
<parameter number="12020" type="BOOLEAN" dim="0">
<name>OVR_FEED_IS_GRAY_CODE</name>
<brief>Bahnvorschub-Korrekturschalter Gray-codiert</brief>
<description>Dieses Maschinendatum dient der Anpassung an die Schnittstellencodierung der PLC-Nahtstelle für den Bahnvorschub-Korrekturschalter.

1:	Die niederwertigen 5 Bits des NC/PLC-Nahtstellensignals &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H) werden als Gray-Code interpretiert. Der gelesene Wert entspricht einer Schalterstellung. Er dient als Index für die Auswahl des gültigen Override-Faktors aus der Tabelle des MD12030 $MN_OVR_FACTOR_FEEDRATE [n].
0:	Das Vorschubkorrektur-Byte der PLC-Nahtstelle wird als binäre Darstellung des Override-Wertes in Prozent interpretiert (Begrenzung: 200 Prozent).

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H)
	MD12030 $MN_OVR_FACTOR_FEEDRATE [n]
	(Bewertung des Bahnvorschub-Korrekturschalters)
</description>
</parameter>
<parameter number="12030" type="DOUBLE" dim="1">
<name>OVR_FACTOR_FEEDRATE</name>
<brief>Bewertung des Bahnvorschub-Korrekturschalters</brief>
<description>Bewertung des Feedrate-Override-Schalters bei graycodierter Schnittstelle
Sonderfunktion des 31. Wertes für die Geschwindigkeitsführung:
Die Einstellung des 31. Override-Wertes legt die Dynamik-Reserven fest, die die Geschwindigkeitsführung für eine Überhöhung des Bahn-Vorschubs hält. Die Einstellung sollte dem höchsten tatsächlich verwendeten Override-Faktor entsprechen.
Die Funktion des 31. Wertes ist damit identisch zur Wirkung des MD12100 $MN_OVR_FACTOR_LIMIT_BIN bei Verwendung der binärcodierten Schnittstelle

Nicht relevant bei:
	MD12020 $MN_OVR_FEED_IS_GRAY_CODE = 0

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;VorschubkorrekturA-H/&gt; (Vorschubkorrektur A-H)
</description>
</parameter>
<parameter number="12040" type="BOOLEAN" dim="0">
<name>OVR_RAPID_IS_GRAY_CODE</name>
<brief>Eilgang-Korrekturschalter Gray-codiert</brief>
<description>Dieses Maschinendatum dient der Anpassung an die Schnittstellencodierung der PLC-Nahtstelle für den Eilgang-Korrekturschalter.

1:	Die niederwertigen 5 Bits des PLC-Nahtstellensignals &lt;EilgangkorrekturA-H/&gt; (Eilgangkorrektur A-H) werden als Gray-Code interpretiert. Der gelesene Wert entspricht einer Schalterstellung.
	Er dient als Index für die Auswahl des gültigen Korrekturfaktors aus der Tabelle des MD12050 $MN_OVR_FACTOR_RAPID_TRA[n].
0:	Das Eilgangkorrektur-Byte der PLC-Nahtstelle wird als binäre Darstellung des Override-Wertes in Prozent interpretiert (Begrenzung: 200 Prozent).

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;EilgangkorrekturA-H/&gt; (Eilgangkorrektur A-H)
	MD12050 $MN_OVR_FACTOR_RAPID_TRA[n]
	(Bewertung des Eilgang-Korrekturschalters)
</description>
</parameter>
<parameter number="12050" type="DOUBLE" dim="1">
<name>OVR_FACTOR_RAPID_TRA</name>
<brief>Bewertung des Eilgang-Korrekturschalters</brief>
<description>Bewertung des Eilgang-Override-Schalters bei graycodierter Schnittstelle

Nicht relevant bei:
	MD12040 $MN_OVR_RAPID_IS_GRAY_CODE = 0

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;EilgangkorrekturA-H/&gt; (Eilgangkorrektur A-H)
</description>
</parameter>
<parameter number="12060" type="BOOLEAN" dim="0">
<name>OVR_SPIND_IS_GRAY_CODE</name>
<brief>Spindel-Korrekturschalter Gray-codiert</brief>
<description>Dieses Maschinendatum dient der Anpassung an die Schnittstellencodierung der PLC-Nahtstelle für den Spindel-Korrekturschalter.

1:	Die niederwertigen 5 Bits des PLC-Nahtstellensignals "Spindelkorrektur" werden als Gray-Code interpretiert. Der gelesene Wert entspricht einer Schalterstellung. Er dient als Index für die Auswahl des gültigen Korrekturfaktors aus der Tabelle des MD12070 $MN_OVR_FACTOR_SPIND_ SPEED [n].
0:	Das Spindelkorrektur-Byte der PLC-Nahtstelle wird als binäre Darstellung des Override-Wertes in Prozent interpretiert (Begrenzung: 200 Prozent).

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Spindelkorrektur/&gt; (Spindelkorrektur)
	MD12070 $MN_OVR_FACTOR_SPIND_SPEED[n]
	(Bewertung des Spindel-Korrekturschalters)
</description>
</parameter>
<parameter number="12070" type="DOUBLE" dim="1">
<name>OVR_FACTOR_SPIND_SPEED</name>
<brief>Bewertung des Spindel-Korrekturschalters</brief>
<description>Bewertung des spindelspezifischen Override-Schalters bei graycodierter Schnittstelle
Sonderfunktion des 31. Wertes für die Geschwindigkeitsführung:
Die Einstellung des 31. Override-Wertes legt die Dynamik-Reserven fest, die die Geschwindigkeitsführung für eine Überhöhung des Spindel-Vorschubs hält. Die Einstellung sollte dem höchsten tatsächlich verwendeten Override-Faktor entsprechen.
Die Funktion des 31. Wertes ist damit identisch zur Wirkung des MD12100 $MN_OVR_FACTOR_LIMIT_BIN bei Verwendung der binärcodierten Schnittstelle.

Nicht relevant bei:
	MD12060 $MN_OVR_SPIND_IS_GRAY_CODE = 0

Korrespondiert mit:
	NC/PLC-Nahtstellensignal &lt;Spindelkorrektur/&gt; (Spindelkorrektur)
</description>
</parameter>
<parameter number="12080" type="BOOLEAN" dim="0">
<name>OVR_REFERENCE_IS_PROG_FEED</name>
<brief>Override-Bezugsgeschwindigkeit</brief>
<description>In diesem MD wird eingetragen, ob sich die über NST vorgegebene Spindelkorrektur auf die durch MD/SD begrenzte Drehzahl oder auf die programmierte Drehzahl bezieht.
1:	Spindelkorrektur wirkt bezogen auf die programmierte Drehzahl
	(programmierte Drehzahl _ Spindelkorrektur 100%)
0:	Spindelkorrektur wirkt auf die durch MD oder SD begrenzte Drehzahl
	(begrenzte Drehzahl durch MD/SD _ Spindelkorrektur 100%)

Korrespondierende Maschinendaten:
	Eine Drehzahlbegrenzung erfolgt u. a. durch folgende MD oder SD:
	MD35100 $MA_SPIND_VELO_LIMIT          Maximale Spindeldrehzahl
	MD35130 $MA_GEAR_STEP_MAX_VELO_LIMIT  Maximaldrehzahl der Getriebestufe
	MD35160 $MA_SPIND_EXTERN_VELO_LIMIT   Spindeldrehzahlbegrenzung von PLC
	SD43220 $SA_SPIND_MAX_VELO_G26        Maximale Spindeldrehzahl
	SD43230 $SA_SPIND_MAX_VELO_LIMS       Spindeldrehzahlbegrenzung bei G96
</description>
</parameter>
<parameter number="12082" type="BOOLEAN" dim="0">
<name>OVR_REFERENCE_IS_MIN_FEED</name>
<brief>Festlegung des Bezugs des Bahn-Overrides</brief>
<description>Die Bezugsgeschwindigkeit für den über Maschinensteuertafel vorgegebenen Bahnvorschuboverride kann abweichend vom Standard gesetzt werden.
0:	Standard:
	Der Override wird auf den programmierten Vorschub bezogen.

1:	Sonderfall:
	Der Override wird auf den programmierten Vorschub oder auf die Bahnvorschubbegrenzung bezogen, je nachdem, welcher resultierende Wert niedriger ist. Damit erhält man auch im Falle einer starken Vorschubreduzierung (infolge der zulässigen Achsdynamik) immer eine sichtbare Auswirkung des Override-Wertes (im Bereich 0 bis 100%).
</description>
</parameter>
<parameter number="12090" type="UDWORD" dim="0" display="HEX">
<name>OVR_FUNCTION_MASK</name>
<brief>Auswahl von Override-Spezifikationen</brief>
<description>Mit den Bits kann die Funktionalität von Overrideschaltern beeinflusst werden.
Bit 0: = 0,
	Standard: Spindeloverride wirkt bei G331/G332
       = 1,
	Bahnoverride wirkt anstelle des Spindeloverrides bei G331/G332
	(Gewindebohren ohne Ausgleichsfutter)
</description>
</parameter>
<parameter number="12100" type="DOUBLE" dim="0">
<name>OVR_FACTOR_LIMIT_BIN</name>
<brief>Begrenzung bei binärkodiertem Korrekturschalter</brief>
<description>Mit dem Maschinendatum kann der Korrekturfaktor bei Verwendung der binärcodierten Schnittstelle für Bahn-, Achs- und Spindelvorschub zusätzlich begrenzt werden.
Dabei werden die maximalen Grenzwerte

- 200% bei kanalspezifischer Vorschubkorrektur
- 100% bei kanalspezifischer Eilgangkorrektur
- 200% bei achsspezifischer Vorschubkorrektur
- 200% bei  Spindelkorrektur

durch den in OVR_FACTOR_LIMIT_BIN eingetragenen Grenzwert ersetzt, wenn dieser niedriger gewählt wurde.

Beispiel: OVR_FACTOR_LIMIT_BIN = 1.20
 --&gt;  Maximaler Korrekturfaktor für
- kanalspezifische Vorschubkorrektur        =120%
- kanalspezifische Eilgangkorrektur         =100%
- achsspezifische Vorschubkorrektur         =120%
- Spindelkorrektur                          =120%

Außerdem legt dieser Wert die Dynamik-Reserven fest, die die Geschwindigkeitsführung für eine Überhöhung des Bahn- und Spindel-Vorschubs hält.

Literatur:
	/FB/, B1, "Bahnsteuerbetrieb, Genauhalt und LookAhead"
</description>
</parameter>
<parameter number="12200" type="BOOLEAN" dim="0">
<name>RUN_OVERRIDE_0</name>
<brief>Fahrverhalten bei Override 0</brief>
<description>= 0
	Override 0 ist wirksam und bedeutet Bremsen (konventioneller Betrieb, Sicherheitsfunktion).
Bei Handrädern wird über MD32084 $MA_HANDWH_STOP_COND für Maschinenachsen und über MD20624 $MC_HANDWH_CHAN_STOP_COND, Bit 0 und 1 für Geometrieachsen und Konturhandrad festgelegt, ob die Pulse aufgesammelt werden.

= 1
	Das Fahren mit Handrädern und im JOG-Betrieb mit Festvorschüben ist auch bei Override 0% möglich.

Korrespondiert mit:
	MD32084 $MA_HANDWH_STOP_COND
	MD20624 $MC_HANDWH_CHAN_STOP_COND
</description>
</parameter>
<parameter number="12202" type="DOUBLE" dim="1">
<name>PERMANENT_FEED</name>
<brief>Festvorschübe für Linearachsen</brief>
<description>In der Betriebsart AUTOMATIK:
Nach der Aktivierung eines Festvorschubs über Nahtstellensignal wird anstelle des programmierten Vorschubs mit Festvorschub verfahren.
Beachte:
Der Festvorschub wird im Bahnsteuerbetrieb mitausgewertet, um den Aufwand für die LookAhead-Berechnung zu optimieren. Unnötig hohe Werte sind deshalb zu vermeiden. Ist kein Festvorschub gewünscht, ist Null einzutragen.

In der Betriebsart JOG:
Nach der Aktivierung eines Festvorschubs über Nahtstellensignal und Verfahren der Linearachse mit einer Verfahrtaste wird mit dem Festvorschub in die gewählte Richtung verfahren.

n = 0, 1, 2, 3 bedeutet Festvorschub 1, 2, 3, 4. Die Werte sind in aufsteigender Folge einzutragen.

Sonderfälle, Fehler, ......
	Die durch MD32000 $MA_MAX_AX_VELO definierte Maximalgeschwindigkeit ist wirksam.
Es wird eine Override-Einstellung von 100 % angenommen, bei Override gleich 0 wirkt MD12200 $MN_RUN_OVERRIDE_0.

Korrespondiert mit:
	MD12200 $MN_RUN_OVERRIDE_0
</description>
</parameter>
<parameter number="12204" type="DOUBLE" dim="1">
<name>PERMANENT_ROT_AX_FEED</name>
<brief>Festvorschübe für Rundachsen</brief>
<description>Festvorschubwerte:
In der Betriebsart AUTOMATIK:
Nach der Aktivierung eines Festvorschubs über Nahtstellensignal wird anstelle des programmierten Vorschubs mit Festvorschub verfahren.

Beachte: Für die Bahnbewegung wird PERMANENT_ROT_AX_FEED anstatt PERMANENT_FEED verwendet, wenn im aktuellen Satz alle synchron verfahrenen Achsen Rundachsen sind. Sind Linear- und Rundachsen zusammen synchron zu verfahren, gilt PERMANENT_FEED.
Der Festvorschub wird im Bahnsteuerbetrieb mitausgewertet, um den Aufwand für die LookAhead-Berechnung zu optimieren. Unnötig hohe Werte sind deshalb zu vermeiden. Ist kein Festvorschub gewünscht, ist Null einzutragen.

In der Betriebsart JOG:
Nach der Aktivierung eines Festvorschubs über Nahtstellensignal und Verfahren der Rundachse mit einer Verfahrtaste wird mit dem Festvorschub in die gewählte Richtung verfahren.

n = 0, 1, 2, 3 bedeutet Festvorschub 1, 2, 3, 4

Sonderfälle, Fehler, ......
	Die durch MD32000 $MA_MAX_AX_VELO definierte Maximalgeschwindigkeit ist wirksam.
Es wird eine Override-Einstellung von 100 % angenommen, bei Override gleich 0 wirkt MD12200 $MN_RUN_OVERRIDE_0.

Korrespondiert mit:
	MD12200 $MN_RUN_OVERRIDE_0
</description>
</parameter>
<parameter number="12205" type="DOUBLE" dim="1">
<name>PERMANENT_SPINDLE_FEED</name>
<brief>Festvorschübe für Spindeln</brief>
<description>Festvorschubwerte:
JOG: Bei Aktivierung der Verfahrtasten und Aktivierung des entsprechenden Signals in der PLC-Nahtstelle wird eine Spindel mit Festvorschub verfahren.

Der Override wirkt nicht.
In Abhängigkeit vom MD12200 $MN_RUN_OVERRIDE_0 wird auch bei Override 0 gefahren.
Der durch MD32000 $MA_MAX_AX_VELO vorgegebene Wert gilt als Obergrenze. Bei einem größeren Wert des Festvorschubs wird auf diesen Grenzwert begrenzt.
</description>
</parameter>
<parameter number="12300" type="BOOLEAN" dim="0">
<name>CENTRAL_LUBRICATION</name>
<brief>Zentrale Schmierung aktiv</brief>
<description>Die axialen VDI-Signale fordern nach Überschreiten eines einstellbaren achsialen Weges (vgl. MD33050 $MA_LUBRICATION_DIST) bei der PLC einen Schmierimpuls an. Diese achsialen Impulse wirken (defaultmäßig) unabhängig voneinander.

Wenn die Maschinenkonstruktion nun eine zentrale Schmierung vorsieht, d.h. der Schmierimpuls einer beliebigen Achse an allen Achsen wirkt, dann muss auch die zugehörige Wegüberwachung aller Achsen nach Schmierimpuls-Ausgabe neu gestartet werden, diese Start- Synchronisation der Überwachungen erfolgt durch MD12300 $MN_CENTRAL_LUBRICATION=TRUE.
</description>
</parameter>
<parameter number="12510" type="UDWORD" dim="0" display="DECIMAL">
<name>NCU_LINKNO</name>
<brief>NCU-Nummer in einem NCU-Verband</brief>
<description>Nummer oder Namen zur Identifikation einer NCU innerhalb eines NCU-Verbands.
Bei einem NCU-Verband (NCU-Cluster) sind die NCUs über einen Link-Bus miteinander verbunden.

Korrespondiert mit:
	MD18780 $MN_MM_NCU_LINK_MASK
</description>
</parameter>
<parameter number="12520" type="BYTE" dim="1">
<name>LINK_TERMINATION</name>
<brief>NCU Nummern bei denen Busabschlusswiderstände aktiviert sind</brief>
<description>LINK_TERMINATION legt fest, bei welchen NCUs die Busabschlusswiderstände für die Taktleitung durch das Link-Modul eingeschaltet werden müssen.

Korrespondiert mit:
	MD18780 $MN_MM_NCU_LINK_MASK
</description>
</parameter>
<parameter number="12540" type="DWORD" dim="0">
<name>LINK_BAUDRATE_SWITCH</name>
<brief>Link Bus Baudrate</brief>
<description>Mit den eingegebenen Werten wird die zugeordnete Baudrate für die Link-Kommunikation festgelegt:

Eingestellter Wert                     Rate
 0                                     9,600   KBd
 1                                    19,200   KBd
 2                                    45,450   KBd
 3                                    93,750   KBd
 4                                   187,000   KBd
 5                                   500,000   KBd
 6                                     1,500   MBd
 7                                     3,000   MBd
 8                                     6,000   MBd
 9                                    12,000   MBd

Nicht relevant bei:
	Systemen ohne Link-Module

Korrespondiert mit:
	MD18780 $MN_MM_NCU_LINK_MASK
</description>
</parameter>
<parameter number="12550" type="DWORD" dim="0">
<name>LINK_RETRY_CTR</name>
<brief>Maximale Anzahl der Wiederholungen für Telegrammübertragung</brief>
<description>Maximale Anzahl der Telegrammwiederholungen im Fehlerfall

Nicht relevant bei:
	Systemen ohne Link-Module

Korrespondiert mit:
	MD18780 $MN_MM_NCU_LINK_MASK
</description>
</parameter>
<parameter number="12551" type="DOUBLE" dim="1">
<name>TIMEOUT_LINK_COMMUNICATION</name>
<brief>Wartezeiten beim Start der Linkkommunikation.</brief>
<description>Beim NCK-Hochlauf werden Konfigurationsdaten zwischen den einzelnen NCUs ausgetauscht. Dazu müssen die NCUs zum Datenausgleich zeitlich synchronisiert werden. Das Maschinendatum legt Timeouts für den Datenaustausch fest. Bei Solutionline geschieht dies über die PROFINET-Kommunikation. Im Hochlauf ist dies Standardethernetkommunikation, später IRT Kommunikation. Die einzelnen Elemente haben folgende Bedeutung:
Element 0:  Timeoutzeit für die erste Synchronisation zum Datenabgleich im Hochlauf
Element 1:  Timeoutzeit für die Synchronisation zum taktsynchronen Übergang in den zyklischen Betrieb
Element 2:  Timeoutzeit für ein nicht Realtimetelegramm im Hochlauf                    (nur bei Solutionline)
Element 3:  Timeoutzeit bis die PROFINET-Software in den Zustand 'Operate' gegangen ist (nur bei Solutionline)
</description>
</parameter>
<parameter number="12552" type="DWORD" dim="0">
<name>LINK_LIFECYCLE_MAX_LOOP</name>
<brief>Maximale Schleifenanzahl für Synchronisierung des Link-Lebenszyklus.</brief>
<description>Während des NCK-Hochlaufs tritt die NCK zu einem bestimmten Zeitpunkt in die zyklische Ebene ein, das heißt, IPO- und Servo-Task beginnen zu arbeiten. Weichen im NCU-Linkverbund diese Zeitpunkte zu stark ab, erscheint der Alarm 280003. Mit der Erhöhung dieses Maschinendatums kann diese Wartezeit in IPO-Taktschritten erhöht werden.
</description>
</parameter>
<parameter number="12701" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB1</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn              mit NCU Nummer m: 1..16
                     und Maschinenachsadresse n: 1... 31

Beispiel:
NC2_AX1            ; Die Achse befindet sich auf der NCU2 und ist dort
                   ; 1. Maschinenachse.
AX5                ; lokale Achse 5 bei nur einer NCU
                   ; der Achscontainer-Mechanismus wird nur von
                   ; mehreren Kanälen einer NCU benutzt.

Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB festgelegt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9   MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"   MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12702" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB2</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn              mit NCU Nummer m: 1..16
                     und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1            ; Die Achse befindet sich auf der NCU2 und ist dort die
                   ; 1. Maschinenachse.
AX5                ; lokale Achse 5 bei nur einer NCU
                   ; der Achscontainer-Mechanismus wird nur von
                   ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9
MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12703" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB3</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn             mit NCU Nummer m: 1..16
                    und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1           ; Die Achse befindet sich auf der NCU2 und ist dort die
                  ; 1. Maschinenachse.
AX5               ; lokale Achse 5 bei nur einer NCU
                  ; der Achscontainer-Mechanismus wird nur von
                  ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in
MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!

Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9   MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12704" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB4</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar. Schreibweise für Einträge:
NCm_AXn             mit NCU Nummer m: 1..16
                    und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1           ; Die Achse befindet sich auf der NCU2 und ist dort die
                  ; 1. Maschinenachse.
AX5               ; lokale Achse 5 bei nur einer NCU
                  ; der Achscontainer-Mechanismus wird nur von
                  ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9   MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12705" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB5</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn           mit NCU Nummer m: 1..16
                  und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1         ; Die Achse befindet sich auf der NCU2 und ist dort die
                ; 1. Maschinenachse.
AX5             ; lokale Achse 5 bei nur einer NCU
                ; der Achscontainer-Mechanismus wird nur von
                ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9
MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12706" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB6</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn              mit NCU Nummer m: 1..16
                     und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1            ; Die Achse befindet sich auf der NCU2 und ist dort die
                   ; 1. Maschinenachse.
AX5                ; lokale Achse 5 bei nur einer NCU
                   ; der Achscontainer-Mechanismus wird nur von
                   ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12707" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB7</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn          mit NCU Nummer m: 1..16
                 und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1        ; Die Achse befindet sich auf der NCU2 und ist dort die
               ; 1. Maschinenachse.
AX5            ; lokale Achse 5 bei nur einer NCU
               ; der Achscontainer-Mechanismus wird nur von
               ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12708" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB8</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn            mit NCU Nummer m: 1..16
                   und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1          ; Die Achse befindet sich auf der NCU2 und ist dort die
                 ; 1. Maschinenachse.
AX5              ; lokale Achse 5 bei nur einer NCU
                 ; der Achscontainer-Mechanismus wird nur von
                 ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12709" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB9</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn         mit NCU Nummer m: 1..16
                und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1       ; Die Achse befindet sich auf der NCU2 und ist dort die
              ; 1. Maschinenachse.
AX5           ; lokale Achse 5 bei nur einer NCU
              ; der Achscontainer-Mechanismus wird nur von
              ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12710" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB10</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn        mit NCU Nummer m: 1..16
               und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1      ; Die Achse befindet sich auf der NCU2 und ist dort die
             ; 1. Maschinenachse.
AX5          ; lokale Achse 5 bei nur einer NCU
             ; der Achscontainer-Mechanismus wird nur von
             ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12711" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB11</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn         mit NCU Nummer m: 1..16
                und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1       ; Die Achse befindet sich auf der NCU2 und ist dort die
              ; 1. Maschinenachse.
AX5           ; lokale Achse 5 bei nur einer NCU
              ; der Achscontainer-Mechanismus wird nur von
              ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12712" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB12</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn          mit NCU Nummer m: 1..16
                 und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1        ; Die Achse befindet sich auf der NCU2 und ist dort die
               ; 1. Maschinenachse.
AX5            ; lokale Achse 5 bei nur einer NCU
               ; der Achscontainer-Mechanismus wird nur von
               ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12713" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB13</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn         mit NCU Nummer m: 1..16
                und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1       ; Die Achse befindet sich auf der NCU2 und ist dort die
              ; 1. Maschinenachse.
AX5           ; lokale Achse 5 bei nur einer NCU
              ; der Achscontainer-Mechanismus wird nur von
              ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in
MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12714" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB14</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn          mit NCU Nummer m: 1..16
                 und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1        ; Die Achse befindet sich auf der NCU2 und ist dort die
               ; 1. Maschinenachse.
AX5            ; lokale Achse 5 bei nur einer NCU
               ; der Achscontainer-Mechanismus wird nur von
               ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1
MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12715" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB15</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn           mit NCU Nummer m: 1..16
                  und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1         ; Die Achse befindet sich auf der NCU2 und ist dort die
                ; 1. Maschinenachse.
AX5             ; lokale Achse 5 bei nur einer NCU
                ; der Achscontainer-Mechanismus wird nur von
                ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12716" type="STRING" dim="1">
<name>AXCT_AXCONF_ASSIGN_TAB16</name>
<brief>Zuordnung eines Achs-Container-Platzes</brief>
<description>Zuordnung eines Achs-Container-Platzes (Slot s) zu einer Maschinenachse oder Link-Achse. In einem Achs-Container sind max. 32 Plätze mit Achsen belegbar.
Schreibweise für Einträge:
NCm_AXn           mit NCU Nummer m: 1..16
                  und Maschinenachsadresse n: 1... 31
Beispiel:
NC2_AX1         ; Die Achse befindet sich auf der NCU2 und ist dort die
                ; 1. Maschinenachse.
AX5             ; lokale Achse 5 bei nur einer NCU
                ; der Achscontainer-Mechanismus wird nur von
                ; mehreren Kanälen einer NCU benutzt.
Der Verweis auf einen Achs-Containerplatz eines Kanals wird durch die Festlegung in MD20070 $MC_AXCONF_MACHAX_USED und MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB bestimmt.
Die zu einem bestimmten Zeitpunkt tatsächlich zugewiesene Achse ist abhängig vom Containerdrehungszustand. Alle Kanäle, die auf einen Achscontainer zugreifen, benutzen einheitlich die hier hinterlegten Achseinträge. Greifen Kanäle verschiedener NCUs auf diesen Container zu, ist auf NCU-übergreifende Konsistenz zu achten!
Beispiel:
CHANDATA(1)
$MC_MACHAX_USED[4]=9    MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB[8]=CL1_SL1 MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[0]="NC1_AX1"    MD12701 $MN_AXCT_AXCONF_ASSIGN_TAB1[1]="NC2_AX1"
Dieses Maschinendatum wird über NCU-Link verteilt.

Korrespondiert mit:
	MD10002 $MN_AXCONF_LOGIC_MACHAX_TAB
</description>
</parameter>
<parameter number="12750" type="STRING" dim="1">
<name>AXCT_NAME_TAB</name>
<brief>Achs-Container Bezeichner</brief>
<description>Liste der Achs-Container-Bezeichner
Zusätzlich zu dem Kanalbezeichner einer Achse kann der hier anwenderdefinierbare Achs-Container-Bezeichner als Achs-Container-Name für z.B. eine Achs-Container-Drehung verwendet werden (AXCTSWE(CT1))
</description>
</parameter>
<parameter number="12760" type="UDWORD" dim="0" display="HEX">
<name>AXCT_FUNCTION_MASK</name>
<brief>Funktionen zum Achscontainer</brief>
<description>Mit diesem MD werden spezielle Funktionen zum Achscontainer eingestellt.
Das MD ist bitcodiert, folgende Bits sind belegt:

Bit 0 = 0: Bei einer direkten Achscontainerschaltung (AXCTSWED), müssen alle andere Kanäle im RESET-Zustand sein.

Bit 0 = 1: Bei einer direkten Achscontainerschaltung (AXCTSWED) müssen nur andere Kanäle, die auf Achsen des Achscontainers das Interpolationsrecht haben im RESET-Zustand sein.
</description>
</parameter>
<parameter number="12950" type="DWORD" dim="1">
<name>PLC_MCP_CONNECT</name>
<brief>Konfiguration der MSTT</brief>
<description>Das Datum dient zur Konfiguration der Maschinensteuertafeln für die SW-PLC2xx:
Wert = -1 Keine MSTT vorhanden
Wert =  0 Anschluss über Profinet
Wert =  1 Anschluss über USB
</description>
</parameter>
<parameter number="12951" type="DWORD" dim="1">
<name>PLC_MCP_ADDRESS_IN</name>
<brief>Logische Eingangsadressen der MSTT am PROFINET</brief>
<description>Das Datum definiert die logischen Eingangsadressen der Maschinensteuertafeln am PROFINET.
Es wird nur ausgewertet, wenn für die ausgewählte MSTT das MD12950 $MN_PLC_MCP_CONNECT[i] = 0 ist.
</description>
</parameter>
<parameter number="12952" type="DWORD" dim="1">
<name>PLC_MCP_ADDRESS_OUT</name>
<brief>Logische Ausgangsadressen der MSTT am PROFINET</brief>
<description>Das Datum definiert die logischen Ausgangsadressen der Maschinensteuertafeln am PROFINET.
Es wird nur ausgewertet, wenn für die ausgewählte MSTT das MD12950 $MN_PLC_MCP_CONNECT[i] = 0 ist.
</description>
</parameter>
<parameter number="12954" type="DWORD" dim="1">
<name>PLC_ALM_CONNECT</name>
<brief>Konfiguration der Ansteuerung der Einspeisung</brief>
<description>Das Datum legt fest, wie die Ansteuerung der Einspeisung (ALM, SLM) bei Systemen mit SW-PLC2xx erfolgen soll.
Wert = 0 keine Einspeisung angeschlossen oder Ansteuerung über Klemmenverdrahtung
Wert = 1 Ansteuerung über einen Datenbaustein der SW-PLC2xx
Index 0 = direkt an SINUMERIK 828D angeschlossene Einspeisung
Index 1 = an einer Achserweiterungsbaugruppe (NX) angeschlossene Einspeisung
</description>
</parameter>
<parameter number="12955" type="DWORD" dim="1" readonly="true">
<name>PLC_ALM_ADDRESS_IN</name>
<brief>Logische Eingangsadresse der Einspeisung</brief>
<description>Logische Eingangsadresse der Einspeisung (ALM, SLM) bei Ansteuerung über einen Datenbaustein der SW-PLC2xx
Das MD wird nur ausgewertet, wenn für die ausgewählte Einspeisung das MD12954 $MN_PLC_ALM_CONNECT[i] = 1 ist.
Index 0 = direkt an SINUMERIK 828D angeschlossene Einspeisung
Index 1 = an einer Achserweiterungsbaugruppe (NX) angeschlossene Einspeisung
</description>
</parameter>
<parameter number="12956" type="DWORD" dim="1" readonly="true">
<name>PLC_ALM_ADDRESS_OUT</name>
<brief>Logische Ausgangsadresse der Einspeisung</brief>
<description>Logische Ausgangsadresse der Einspeisung (ALM, SLM) bei Ansteuerung über einen Datenbaustein der SW-PLC2xx
Das MD wird nur ausgewertet, wenn für die ausgewählte Einspeisung das MD12954 $MN_PLC_ALM_CONNECT[i] = 1 ist.
Index 0 = direkt an SINUMERIK 828D angeschlossene Einspeisung
Index 1 = an einer Achserweiterungsbaugruppe (NX) angeschlossene Einspeisung
</description>
</parameter>
<parameter number="12970" type="DWORD" dim="0">
<name>PLC_DIG_IN_LOGIC_ADDRESS</name>
<brief>Logische Start-Adresse der digitalen Eingangs-Adressen der PLC</brief>
<description>Logische Start-Adresse der digitalen Eingangs-Adressen der PLC

Korrespondiert mit:
	MD12971 $MN_PLC_DIG_IN_NUM
</description>
</parameter>
<parameter number="12971" type="DWORD" dim="0">
<name>PLC_DIG_IN_NUM</name>
<brief>Anzahl der digitalen Eingangs-Adressen</brief>
<description>Anzahl der digitalen Eingangs-Adressen ab der Startadresse

Korrespondiert mit:
	MD12970 $MN_PLC_DIG_IN_LOGIC_ADDRESS
</description>
</parameter>
<parameter number="12974" type="DWORD" dim="0">
<name>PLC_DIG_OUT_LOGIC_ADDRESS</name>
<brief>Logische Start-Adresse der digitalen Ausgangs-Adresse der PLC</brief>
<description>Logische Start-Adresse der digitalen Ausgangs-Adressen der PLC

Korrespondiert mit:
	MD12975 $MN_PLC_DIG_OUT_NUM
</description>
</parameter>
<parameter number="12975" type="DWORD" dim="0">
<name>PLC_DIG_OUT_NUM</name>
<brief>Anzahl der digitalen Ausgangs-Adressen</brief>
<description>Anzahl der digitalen Ausgangs-Adressen ab der Startadresse
</description>
</parameter>
<parameter number="12978" type="DWORD" dim="0">
<name>PLC_ANA_IN_LOGIC_ADDRESS</name>
<brief>Logische Start-Adresse der analogen Eingangs-Adresse der PLC</brief>
<description>Logische Start-Adresse der analogen Eingangs-Adressen der PLC

Korrespondiert mit:
	MD12979 $MN_PLC_ANA_IN_NUM
</description>
</parameter>
<parameter number="12979" type="DWORD" dim="0">
<name>PLC_ANA_IN_NUM</name>
<brief>Anzahl der analogen Eingangs-Adressen</brief>
<description>Anzahl der analogen Eingangs-Adressen ab der Startadresse

Korrespondiert mit:
	MD12978 $MN_PLC_ANA_IN_LOGIC_ADDRESS
</description>
</parameter>
<parameter number="12982" type="DWORD" dim="0">
<name>PLC_ANA_OUT_LOGIC_ADDRESS</name>
<brief>Logische Start-Adresse der analogen Ausgangs-Adressen der PLC</brief>
<description>Logische Start-Adresse der analogen Ausgangs-Adressen der PLC

Korrespondiert mit:
	MD12983 $MN_PLC_ANA_OUT_NUM
</description>
</parameter>
<parameter number="12983" type="DWORD" dim="0">
<name>PLC_ANA_OUT_NUM</name>
<brief>Anzahl der analogen Ausgangs-Adressen</brief>
<description>Anzahl der analogen Ausgangs-Adressen ab der Startadresse

Korrespondiert mit:
	MD12982 $MN_PLC_ANA_OUT_LOGIC_ADDRESS
</description>
</parameter>
<parameter number="12986" type="DWORD" dim="1">
<name>PLC_DEACT_IMAGE_LADDR_IN</name>
<brief>Deaktivierung der Peripherieverbindung zum PLC-Abbild</brief>
<description>Das PLC-Input-/Output-Abbild der Stationen mit diesen logischen Adressen
hat keine Verbindung zu der realen Peripherie
</description>
</parameter>
<parameter number="12987" type="DWORD" dim="1">
<name>PLC_DEACT_IMAGE_LADDR_OUT</name>
<brief>Deaktivierung der Peripherieverbindung zum PLC-Abbild</brief>
<description>Das PLC-Input-/Output-Abbild der Stationen mit diesen logischen Adressen
hat keine Verbindung zu der realen Peripherie
</description>
</parameter>
<parameter number="13050" type="DWORD" dim="1">
<name>DRIVE_LOGIC_ADDRESS</name>
<brief>Logische Antriebsadressen</brief>
<description>Nur bei PROFIdrive:
Logische E/A-Adressen der PROFIdrive-Antriebe am PROFIBUS/PROFINET, die einer Achse zugeordnet werden können.
Der Wert des MD ist die mit HW-Konfig (SIMATIC Manager S7) vergebene logische E/A-Adresse des Antriebs.

Der Index n aus $MN_DRIVE_LOGIC_ADDRESS[n] wird bei der Istwert- und Sollwertzuordnung verwendet:
MD30220 $MA_ENC_MODULE_NR=n+1, MD30110 $MA_CTRLOUT_MODULE_NR=n+1.
</description>
</parameter>
<parameter number="13060" type="DWORD" dim="1">
<name>DRIVE_TELEGRAM_TYPE</name>
<brief>Standard-Telegramm-Typ für PROFIdrive</brief>
<description>Nur bei PROFIdrive:
Standard-Telegramm-Typ für PROFIdrive-Achsen:
	          0 = kein Standard-Typ, benutzerdefiniert
	              (NCK-intern wird dann Telegrammtyp 103 verwendet,
	              wobei ein Anhängen weiterer PZD zulässig ist.)
	    1...  6 = PROFIdrive-Typ
	  101...107 = SIEMENS-Typ
             116 = SIEMENS-Typ wie 106 zzgl. Tracedaten
             118 = SIEMENS-Typ wie 116, jedoch Verwendung von Geber2+3
             136 = SIEMENS-Typ wie 116 zzgl. Momentenvorsteuerung
             138 = SIEMENS-Typ wie 136, jedoch Verwendung von Geber2+3
             139 = SIEMENS-Typ Telegramm speziell für Weiss-Spindelfunktionalität

Hinweise:
Die Beschreibung der SIEMENS-Telegramm-Typen ist dem SINAMICS Funktionsplan zu entnehmen.
Alarm 26015 mit Hinweis auf dieses Maschinendatum wird ausgegeben falls die Telegramm-Projektierung Inkonsistenzen aufweist, d.h. der hier gewählte Telegrammtyp auf der NCK-Seite stimmt nicht mit dem Telegrammtyp überein, der am Antrieb (s.Antriebsparameter p922) eingestellt ist und die PZD-Projektierung passt nicht (s. Antriebsparameter p923, p915, p916). Die Prüfung auf Telegramm-Projektierungsfehler kann über das MD DRIVE_FUNCTION_MASK Bit15 abgeschaltet werden.
Die SIEMENS-Telegrammtypen 1xx müssen im SINUMERIK-Kontext im 611U-Schnittstellen-Modus betrieben werden.
</description>
</parameter>
<parameter number="13070" type="UDWORD" dim="1" display="HEX">
<name>DRIVE_FUNCTION_MASK</name>
<brief>PROFIdrive-Erweiterungs-Funktionen</brief>
<description>Nur bei PROFIdrive:
Bitcodierte Maske zum Ausblenden des von NCK erwarteten Funktionsumfangs bei PROFIdrive-Achsen.

Bedeutung gesetzter Bits:

Bit 0:	Abschaltung der axialen Antriebsalarm-Abbildung
 		Hinweis: Die Wirkung dieses Bits kann abhängig vom
		Wert in MD13140 $MN_PROFIBUS_ALARM_ACCESS verdeckt sein.
Bit 1:	reserviert, frei (früher Abschaltung 611U-Beschreibungsdatei-Zwischenablage im NCK)
Bit 2:	Abschaltung der axialen Parameterzugriffe Gebertreiber
Bit 3:	Abschaltung der axialen Parameterzugriffe Ausgangstreiber
Bit 4:	reserviert, frei (früher Aktivierung DSC-Bits)
Bit 5:	Abschaltung der 611U-spez. Antriebs-Parken (STW2.7/STA2.7)
Bit 6:	Abschaltung der 611U-spez. Fahren-Festanschl.(STW2.8/STA2.8)
Bit 7:	Abschaltung der 611U-spez. Motorumschaltung. int. (STW2.9 bis 2.11)
Bit 8:	Abschaltung des 611U-spez. Rampenbausteins (STW1.11+13)
Bit 9:	Abschaltung der 611U-spez. Funktionsgenerator-Bits (STW1.8/STA1.13)
Bit 10:	Abschaltung der Steuerung der Haltebremse (STW1.12 / STA2.5)
Bit 11:	Abschaltung der Wirkung von AUS2/AUS3 auf &lt;DriveReady/&gt; (Drive Ready)
Bit 12:	Abschaltung der Fehler-/Warnklasse SINAMICS (STA1.11 bis STA1.12)
Bit 13:	Simulation Antriebs-Parken (STA2.7 = STW2.7)
Bit 14:	Auswahl der nichtzyklischen Kommunikation 0 = DPT  1 = DPV1
Bit 15:	Abschaltung des Konsistenzchecks der PROFIdrive-Telegramm-Projektierung

Die Projektierung der Bits 5 - 10 ermöglicht eine Anpassung bestimmter im PROFIdrive-Profil nicht genormter Steuer- bzw. Statusbits. Bei Standard-Voreinstellung ergibt sich bei Fremdantrieben eventuell eine andere Bedeutung und Wirkung der Bits.
</description>
</parameter>
<parameter number="13080" type="BYTE" dim="1">
<name>DRIVE_TYPE_DP</name>
<brief>Antriebsart PROFIBUS/PROFINET</brief>
<description>MD ist relevant für PROFIdrive-Antriebe am PROFIBUS/PROFINET:
Antriebstyp:
 0:	kein Antrieb bzw. Antriebstyp unbekannt (Default),
	softwareintern behandelt wie:
 1:	VSA-Antrieb (SRM: Synchronantrieb rotatorisch)
 2:	HSA-Antrieb (ARM: Asynchronantrieb rotatorisch)
 3:	Linearantrieb
 4:	Analogantrieb (keine automatische Eintragung)
 5:	Hydraulikantrieb
Hinweis:
	Der Antriebstyp wird bei Siemens-Antrieben i.a. automatisch eingetragen, sobald diese in Betrieb gegangen sind.

	Bei Fremdantrieben (zumindest bei Linearantrieben) muss der Wert dagegen händisch eingegeben werden, wenn eine automatische Erkennung nicht möglich ist.
</description>
</parameter>
<parameter number="13100" type="UDWORD" dim="1" display="HEX">
<name>DRIVE_DIAGNOSIS</name>
<brief>Diagnose Antriebskopplung</brief>
<description>reserviert
</description>
</parameter>
<parameter number="13110" type="DWORD" dim="1">
<name>PROFIBUS_TRACE_ADDRESS</name>
<brief>PROFIBUS/PROFINET-Trace von E/A-Slots</brief>
<description>Nur bei PROFIBUS/PROFINET:
Logische E/A-Adresse die aufgezeichnet werden soll.
</description>
</parameter>
<parameter number="13111" type="DWORD" dim="0">
<name>PROFIBUS_TRACE_TYPE</name>
<brief>Einstellungen PROFIBUS/PROFINET-Trace</brief>
<description>Nur bei PROFIBUS/PROFINET:
0: Aufzeichnung in den Teileprogrammspeicher  /_N_MPF_DIR/_N_SIEMDPTRC_MPF
1: Aufzeichnung in den Massenspeicher /user/sinumerik/data/temp/siemdptrc.trc
2: Aufzeichnung in den Teileprogrammspeicher mit Laufzeitmessung
3: Aufzeichnung der zyklischen PN-NCULINK Kommunikation
</description>
</parameter>
<parameter number="13112" type="DWORD" dim="0">
<name>PROFIBUS_TRACE_FILE_SIZE</name>
<brief>Maximale Tracefilegröße in KByte</brief>
<description>Nur bei PROFIBUS/PROFINET:
  0: Trace ohne Filegrößenbegrenzung
 &gt;0: Trace mit Filegrößenbegrenzung
</description>
</parameter>
<parameter number="13113" type="DWORD" dim="0">
<name>PROFIBUS_TRACE_START</name>
<brief>Aktivierung PROFIBUS/PROFINET-Trace</brief>
<description>Nur bei PROFIBUS/PROFINET:
0: Trace aus
1: Trace ein
MD13112 $MN_PROFIBUS_TRACE_FILE_SIZE &gt; 0: Trace wird beim Erreichen der Filegröße automatisch ausgeschaltet
</description>
</parameter>
<parameter number="13114" type="UDWORD" dim="1" display="HEX">
<name>PROFIBUS_TRACE_START_EVENT</name>
<brief>PROFIBUS/PROFINET-Trace Triggerbedingung</brief>
<description>Nur bei PROFIBUS/PROFINET:
Triggerbedingung wird bitweise projektiert
Bit  0-15: 0x0001-0xffff:Bitmaske
Bit 16-23: 0x01-0x14:PZD-Nummer (max. 20 Worte zulässig)
Bit 24-27: 0x01:Zustandswechsel 0-&gt;1
           0x00:Zustandswechsel 1-&gt;0
Bit 28-31: 0x10:Sendeslot
           0x00:Empfangsslot
Bei MD13113 $MN_PROFIBUS_TRACE_START=1 und MD13114  $MN_PROFIBUS_TRACE_START_EVENT=0x0 die Aufzeichnung beginnt sofort
Bei MD13113 $MN_PROFIBUS_TRACE_START=1 und MD13114  $MN_PROFIBUS_TRACE_START_EVENT=0x1 die Aufzeichnung beginnt mit dem Steuerungshochlauf
Bei MD13113 $MN_PROFIBUS_TRACE_START=1 und MD13114  $MN_PROFIBUS_TRACE_START_EVENT=0x2 die Aufzeichnung beginnt beim Lebenszeichenverlust
</description>
</parameter>
<parameter number="13120" type="DWORD" dim="1">
<name>CONTROL_UNIT_LOGIC_ADDRESS</name>
<brief>Logische Adresse der SINAMICS-CU</brief>
<description>Nur bei PROFIBUS/PROFINET, SINAMICS:
Logische E/A-Adresse einer SINAMICS-CU (Control Unit) am PROFIBUS/PROFINET.
Die zyklische Kommunikation mit SINAMICS-CU wird durch die Übernahme der zugehörigen Slotadresse aus dem STEP7-Projekt aktiviert. Erst nach der Projektierung ist der Zugriff auf die Onboard I/Os möglich.
</description>
</parameter>
<parameter number="13140" type="DWORD" dim="0">
<name>PROFIBUS_ALARM_ACCESS</name>
<brief>Alarmverhalten von PROFIBUS/PROFINET-Antrieben beim Hochlauf</brief>
<description>Nur bei PROFIBUS/PROFINET:
Festlegung, zu welchem Zeitpunkt im Hochlauf die NCK-seitige
Auswertung/Weiterleitung von PROFIBUS/PROFINET-Teilnehmer-
Alarmen bzw. Warnungen (Feindiagnose-Meldungen) aktiv wird
Betrifft Antriebs-Alarme bzw. -Warnungen 380500, 380501
(bzw. die daraus im HMI erzeugten Alarme 200000ff usw.)
sowie die Antriebs-Safety-Alarme 27900.

Bedeutung der MD-Werte:
0 = Alarme/Warnungen werden sofort ausgewertet
1 = Alarme/Warnungen werden nicht ausgewertet
2 = Alarme werden erst nach dem Hochlauf ausgewertet, d.h.
    sobald HMI den Wert 2 aktiv neu gesetzt hat (NCK setzt den
    MD-Wert in jedem Hochlauf automatisch auf 1 zurück, HMI
    muss seine Bereitschaft zur Meldungs-Weiterverarbeitung
    durch Setzen des Wertes 2 explizit artikulieren)

Hinweis: Das MD beschränkt die Reichweite bzw. Wirksamkeit
         von MD13150 $MN_SINAMICS_ALARM_MASK

Default: Das Default-Verhalten der Anzeige der genannten
         Antriebsalarme verändert sich mit Einführung dieses
         MDs. Die Alarme werden nun standardmäßig nicht
         transportiert und angezeigt.
         Das frühere Default-Verhalten kann wieder hergestellt
         werden durch MD13140 $MN_PROFIBUS_ALARM_ACCESS=0.
</description>
</parameter>
<parameter number="13150" type="UDWORD" dim="0" display="HEX">
<name>SINAMICS_ALARM_MASK</name>
<brief>Stör- und Warnpufferausgabe für Sinamics aktivieren</brief>
<description>Nur bei PROFIBUS/PROFINET, speziell SINAMICS:
Relevant für Diagnose Sinamics:
Hinweis: Die Wirkung dieses MDs kann abhängig vom Wert in
         MD13140 $MN_PROFIBUS_ALARM_ACCESS verdeckt sein.

Maske zur Anzeige der Stör- und Warnpuffer von Sinamics-DOs

Bit gesetzt:		Alarme dieser DO-Gruppe werden ausgegeben
Bit nicht gesetzt:	Alarme dieser DO-Gruppe werden nicht ausgegeben

Bit	Hex.	Bedeutung
	Wert
====================================================================================
0: 	0x1 	Störungen der Control-Units ausgeben
1: 	0x2 	Störungen der Communication-Objects ausgeben
2: 	0x4 	Störungen der Drive-Controls ausgeben
3: 	0x8 	Störungen der Line-Modules ausgeben
4: 	0x10	Störungen der Terminal-Boards ausgeben
5: 	0x20	Störungen der Terminal-Modules ausgeben

8: 	0x100	Warnungen der Control-Units ausgeben
9: 	0x200	Warnungen der Communication-Objects ausgeben
10:	0x400	Warnungen der Drive-Controls ausgeben
11:	0x800	Warnungen der Line-Modules ausgeben
12:	0x1000	Warnungen der Terminal-Boards ausgeben
13:	0x2000	Warnungen der Terminal-Modules ausgeben
</description>
</parameter>
<parameter number="13160" type="DWORD" dim="1">
<name>SINAMICS_MAX_SLAVE_ADDRESS</name>
<brief>Höchste SINAMICS Slave Adresse</brief>
<description>Höchste pro Bus unterstützte Slave/Device Adresse
Alle Slaves/Devices mit einern höheren als der hier eingestellten Adresse werden NCK-seitig nicht berücksichtigt
Wert 0: keine Einschränkung
</description>
</parameter>
<parameter number="13200" type="BOOLEAN" dim="1">
<name>MEAS_PROBE_LOW_ACTIVE</name>
<brief>Polaritätswechsel des Messtasters</brief>
<description>Mit diesem MD wird die elektr. "Polarität" eines jeden angeschlossenen Messtasters angegeben.
Wert 0:
	(Standardvorbesetzung)
	nichtausgelenkter Zustand     0 V
	ausgelenkter Zustand         24 V
Wert 1:
	nichtausgelenkter Zustand    24 V
	ausgelenkter Zustand          0 V

Die programmierten Flanken des Tasters sind von der elektr. "Polarität" unabhängig sondern rein mechanisch zu verstehen! Die Programmierung einer positiven Flanke bedeutet immer der Übergang vom nicht ausgelenkten in den ausgelenkten Zustand. Die Programmierung einer negativen Flanke bedeutet immer der Übergang vom ausgelenkten in den nicht ausgelenkten Zustand.
</description>
</parameter>
<parameter number="13210" type="BYTE" dim="0">
<name>MEAS_TYPE</name>
<brief>Art des Messens bei dezentralen Antrieben</brief>
<description>Nur bei PROFIdrive:
Mit diesem MD wird die Messfunktion bei dezentralen Antrieben eingestellt.
Momentan hat das MD nur bei PROFIdrive-Antrieben eine Funktion.

Mit MEAS_TYPE = 0 gilt:
Es wird ein zentral an der NC angeschlossener Messtaster verwendet.
Da von den Gebern aber nur zyklisch Positionsistwerte kommen, wird die tatsächliche Messposition interpolatorisch ermittelt.

Mit MEAS_TYPE = 1 gilt:
Der Messtaster muss dezentral an ALLEN Antrieben verdrahtet werden.
Es wird dann die Messfunktionalität des Antriebs eingesetzt.
Dabei werden in der Hardware die tatsächlichen Geber-Istwerte zum Zeitpunkt der Messflanke abgespeichert.
Diese Methode ist genauer als mit MEAS_TYPE=0, erfordert aber einen höheren Verdrahtungsaufwand und Antriebe, die diese Messfunktionalität unterstützen (z.B. 611U).
</description>
</parameter>
<parameter number="13211" type="BYTE" dim="0">
<name>MEAS_CENTRAL_SOURCE</name>
<brief>Datenquelle zentralen Messen mit PROFIBUS/PROFINET-Antrieben</brief>
<description>Nur bei PROFIBUS/PROFINET:
Stellt ein, welches technische Verfahren verwendet wird, um beim zentralen Messen mit PROFIdrive-Antrieben die Zeitstempel zu erhalten.

Mit MEAS_CENTRAL_SOURCE = 1 gilt:
  Es werden NRK Zugriffe verwendet, um auf die OnBoard Messregister zuzugreifen. Dazu muss eine entsprechende Hardware vorhanden sein, die das erlaubt, z.B. bei 840Di mit MCI-Extension Board.

Mit MEAS_CENTRAL_SOURCE = 2 gilt:
  Es wird das SINAMICS DO1 Telegramm verwendet (Telegrammtyp 391 und 395), und zwar in der Variante des "zyklischen Messens" ohne Handshake.
  Dazu muss ein integrierter SINAMICS vorhanden sein, z.B. NCU 710.
  Beim Messen ohne Handshake müssen zwei Messtaster in den Antriebsparametern p0680 Index 0 und 1 vorhanden sein.

Mit MEAS_CENTRAL_SOURCE = 3 gilt:
  Es wird das SINAMICS DO1 Telegramm verwendet (Telegrammtyp 391), und zwar in der Variante mit Handshake. Dieses Verfahren ist fehlertolerant, erlaubt aber nur alle 4 PROFIBUS/PROFINET Zyklen eine Messflanke, ist also deutlich langsamer.
  Dazu muss ein integrierter SINAMICS vorhanden sein, z.B. NCU 710.

  Dieses MD hat nur eine Funktion, wenn MD13210 $MN_MEAS_TYPE == 0.
</description>
</parameter>
<parameter number="13220" type="DOUBLE" dim="1">
<name>MEAS_PROBE_DELAY_TIME</name>
<brief>Verzögerungszeit Taster-Auslenkung bis Erkennung</brief>
<description>Bei Tastern mit z.B. Funkübertragung kann die Tasterauslenkung erst verzögert in der NC erkannt werden.
Mit diesem MD wird die Verzögerungszeit der Übertragungsstrecke zwischen Taster-Auslenkung und Erkennung dieser Auslenkung in der Steuerung eingestellt.
Der Messwert wird steuerungsintern um die Strecke korrigiert, die der Fahrbewegung während dieser Zeit vor der Messung entspricht (Modellierung).
Da die Modellierung bei höheren Lagereglertakten nicht mehr mit der erwarteten Genauigkeit arbeitet, wird die Verzögerungszeit unabhängig vom eingegebenen Wert auf 31 Lagereglertakte begrenzt.
</description>
</parameter>
<parameter number="13230" type="BYTE" dim="0">
<name>MEAS_PROBE_SOURCE</name>
<brief>Messtaster-Simulation</brief>
<description>Die Simulation des Messtasters funktioniert nur wenn alle Achsen simuliert werden.
Wert =   0: Der Messtaster wird an der programmierten Endposition ausgelöst.
Wert = 1-8: Der Messtaster wird über digitalen Ausgang mit der Nummer=Wert ausgelöst.
Wert =   9: Reserviert
</description>
</parameter>
<parameter number="13231" type="DOUBLE" dim="0">
<name>MEAS_PROBE_OFFSET</name>
<brief>Messtaster-Verschiebung</brief>
<description>Die Schaltposition des Messtasters wird um den Wert vorgezogen.
Die Verschiebung wirkt nur bei simulierten Messtastern und MD13230 $MN_MEAS_PROBE_SOURCE=0.
</description>
</parameter>
<parameter number="14000" type="BYTE" dim="0">
<name>ENC_SSI_BAUD_RATE</name>
<brief>Baudrate für SSI-Absolutwertgeber</brief>
<description>Baudrate für SSI_Absolutwertgeber
Wert 0: 250kHz
Wert 1: 250kHz
Wert 2: 400kHz
Wert 3: 500kHz
Wert 4:   1MHz
</description>
</parameter>
<parameter number="14504" type="DWORD" dim="0">
<name>MAXNUM_USER_DATA_INT</name>
<brief>Anzahl der Anwenderdaten (INT)</brief>
<description>Anzahl der NC/PLC Anwenderdaten vom Typ INT
</description>
</parameter>
<parameter number="14506" type="DWORD" dim="0">
<name>MAXNUM_USER_DATA_HEX</name>
<brief>Anzahl der Anwenderdaten (HEX)</brief>
<description>Anzahl der NC/PLC Anwenderdaten (HEX)
</description>
</parameter>
<parameter number="14508" type="DWORD" dim="0">
<name>MAXNUM_USER_DATA_FLOAT</name>
<brief>Anzahl der Anwenderdaten (FLOAT)</brief>
<description>Anzahl der NC/PLC Anwenderdaten vom Typ FLOAT
</description>
</parameter>
<parameter number="14510" type="DWORD" dim="1">
<name>USER_DATA_INT</name>
<brief>Anwenderdatum (INT)</brief>
<description>Anwenderdatum, kann im PLC-Anwenderprogramm aus dem &lt;USER_DATA_BLOCK/&gt; (Anwenderdatenbaustein) gelesen werden.
</description>
</parameter>
<parameter number="14512" type="UDWORD" dim="1" display="HEX">
<name>USER_DATA_HEX</name>
<brief>Anwenderdatum (HEX)</brief>
<description>Anwenderdatum, kann im PLC-Anwenderprogramm aus dem &lt;USER_DATA_BLOCK/&gt; (Anwenderdatenbaustein) gelesen werden.
</description>
</parameter>
<parameter number="14514" type="DOUBLE" dim="1">
<name>USER_DATA_FLOAT</name>
<brief>Anwenderdatum (FLOAT)</brief>
<description>Anwenderdatum, kann im PLC-Anwenderprogramm aus dem &lt;USER_DATA_BLOCK/&gt; (Anwenderdatenbaustein) gelesen werden.
</description>
</parameter>
<parameter number="14516" type="UBYTE" dim="1" display="HEX">
<name>USER_DATA_PLC_ALARM</name>
<brief>Anwenderdatum (HEX)</brief>
<description>Projektierung der Alarmreaktionen der Anwender PLC-Alarme
Bit 0   NC Start gesperrt
Bit 1   Einlesesperre
Bit 2   Vorschubsperre für alle Achsen
Bit 3   NOT-HALT
Bit 4   PLC in Stopp
Bit 5   Alarmprotokoll
Bit 6   Definition für Alarm oder Meldung (1: Alarm, 0: Meldung
Bit 7   Löschen bei POWER ON
</description>
</parameter>
<parameter number="14518" type="UBYTE" dim="1" display="HEX">
<name>USER_DATA_PLC_ALARM_ASSIGN</name>
<brief>Anwenderdatum (HEX)</brief>
<description>Kanalzuordnung der projektierten, kanalspezifischen Alarmreaktionen der Anwender-PLC-Alarme aus MD14516 $MN_USER_DATA_PLC_ALARM
Bit 0 = 0  Keine Bedeutung für NC-Kanal 1
Bit 0 = 1  Geltungsbereich NC-Kanal 1
Bit 1 = 0  Keine Bedeutung für NC-Kanal 2
Bit 1 = 1  Geltungsbereich NC-Kanal 2
Bit 2 - 7  Reserviert
</description>
</parameter>
<parameter number="15700" type="STRING" dim="0">
<name>LANG_SUB_NAME</name>
<brief>Name für Substitutionsunterprogramm</brief>
<description>Name des Anwenderprogramms, das aufgrund einer mit MD30465 $MA_AXIS_LANG_SUB_MASK projektierten Substituierung aufgerufen wird.
Das Anwenderprogramm wird mit dem mit MD15702 $MN_LANG_SUB_PATH projektierten Pfad aufgerufen.
</description>
</parameter>
<parameter number="15702" type="BYTE" dim="0">
<name>LANG_SUB_PATH</name>
<brief>Aufrufpfad für Substitutionsunterprogramm</brief>
<description>Pfad, mit dem das mit MD15700 $MN_LANG_SUB_NAME eingestellte Anwenderprogramm aufgrund einer mit MD30465 $MA_AXIS_LANG_SUB_MASK projektierten Substituierung aufgerufen wird:

0:	/_N_CMA_DIR (Default)
1:	/_N_CUS_DIR
2:	/_N_CST_DIR
</description>
</parameter>
<parameter number="15710" type="STRING" dim="0">
<name>TCA_CYCLE_NAME</name>
<brief>Programmname für die Ersetzung des TCA-Befehls</brief>
<description>Programmname für das Ersetzungsprogramm bei Aufruf des TCA-Befehls.
Wird in einem Teileprogrammsatz der TCA-Befehl programmiert, so wird am Satzende das in MD15710 $MN_TCA_CYCLE_NAME definierte Unterprogramm aufgerufen. Das programmierte Werkzeug kann im Ersetzungsprogramm über die Systemvariablen $C_TS_PROG / $C_TS, die Duplo-Nummer über $C_DUPLO_PROG / $C_DUPLO und die Toolholder/Spindel-Nummer über $C_THNO_PROG / $C_THNO abgefragt werden. Die Systemvariable $C_TCA liefert im Ersetzungsprogramm den Wert TRUE. Da die Ersetzung am Satzende ausgeführt wird, liefert die Systemvariable $P_SUB_STAT im Ersetzungsprogramm den Wert 2.
Enthält MD15710 $MN_TCA_CYCLE_NAME einen Leerstring, ist die Ersetzung deaktiviert (Voreinstellung).
</description>
</parameter>
<parameter number="16800" type="STRING" dim="0">
<name>ROOT_KIN_ELEM_NAME</name>
<brief>Name des Root-Kettenlements</brief>
<description>Spezifiziert den Namen des Kettenelements, das bei einer Maschinenbeschreibung mittels kinematischer Ketten als einziges vom Nullpunkt des Weltkoordinatensystems ausgeht (Root-Kettenelement).
</description>
</parameter>
<parameter number="16900" type="UDWORD" dim="0" display="HEX">
<name>COLLISION_EXT_FUNCTION_MASK</name>
<brief>Parametrierung der externen Kollisionsprüfung</brief>
<description>Bitmaske zur Parametrierung der externen Kollisionsprüfung
</description>
</parameter>
<parameter number="16901" type="DOUBLE" dim="0">
<name>COLLISION_EXT_PREVIEW_TIME</name>
<brief>Vorschauzeit für externe Kollisionsprüfung</brief>
<description>Die Zeit gilt im laufenden Betrieb, sofern genug Daten für eine Vorhersage zur Verfügung stehen. Beim Start einer Bewegung startet die Bewegungsvorschau bei der aktuellen Position und liefert Vorhersagen in möglichst großen Schritten, solange bis die konfigurierte Vorschauzeit erreicht ist.
</description>
</parameter>
<parameter number="16902" type="DOUBLE" dim="0">
<name>COLLISION_EXT_PREVIEW_STEP</name>
<brief>Vorschau-Zeitschritt für externe Kollisionsprüfung</brief>
<description>Beim Start einer Bewegung startet die Bewegungsvorschau bei der aktuellen Position und liefert Vorhersagen in der konfigurierten Schrittweite, solange bis die Vorschauzeit COLLISION_EXT_PREVIEW_TIME erreicht ist.
</description>
</parameter>
<parameter number="16903" type="DOUBLE" dim="0">
<name>COLLISION_EXT_TIMEOUT</name>
<brief>Timeout für externe Kollisionsprüfung</brief>
<description>Timeout für die Kommunikation mit einem externen System zur Kollisionsvermeidung.
</description>
</parameter>
<parameter number="16904" type="DOUBLE" dim="0">
<name>COLLISION_EXT_STOP_TIME</name>
<brief>Maximale Bremszeit für externe Kollisionsvermeidung</brief>
<description>Wenn die externe Kollisionsvermeidung einen Stopp auslöst muss die Maschine in der eingestellten Zeit zum Stehen kommen (analog zum Verhalten bei STOP D).
</description>
</parameter>
<parameter number="16905" type="UDWORD" dim="0" display="DECIMAL">
<name>COLLISION_EXT_NUM_PACKETS</name>
<brief>Anzahl Vorschau-Pakete pro Ipotakt</brief>
<description>Pro Ipotakt werden ein Paket mit aktuellen Positionen und die konfigurierte Anzahl an Vorschaupaketen erzeugt.
</description>
</parameter>
<parameter number="16906" type="UDWORD" dim="0" display="HEX">
<name>COLLISION_EXT_CFG_MASK</name>
<brief>Parametrierung der externen Kollisionsprüfung</brief>
<description>Bitmaske zur Parametrierung der externen Kollisionsprüfung
</description>
</parameter>
<parameter number="17000" type="STRING" dim="1">
<name>EXTENSIONS_OF_BIN_FILES</name>
<brief>Extensions von Binärfiles</brief>
<description>Extensions von Files, die binär im passiven Filesystem des NCKs abgelegt werden.
Für diese Files gibt es keine Restriktionen bzgl. des Inhaltes.
Bei ASCII-Inhalten (z.B. HTM) sind beliebige Zeilenlängen möglich, dies ist für NC-Programme (z.B. MPF, SPF und DEF) nicht zulässig.
Jede Extension muss aus genau drei Großbuchstaben bestehen.
</description>
</parameter>
<parameter number="17200" type="DOUBLE" dim="1">
<name>GMMC_INFO_NO_UNIT</name>
<brief>Globale HMI Info (ohne physikalische Einheit)</brief>
<description>Systeminterne Funktion
Abbildung der globalen Anzeigemaschinendaten auf NCK-Maschinendaten
- $MNS_DISP_RES_MM            :: $MN_GMMC_INFO_NO_UNIT[0]
- $MNS_DISP_RES_INCH          :: $MN_GMMC_INFO_NO_UNIT[1]
- $MNS_DISP_RES_SPINDLE       :: $MN_GMMC_INFO_NO_UNIT[2]
- $MNS_ENABLE_COORDINATE_ACS  :: $MN_GMMC_INFO_NO_UNIT[3]
</description>
</parameter>
<parameter number="17201" type="BYTE" dim="1">
<name>GMMC_INFO_NO_UNIT_STATUS</name>
<brief>Globale HMI Statusinfo (ohne physikalische Einheit)</brief>
<description>Wert 0: Eintrag nicht belegt
Wert 1: Eintrag belegt
</description>
</parameter>
<parameter number="17300" type="DWORD" dim="0">
<name>CNC_LOCK_WARNING_TIME</name>
<brief>Vorwarnzeit für das Auslösen der CNC-Sperrfunktion</brief>
<description>Festlegung der Zeitspanne vor Auslösen der CNC-Sperrfunktion, ab der löschbare Hinweisalarme dieser Funktion ausgegeben werden sollen (Angabe in Tagen).
</description>
</parameter>
<parameter number="17400" type="STRING" dim="1" display="RESTRICTEDASCII">
<name>OEM_GLOBAL_INFO</name>
<brief>OEM Versionsinformation</brief>
<description>Eine für den Anwender frei verfügbare Versionsinformation
(wird im Versionsbild angezeigt)
Hinweis: Das MD17400 $MN_OEM_GLOBAL_INFO[0] wird bei Funktionen wie Logbuch, Lizensierung, etc. zur Speicherung der Maschinenidentität genutzt.
</description>
</parameter>
<parameter number="17500" type="DWORD" dim="0">
<name>MAXNUM_REPLACEMENT_TOOLS</name>
<brief>Maximale Anzahl Werkzeuge in einer Werkzeuggruppe</brief>
<description>Nur mit aktiver Funktion Werkzeugverwaltung (WZMG) oder Werkzeugüberwachungsfunktion (WZMO) von Bedeutung
Maximale Anzahl der Werkzeuge, die für den Systemparameter $TC_TP2 denselben Wert (Werkzeugname) haben.
0: es gibt keine Überwachung, d.h. es kann eine beliebige Anzahl Werkzeuge pro Gruppe geben.
1: es kann nur genau 1 Werkzeug mit einem bestimmten Werkzeugnamen geben.
2: es kann nur genau 2 Werkzeuge mit einem bestimmten Werkzeugnamen geben, also es kann 1 Ersatzwerkzeug geben.
n: es kann nur genau n Werkzeuge mit einem bestimmten Werkzeugnamen geben, also es kann n-1 Ersatzwerkzeuge geben.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK,
MD20310 $MC_TOOL_MANAGEMENT_MASK
</description>
</parameter>
<parameter number="17504" type="DWORD" dim="0">
<name>MAX_TOOLS_PER_MULTITOOL</name>
<brief>Funktion Multitool. Maximale Anzahl Werkzeugplätze pro Multitool.</brief>
<description>Funktion "Mehrere Werkzeuge auf einem Magazinplatz" (Multitool). Maximale Anzahl der Plätze bzw. Werkzeuge pro Multitool.
</description>
</parameter>
<parameter number="17510" type="UDWORD" dim="0" display="HEX">
<name>TOOL_UNLOAD_MASK</name>
<brief>Verhalten der Werkzeugdaten beim Entladen</brief>
<description>Beim Entladen eines WZs können gewisse Daten des WZs einstellbar mit festen Werten belegt werden.

Bit-Nr.	Bitwert	HEX	Bedeutung
0	0 		WZ-Status 'aktiv' bleibt unverändert.
	1	0x1	WZ-Status 'aktiv' wird gelöscht ($TC_TP8, Bit 0).
1	0		WZ-Status 'war im Einsatz' bleibt unverändert.
	1	0x2	WZ-Status 'war im Einsatz' wird gelöscht ($TC_TP8, Bit 7)
2	0		WZ-Parameter $TC_TP10 bleibt unverändert.
	1	0x4	WZ-Parameter $TC_TP10 wird auf den Wert Null gesetzt. D.h. die WZ-Ersatz-Wechselstrategie wird rückgesetzt.
3	0		WZ-Parameter $TC_TP11 bleibt unverändert.
	1	0x8	WZ-Parameter $TC_TP11 wird auf den Wert Null gesetzt. D.h. die Zuordnung zur WZ-Untergruppe wird aufgelöst.
</description>
</parameter>
<parameter number="17515" type="UDWORD" dim="0" display="HEX">
<name>TOOL_RESETMON_MASK</name>
<brief>Verhalten der Werkzeugdaten bei RESETMON</brief>
<description>Mit dem RESETMON-Befehl wird im 5. Parameter angegeben, welcher Werkzeug-Status zurückgesetzt werden soll. Wird der 5. Parameter weggelassen, wird er durch den Wert aus diesem MD ersetzt. Beim PI-Dienst "_N_TRESMON" wird immer mit diesem Wert gearbeitet.
Die Bits sind dabei so belegt, wie die Bits im Werkzeug-Zustand $TC_TP8[x].

Bit-Nr.: 0 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "aktiv" bleibt unverändert
Bit-Nr.: 0 Bitwert: 1 hexadezimaler Wert: 'H1'
Bedeutung: WZ-Status "aktiv" wird gelöscht

Bit-Nr.: 1 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "freigegeben" bleibt unverändert
Bit-Nr.: 1 Bitwert: 1 hexadezimaler Wert: 'H2'
Bedeutung: WZ-Status "freigegeben" wird gesetzt

Bit-Nr.: 2 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "gesperrt" bleibt unverändert
Bit-Nr.: 2 Bitwert: 1 hexadezimaler Wert: 'H4'
Bedeutung: WZ-Status "gesperrt" wird gelöscht, wenn Überwachungsdaten dies zulassen und der 4. Parameter entsprechend gesetzt ist.

Bit-Nr.: 3 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "vermessen" bleibt unverändert
Bit-Nr.: 3 Bitwert: 1 hexadezimaler Wert: 'H8'
Bedeutung: WZ-Status "vermessen" wird gesetzt.

Bit-Nr.: 4 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "Vorwarngrenze" bleibt unverändert
Bit-Nr.: 4 Bitwert: 1 hexadezimaler Wert: 'H10'
Bedeutung: WZ-Status "Vorwarngrenze" wird gelöscht, wenn Überwachungsdaten dies zulassen und der 4. Parameter gesetzt ist.

Bit-Nr.: 5 nicht erlaubt (WZ-Status "Werkzeug im Wechsel")
Bit-Nr.: 6 nicht erlaubt (WZ-Status "Werkzeug ist festplatzcodiert")

Bit-Nr.: 7 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "war im Einsatz" bleibt unverändert
Bit-Nr.: 7 Bitwert: 1 hexadezimaler Wert: 'H80'
Bedeutung: WZ-Status "war im Einsatz" wird gelöscht

Bit-Nr.: 8 Bitwert: 0 nicht erlaubt (WZ-Status "ist im Rücktransport")

Bit-Nr.: 9 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "gesperrt wird ignoriert" bleibt unverändert
Bit-Nr.: 9 Bitwert: 1 hexadezimaler Wert: 'H200'
Bedeutung: WZ-Status "gesperrt wird ignoriert" wird gelöscht

Bit-Nr.: 10 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: WZ-Status "zu entladen" bleibt unverändert
Bit-Nr.: 10 Bitwert: 1 hexadezimaler Wert: 'H400'
Bedeutung: WZ-Status "zu entladen" wird gelöscht

Bit-Nr.: 11 nicht erlaubt (WZ-Status "zu beladen")
Bit-Nr.: 12 Bitwert: 0 nicht erlaubt (WZ-Status "Stamm-Werkzeug")
Bit-Nr.: 13, ff nicht erlaubt (ist reserviert)

Default-Einstellung entspricht bisherigem Verhalten.
Die nicht erlaubten Bits werden ausgefiltert und von Limit-Maske ausgeblendet.
Hier nicht definierte Bits werden beim Schreiben des Maschinendatums ignoriert.
</description>
</parameter>
<parameter number="17520" type="UDWORD" dim="0" display="HEX">
<name>TOOL_DEFAULT_DATA_MASK</name>
<brief>Neues Werkzeug anlegen: Datenvorbelegung</brief>
<description>Bei Neudefinition eines Werkzeugs (Bits 0, 1, 2), oder der Neudefinition der Magazinplätze (Bit 3) können gewisse Daten des einstellbar mit festen Defaultwerten belegt werden. Bit 4 kann den Magazinplatzzustand 'Überlappung  erlaubt' ('H2000') an den Wert des Magazinplatzzustands 'gesperrt' ('H1') koppeln.  Damit können einfache Anwendungen davor bewahrt werden, sich mit Daten zu beschäftigen, die nicht zwingend mit individuellen Werten belegt werden müssen.

Bit-Nr.: 0 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Defaultwert von WZ-Status ($TC_TP8), Bit1=0='nicht freigegeben'
Bit-Nr.: 0 Bitwert: 1 hexadezimaler Wert: 'H1'
Bedeutung: Defaultwert von WZ-Status ($TC_TP8), Bit1=1='freigegeben'

Bit-Nr.: 1 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Defaultwert von WZ-Status ($TC_TP8), Bit6=0='nicht festplatzcodiert'
Bit-Nr.: 1 Bitwert: 1 hexadezimaler Wert: 'H2'
Bedeutung: Defaultwert von WZ-Status ($TC_TP8), Bit6=1='festplatzcodiert'

Bit-Nr.: 2 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Erst mit dem expliziten Schreibbefehl für den WZ-Namen wird das WZ in die WZ-Gruppe aufgenommen. Erst danach kann es über Programmierung eingewechselt werden.
Bit-Nr.: 2 Bitwert: 1 hexadezimaler Wert: 'H4'
Bedeutung: Das WZ wird bei der Neudefinition automatisch in die WZ-Gruppe mit aufgenommen. (Damit kann der WZ-Wechsel mit dem Defaultnamen ('t'=t-Nr.) durchgeführt werden.
Dem Anwender kann der Begriff 'WZ-Name' ($TC_TP2) verborgen werden. (Nur sinnvoll, wenn nicht mit Ersatz-WZen gearbeitet wird; bzw. wenn der WZ-Name nicht explizit geschrieben wird. Denn dabei könnten sich Dateninkonsistenz-probleme ergeben.)

Bit-Nr.: 3 Bitwert: 0 nur mit TMMG: Defaultwert von Platztyp ($TC_TP7)=9999=nicht definiert
Bit-Nr.: 3 Bitwert: 1 hexadezimaler Wert: 'H8'
Bedeutung nur mit TMMG: Defaultwert von Platztyp ($TC_TP7)=1 und damit verbunden Defaultwert von Magazinplatztyp ($TC_MPP2)=1. Damit können alle Magazinplätze alle Werkzeuge aufnehmen.

Bit-Nr.: 4 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Nur mit TMMG + aktiver Nebenplatzbetrachtung. Mit dem Setzen/Rücksetzen des Magazinplatzzustands 'gesperrt' bleibt der Magazinplatzzustand 'Überlappung erlaubt' unverändert.
Bit-Nr.: 4 Bitwert: 1 hexadezimaler Wert: 'H10'
Bedeutung: Nur mit TMMG + aktiver Nebenplatzbetrachtung. Mit dem Setzen/Rücksetzen des Magazinplatzzustands 'gesperrt' wird automatisch der Zustand 'Überlappung  erlaubt' gesetzt/rückgesetzt.
</description>
</parameter>
<parameter number="17530" type="UDWORD" dim="0" display="HEX">
<name>TOOL_DATA_CHANGE_COUNTER</name>
<brief>Werkzeug-Datenänderung für HMI kennzeichnen</brief>
<description>HMI-Anzeigeunterstützung. Mit dem Datum ist es möglich, einzelne Daten explizit in den BTSS-Variablen (Baustein C/S) toolCounter, toolCounterC, toolCounterM zu berücksichtigen bzw. nicht zu berücksichtigen.
Bit-Nr.: 0 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Wertänderungen des WZ-Status ($TC_TP8) werden in toolCounterC nicht berücksichtigt
Bit-Nr.: 0 Bitwert: 1 hexadezimaler Wert: 'H1'
Bedeutung: Wertänderungen des WZ-Status ($TC_TP8) werden in toolCounterC berücksichtigt

Bit-Nr.: 1 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Wertänderungen der WZ-Reststückzahl ($TC_MOP4) werden in toolCounterC nicht berücksichtigt
Bit-Nr.: 1 Bitwert: 1 hexadezimaler Wert: 'H2'
Bedeutung: Wertänderungen der WZ-Reststückzahl ($TC_MOP4) werden in toolCounterC berücksichtigt

Bit-Nr.: 2 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Wertänderungen der WZ-Daten werden im WZ-Datenänderungs-dienst nicht berücksichtigt
Bit-Nr.: 2 Bitwert: 1 hexadezimaler Wert: 'H4'
Bedeutung: Wertänderungen der WZ-Daten werden im WZ-Datenänderungs-dienst berücksichtigt

Bit-Nr.: 3 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Wertänderungen der Magazin-Daten werden im WZ-Datenänderungsdienst nicht berücksichtigt
Bit-Nr.: 3 Bitwert: 1 hexadezimaler Wert: 'H8'
Bedeutung: Wertänderungen der Magazin-Daten werden im WZ-Datenänderungsdienst berücksichtigt

Bit-Nr.: 4 Bitwert: 0 hexadezimaler Wert: -
Bedeutung: Wertänderungen der ISO-Tool-Korrektur-Daten werden im WZ Datenänderungsdienst nicht berücksichtigt
Bit-Nr.: 4 Bitwert: 1 hexadezimaler Wert: 'H10' Wertänderungen der ISO-Tool-Korrektur-Daten werden im WZ Datenänderungsdienst berücksichtigt.

Die Angaben"Wertänderungen des WZ-Status" und "Wertänderungen der WZ-Reststückzahl" beziehen sich auf Werteänderungen, die durch interne Vorgänge in der NC bewirkt werden, als auch auf Werteänderungen, die durch Schreiben der entsprechenden Systemvariablen verursacht werden.
</description>
</parameter>
<parameter number="17540" type="UDWORD" dim="0" display="HEX">
<name>TOOLTYPES_ALLOWED</name>
<brief>Erlaubte Werkzeugtypen</brief>
<description>Festlegung der in NCK erlaubten WZ-Typen (siehe $TC_DP1) bei der WZ-Korrekturanwahl. D.h. es können zwar WZe beliebiger WZ-Typen nach NCK geladen werden; aber nur die hier festgelegten WZ-Typen dürfen im Korrektur bestimmenden WZ definiert sein. Ein Bitwert = 1 bedeutet, dass der genannte WZ-Typbereich für die Korrekturanwahl erlaubt ist. Ein Bitwert = 0 bedeutet, dass der genannte WZ-Typbereich bei einer versuchten Korrekturanwahl einer Schneide diesen Typs mit einem korrekturfähigen Alarm abgelehnt wird. Der spezielle Wert = 0, 9999 für den WZ-Typ bedeutet "nicht definiert". WZ-Korrekturen mit diesem Wert für den WZ-Typ können generell nicht angewählt werden.
Bit-Nr.: 0 Wert: 0x1 Bedeutung: Werkzeugtypen 1 bis 99 erlaubt
Bit-Nr.: 1 Wert: 0x2 Bedeutung: Werkzeugtypen 100 bis 199 erlaubt (Fräswerkzeuge)
Bit-Nr.: 2 Wert: 0x4 Bedeutung: Werkzeugtypen 200 bis 299 erlaubt (Bohrwerkzeuge)
Bit-Nr.: 3 Wert: 0x8 Bedeutung: Werkzeugtypen 300 bis 399 erlaubt
Bit-Nr.: 4 Wert: 0x10 Bedeutung: Werkzeugtypen 400 bis 499 erlaubt (Schleifwerkzeuge)
Bit-Nr.: 5 Wert: 0x20 Bedeutung: Werkzeugtypen 500 bis 599 erlaubt (Drehwerkzeuge)
Bit-Nr.: 6 Wert: 0x40 Bedeutung: Werkzeugtypen 600 bis 699 erlaubt
Bit-Nr.: 7 Wert: 0x80 Bedeutung: Werkzeugtypen 700 bis 799 erlaubt
Bit-Nr.: 8 Wert: 0x100 Bedeutung: Werkzeugtypen 800 bis 899 erlaubt
Bit-Nr.: 9 Wert: 0x200 Bedeutung: Werkzeugtypen 900 bis 999 erlaubt

Korrespondierend mit:
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="17600" type="DWORD" dim="0">
<name>DEPTH_OF_LOGFILE_OPT</name>
<brief>Tiefe der Logspeicheroptimierung bei REORG</brief>
<description>Tiefe der Speicheroptimierung in der REORG-Logdatei
(=Suchtiefe, um zu erkennen, ob ein zu schreibender Parameter schon in der REORG-Logdatei enthalten ist).
Man kann den Wert des Maschinendatums vergrößern, wenn beim Programmablauf der Alarm 15110 auftritt und man diesen vermeiden will.
(Alternativ kann man die Größe der REORG-Logdatei selbst vergrößern mit MD28000 $MC_MM_REORG_LOG_FILE_MEM, falls man dazu das benötigte Zugriffsrecht besitzt. Das Verfahren ist im allgemeinen vorzuziehen.)

Wert
0 =     keine Optimierung
	D.h. jede Schreiboperation führt zu einem Eintrag in der REORG-Logdatei. Das Schreiben eines Variablenwertes ist damit auf Kosten des Speicherbedarfs sehr zeiteffizient.
0&lt; n &lt;= Maximalwert
	Das Schreiben eines neuen Variablenwertes führt dazu, dass vor dem Absichern des alten Variablenwertes in der REORG-Logdatei die vergangenen n Schreiboperationen, die eingetragen wurden (höchstens aber bis zum vorigen ausführbaren Satz) darauf hingeprüft werden, ob der neu zu schreibende Parameter schon einmal geschrieben wurde. Wenn ja, dann findet kein erneuter Eintrag in die REORG-Logdatei statt.
	Wenn nein, dann findet der Eintrag statt. Das Schreiben eines Variablenwertes kann damit auf Kosten des Zeitbedarfs sehr speichereffizient gestaltet werden.

Beispiel:
Es sei MD17600 $MN_DEPTH_OF_LOGFILE_OPT = 5 und eine typische Programmsequenz sei:

x10     ; ausführbarer NC-Satz
r1=1    ; seit x10 der erste Schreibbefehl
        ; -&gt; speichere alten Wert in Logdatei ab. 1. Eintrag
r2=1    ; stelle fest, dass r2 noch nicht enthalten ist
        ; -&gt; speichere alten Wert in Logdatei ab. 2. Eintrag
r3=1    ; stelle fest, dass r3 noch nicht enthalten ist
        ; -&gt; speichere alten Wert in Logdatei ab. 3. Eintrag
r4=1    ; stelle fest, dass r4 noch nicht enthalten ist
        ; -&gt; speichere alten Wert in Logdatei ab. 4. Eintrag
r5=1    ; stelle fest, dass r5 noch nicht enthalten ist
        ; -&gt; speichere alten Wert in Logdatei ab. 5. Eintrag
r6=1    ; stelle fest, dass r6 noch nicht enthalten ist
        ; -&gt; speichere alten Wert in Logdatei ab. 6. Eintrag
r2=1    ; stelle fest, dass r2 schon enthalten ist
        ; (ist 5.ältester Eintrag) -&gt; kein erneutes Abspeichern
r3=1    ; stelle fest, dass r3 schon enthalten ist
        ; (ist 4.ältester Eintrag) -&gt; kein erneutes Abspeichern
r1=2    ; wegen MD17600 $MN_DEPTH_OF_LOGFILE_OPT = 5 wird nicht erkannt,
        ; dass r1 schon enthalten ist
        ; (ist 6.ältester Eintrag) -&gt; speichere alten Wert in Logdatei
        ; ab. 7. Eintrag
x20     ; ausführbarer NC-Satz
r1=3    ; seit x20 der erste Schreibbefehl
        ; -&gt; speichere alten Wert in Logdatei ab. 1. Eintrag
r1=4    ; stelle fest, dass r1 schon enthalten ist
        ; (nur ein Eintrag) -&gt; kein erneutes Abspeichern

Die Einstellung des MDs ist besonders dann von Vorteil, wenn wenige verschiedene Parameter häufig
(z.B. in einer Schleife) beschrieben werden und dabei der Alarm 15110 auftritt.
</description>
</parameter>
<parameter number="17610" type="DWORD" dim="1">
<name>DEPTH_OF_LOGFILE_OPT_PF</name>
<brief>Tiefe der PowerFail Logspeicheroptimierung</brief>
<description>Tiefe der Speicheroptimierung in der PowerFail-Logdatei (=Suchtiefe, um zu erkennen,
ob ein zu schreibender Parameter schon in der PowerFail-Logdatei enthalten ist).
Man kann den Wert des Maschinendatums vergrößern, wenn beim Programmablauf
der Alarm 15120 auftritt und man diesen vermeiden will.

(Alternativ kann man die Größe der PowerFail-Logdatei selbst vergrößern
mit MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM, falls man dazu das benötigte Zugriffsrecht besitzt
und der benötigte Speicher zur Verfügung steht.

Wert
0       = wirkt wie der Wert 1.
          Das Schreiben eines Variablenwertes ist damit auf Kosten des
          Speicherbedarfs sehr zeiteffizient.

0&lt; n &lt;= Maximalwert
        = Das Schreiben eines neuen Variablenwertes führt dazu, dass vor dem
          Absichern des neuen Variablenwertes in der PowerFail-Logdatei die
          vergangenen n Schreiboperationen, die eingetragen wurden, darauf hin geprüft
          werden, ob der neu zu schreibende Parameter schon schon mal geschrieben wurde.
          Wenn ja, dann findet kein erneuter Eintrag in die PowerFail-Logdatei statt,
          sondern der alte Wert wird durch den neuen überschrieben.
          Wenn nein, dann findet der Eintrag statt.
          Das Schreiben eines Variablenwertes kann damit auf Kosten des
          Zeitbedarfs sehr speichereffizient gestaltet werden.

Ändern der Daten kann den Zeitbedarf der vorliegenden Applikation verkürzen/erhöhen.
Ändern der Daten kann die zur Verfügung stehenden Log-Puffer schneller/langsamer füllen.
Häufiges Auftreten des Alarms 15120 -&gt; Werte zu Index=0,1,2 erhöhen.
Den Wert welchen Indices man ändern muss, kann dem Parameter des Alarms 15120 entnommen werden:
ist es der Wert zu MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM[0], dann den Wert zu Index 0 erhöhen;
bzw. MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM[0] selbst erhöhen.
Index Bedeutung
0     Suchtiefe im Puffer des Vorlaufs
1     Suchtiefe im Puffer für Datenänderungen im Rahmen des Werkzeugwechsels
2     Suchtiefe im Puffer für Datenänderungen des Hauptlaufs (speziell Synchronaktionen)
</description>
</parameter>
<parameter number="17900" type="UDWORD" dim="0" display="HEX">
<name>VDI_FUNCTION_MASK</name>
<brief>Einstellung zu VDI-Signalen</brief>
<description>Einstellungen für VDI-Signale:
Bit 0 == 0:
	Die VDI-Signale Fahrbefehl + / Fahrbefehl - werden bereits ausgegeben, wenn eine Fahranforderung besteht (default).
Bit 0 == 1:
	Die VDI-Signale Fahrbefehl + / Fahrbefehl - werden nur ausgegeben, wenn die Achse tatsächlich fährt.
</description>
</parameter>
<parameter number="17950" type="BOOLEAN" dim="0">
<name>IS_AUTOMATIC_MEM_RECONFIG</name>
<brief>System: Automatische Speicherrekonfiguration</brief>
<description>

Wert = 0 : Beim Ändern von Maschinendaten, die den gepufferten Speicher neu definieren, wird generell durch Alarm 4400 darauf hingewiesen, dass damit beim nächsten Softwarehochlauf die Anwenderdaten gelöscht werden.
Wert = 1 : Beim Ändern von Maschinendaten, die den gepufferten Speicher neu definieren, wird in der Regel Alarm 4400 nicht erzeugt. D.h. die Daten bleiben beim  folgenden Softwarehochlauf erhalten.

Der vorbelegte Wert ist modellspezifisch gewählt und darf in aller Regel nicht verändert werden.
</description>
</parameter>
<parameter number="17951" type="STRING" dim="0">
<name>AUTOMATIC_MEM_RECONFIG_FILE</name>
<brief>Pfad und Dateiname für interne Datensicherung</brief>
<description>Filename mit Pfadangabe unter dem bei Rekonfiguration des persistenten Speichers die Datensicherungsdatei abgelegt wird.
</description>
</parameter>
<parameter number="18000" type="BOOLEAN" dim="0">
<name>VDI_UPDATE_IN_ONE_IPO_CYCLE</name>
<brief>Aktualisierung der PLC-Nahtstelle</brief>
<description>1:	vollständiges Lesen/Schreiben der VDI-Nahtstelle in einem Interpolationstakt
0:	vollständiges Lesen/Schreiben der VDI-Nahtstelle in zwei Interpolationstakten
</description>
</parameter>
<parameter number="18030" type="STRING" dim="1" readonly="true">
<name>HW_SERIAL_NUMBER</name>
<brief>Hardware-Seriennummer</brief>
<description>In diesem MD werden im Hochlauf der Steuerung die einen eindeutige Hardware-Seriennummer abgelegt
- für Baugruppen der Powerline-Reihe ist das die Seriennummer der NCU-Baugruppe
- für Baugruppen der Solutionline-Reihe ist das die Seriennummer der CF-Card bzw. für PC-Based-Systeme die Unikatsnummer der MCI-Baugruppe

Dieses Datum ist nicht schreibbar.
</description>
</parameter>
<parameter number="18040" type="STRING" dim="1" readonly="true">
<name>VERSION_INFO</name>
<brief>Versions- und Produktinformationen</brief>
<description>Versions- und Modell-Informationen der Systemsoftwarekomponente NCK
[0]:'SW-Komponentenname[SI Version]'                         - Wert: "Numeric Control NCK" (kann ab "trol NCK" mit 'SIxxx' überschrieben sein. 'SI' steht für Safety Integrated, 'xxx' für die SI Version)
[1]:'Version (und Datum der NCK Installation auf dem Zielsystem)'
[2]:'Datum und Uhrzeit der NCK-Programmerzeugung'
[3]:'Name des Modells und Submodells'                        - Werte: 808d-me42, ... 828d-me42, ... 840DSL731,... 840D732, ...
[4]:'HW-Typ'                                                 - Werte für NCK in NCU: IDC, SOC2, ... Simulations NCK: PC (Windows), PC (Linux), ... HOST-Entwicklungs NCK: HOST development
[5]:'Produktart'                                             - Werte: machine tool, simulation, simulation development
[6]:'Sub-Skalierung 1'                                       - Werte: Dateiname. Verschiedene Varianten eines Modells können vom Modell abweichende Daten(-eigenschaften) haben.
[7]:'Sub-Skalierung 2'                                       - Werte: Dateiname. Verschiedene Varianten eines Modells können vom Modell abweichende Daten(-eigenschaften) haben.
[8]:'Sub-Skalierung 3'                                       - Werte: Dateiname. Verschiedene Varianten eines Modells können vom Modell abweichende Daten(-eigenschaften) haben.
Für Indices 6,7,8 gilt: Voraussetzung für einen Werteintrag ist, dass die Datei beim Start von NCK existiert.
Beispiel für 840dsl auf NCU HW:
[0]:"Numeric Control NCK" (ohne NC based Safety Integrated)
[0]:"Numeric ControSI112" (mit NC based Safety Integrated)
[1]:"112.00.00 "
[2]:"22/02/16 09:28:03"
[3]:"840DSL731"
[4]:"SOC2"
[5]:"machine tool"
[6]:""
[7]:""
[8]:""
Beispiel für '840d virtuelle Inbetriebnahme' (ein Simulationsprodukt)  auf Windows Rechner:
[0]:"Numeric Control NCK"  (ohne Safety Integrated)
[1]:"112.00.00"
[2]:"31/01/16 08:58:43"
[3]:"840D732"
[4]:"PC (Windows)"
[5]:"simulation"
[6]:"840evoVC_addon"
[7]:""
[8]:""
</description>
</parameter>
<parameter number="18042" type="STRING" dim="1" readonly="false">
<name>CC_VERSION_INFO</name>
<brief>Compile-Zyklus Version</brief>
<description>Versionskennungen der Compile-Zyklen
</description>
</parameter>
<parameter number="18045" type="BYTE" dim="0" readonly="true">
<name>EES_MODE_INFO</name>
<brief>Modus, in dem die Funktion EES arbeitet.</brief>
<description>Modus, in dem die Funktion "Execution from External Storage" arbeitet:
Bit0(LSB) = 1
    CNC Anwenderspeicher erweitert (lokales EES aktiv)

Bit1 = 1
    Abarbeiten vom externen Speicher (globales EES aktiv)

Bit2 = 1
    Es ist ein globaler Teileprogrammspeicher auf einem externen Speicher eingerichtet.

Siehe auch:
  OD19730 $ON_HMI_FUNCTION_MASK[0] Bit 5 "CNC Anwenderspeicher erweitert"
  OD19334 $ON_SYSTEM_FUNCTION_MASK Bit 9 "Abarbeiten vom externen Speicher"
  OD19334 $ON_SYSTEM_FUNCTION_MASK Bit 12 "zusätzlicher HMI-Anwenderspeicher auf CF-Card der NCU"
</description>
</parameter>
<parameter number="18046" type="UBYTE" dim="0" display="HEX" readonly="false">
<name>DSF_MODE_INFO</name>
<brief>DSF Informationen</brief>
<description>DSF Informationen:
Bit0(LSB) = 1
    DSF verfügbar
</description>
</parameter>
<parameter number="18050" type="DWORD" dim="0" readonly="true">
<name>INFO_FREE_MEM_DYNAMIC</name>
<brief>Anzeigedatum des freien ungepufferten Speichers</brief>
<description>Das Datum dient zur
a)	herstellerseitigen Vorbelegung der Speichergröße [ Bytes ], die dem Anwender nach Kaltstart pro Kanal zur Verfügung steht.
b)	Anzeige des verfügbaren ungepufferten Speichers [ Bytes ]
	Das Datum kann nicht beschrieben werden.

Der Inhalt des Datums gibt an, wieviel ungepufferter Speicher für die Vergrößerung ungepufferter Anwenderdatenbereiche über MD aktuell pro Kanal zur Verfügung steht.
Vor Vergrößerung von z.B. Anzahl der LUDs, Anzahl der Funktionsparameter oder Größe des IPO-Puffers, sollte überprüft werden, ob der verfügbare Speicher dafür ausreicht.
Evtl. schrittweise vorgehen:
- um 1 vergrößern, (alten) Wert merken
- NCK-Hochlauf (= 'Warmstart' bzw. NCK-Reset), neuen Wert ablesen
- Speicherbedarf = neuer Wert - alter Wert

Beim ersten NCK-Hochlauf bzw. bei Kaltstart der Steuerung (=löschen der Anwenderdaten) wird das MD18210 $MN_MM_USER_MEM_DYNAMIC von der NCK-SW derart eingestellt, dass sich für MD18050 $MN_INFO_FREE_MEM_DYNAMIC mindestens der voreingestellte Wert ergibt.
D.h. falls der Ausgangswert von MD18210 $MN_MM_USER_MEM_DYNAMIC zu klein ist, wird der Wert automatisch vergrößert.
Für mehrkanalige Systeme gilt zusätzlich:
- der voreingestellte Wert gilt pro möglichem Kanal. D.h. bei möglichen zehn Kanälen wird das MD18210 $MN_MM_USER_MEM_DYNAMIC von der NCK-SW derart eingestellt, dass sich für MD18050 $MN_INFO_FREE_MEM_DYNAMIC mindestens der 'voreingestellte Wert * zehn' ergibt.
- Beim Aktivieren eines Kanals wird das MD18210 $MN_MM_USER_MEM_DYNAMIC gegebenenfalls automatisch derart vergrößert, dass weiterhin der zum Aktivierungszeitpunkt freie Speicher frei sein wird (sofern der Speicherausbau dies zulässt), nach dem der Kanal aktiv geworden ist.
- Die Aktivierung der maximal möglichen Achsanzahl wird gewährleistet, indem das MD18210 $MN_MM_USER_MEM_DYNAMIC gegebenenfalls derart vergrößert wird, dass weiterhin der zum Aktivierungszeitpunkt freie Speicher frei sein wird (sofern der Speicherausbau dies zulässt), nach dem die Achse aktiv geworden ist.

'Gegebenenfalls' in den vorigen Sätzen heißt, dass die automatische Anpassung stattfindet, falls mit den aktuellen Werten von MD18210 $MN_MM_USER_MEM_DYNAMIC/$MN_INFO_FREE_MEM_DYNAMIC der Kanal/die Achse nicht aktiviert werden könnte.
</description>
</parameter>
<parameter number="18060" type="DWORD" dim="0" readonly="true">
<name>INFO_FREE_MEM_STATIC</name>
<brief>Anzeigedatum des freien gepufferten Speichers</brief>
<description>Der vorbelegte Wert gibt an, wieviel Bytes mindestens frei sind für den Anwender, wenn NCK mit 'Kaltstart' hochläuft.

Der Inhalt des Datums gibt an, wieviel gepufferter Speicher für die Konfiguration des Aktiven- und Passiven Filesystems und weiterer Funktionen zum Hochlaufzeitpunkt noch zur Verfügung steht.
z.B. MD18082 $MN_MM_NUM_TOOL
z.B. MD18150 $MN_MM_GUD_VALUES_MEM
z.B. MD18352 $MN_MM_U_FILE_MEM_SIZE
z.B. MD38000 $MA_MM_ENC_COMP_MAX_POINTS)

Beim ersten NCK-Hochlauf bzw. bei Kaltstart der Steuerung (=löschen der Anwenderdaten) wird das MD18230 $MN_MM_USER_MEM_BUFFERED von der NCK-SW derart eingestellt, dass sich für MD18060 $MN_INFO_FREE_MEM_STATIC mindestens der voreingestellte Wert ergibt.

Maschinendaten zur Konfiguration von Funktionen, die persistenten Speicher benötigen (Werkzeuge, GUDs, Kompensationen, ...), können soweit vergrößert werden, bis dieser Speicher aufgebraucht ist.
</description>
</parameter>
<parameter number="18070" type="DWORD" dim="0" readonly="true">
<name>INFO_FREE_MEM_DPR</name>
<brief>Anzeigedatum des freien Speichers im DUAL-PORT-RAM</brief>
<description>Ausgabe des verfügbaren Speichers im Dual Port RAM [ Bytes ]
Das Datum kann nicht beschrieben werden.
</description>
</parameter>
<parameter number="18072" type="DWORD" dim="0" readonly="true">
<name>INFO_FREE_MEM_CC_MD</name>
<brief>Anzeige freier Speicher CC-MD-Speicher</brief>
<description>Ausgabe des verfügbaren Speichers für Compile Cyclen-MD's [ Bytes ]
Das Datum kann nicht beschrieben werden.
</description>
</parameter>
<parameter number="18074" type="DWORD" dim="1">
<name>MM_TOOL_MANAGEMENT_TRACE_SZ</name>
<brief>Maximale Größe der Werkzeugverwaltung-Diagnose-Ringpuffer</brief>
<description>Anzahl der Einträge in die Diagnose-Ringpuffer der Werkzeugverwaltung.
Index 0 = Puffergröße des IPO-Trace.
Index 1 = Puffergröße des Prep-Trace.

In jedem Kanal befinden sich eigene IPO-Trace-Puffer und nur in Kanal 1 ist ein Prep-Trace-Puffer.
Die Speicher werden nur zugewiesen, wenn Bit 0 (0x0001) beim Warmstart auf EIN steht, und zwar in beiden MD18080 $MN_MM_TOOL_MANAGEMENT_MASK und MD20310 $MC_TOOL_MANAGEMENT_MASK für jeden Kanal.

Trace-Daten werden in die Puffer geschrieben, wenn Bit 13 (0x2000) auf EIN steht im MD20310 $MC_TOOL_MANAGEMENT_MASK für jeden Kanal.
</description>
</parameter>
<parameter number="18075" type="DWORD" dim="0">
<name>MM_NUM_TOOLHOLDERS</name>
<brief>Max. Anzahl Werkzeughalter pro TOA</brief>
<description>Maximale Anzahl definierbarer Werkzeughalter pro TO-Bereich.
Die Adresserweiterung e der Befehle Te=t, Me=6 (*) ist die Nummer des Werkzeughalters.
t=T-Nummer/Werkzeugname - je nach Funktion, die in NCK aktiviert ist.
(*) falls gilt: MD22550 $MC_TOOL_CHANGE_MODE=1 und MD22560 $MC_TOOL_CHANGE_M_CODE=6

Bei Fräsmaschinen ist der Werkzeughalter in der Regel eine Spindel.
siehe dazu auch MD20090 $MC_SPIND_DEF_MASTER_SPIND.
Bei Drehmaschinen ist der Werkzeughalter in der Regel keine Spindelachse.
siehe dazu auch MD20124 $MC_TOOL_MANAGEMENT_TOOLHOLDER.
Es sollte dann sinnvoll gelten MD18075 $MN_MM_NUM_TOOLHOLDERS größer oder gleich MD20090 $MC_SPIND_DEF_MASTER_SPIND/MD20124 $MC_TOOL_MANAGEMENT_TOOLHOLDER.
Falls Bit0 = 1 in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK und MD20310 $MC_TOOL_MANAGEMENT_MASK gesetzt ist (=Magazinverwaltung (WZMG))
gilt für sinnvolle Werte MD18075 $MN_MM_NUM_TOOLHOLDERS kleiner oder gleich MD18076 $MN_MM_NUM_LOCS_WITH_DISTANCE.
Es können dann maximal MD18075 $MN_MM_NUM_TOOLHOLDERS Zwischenspeicherplätze von der Art Spindel
($TC_MPP1[9998,x]=2) definiert werden.

Bsp.: WZMG nicht aktiv
Es sei MD20090 $MC_SPIND_DEF_MASTER_SPIND=3, MD18075 $MN_MM_NUM_TOOLHOLDERS sei = 3.
Dann kann T1=t, T2=t, T3=t, T=t programmiert werden.

Bsp.: WZMG aktiv, Fräsmaschine mit Me=6 als Werkzeugwechselbefehl
Es sei MD18075 $MN_MM_NUM_TOOLHOLDERS sei = 14, MD18076 $MN_MM_NUM_LOCS_WITH_DISTANCE=20,
10 Kanäle seien aktiv, alle Kanäle haben WZMG aktiv und haben dieselben Werkzeug- und Magazindaten
(=ein TO Bereich für alle Kanäle). MD20090 $MC_SPIND_DEF_MASTER_SPIND=1,.....10 für die Kanäle.
Dann können im Magazinzwischenspeicher bis zu 14 Plätze der Art 'Werkzeughalter'/'Spindel' definiert werden.
Zusätzlich können weitere 6 Greifer, o.ä. definiert werden.
Diese bis zu 20 Plätze könne mit Magazinen verbunden werden.
In den Kanälen kann programmiert werden T1=t, .... T14=t und Tt, bzw. M1=6,....M14=6 und M6

Die eingesetzte PLC Version kann die maximale Anzahl von Werkzeughaltern begrenzen.
</description>
</parameter>
<parameter number="18076" type="DWORD" dim="0">
<name>MM_NUM_LOCS_WITH_DISTANCE</name>
<brief>Max. Anzahl Magazinplätze pro TOA mit Distanzverbindungen</brief>
<description>Das Maschinendatum ist sinnvoll, falls die Funktion Magazinverwaltung, WZMG, aktiv ist
 - siehe MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, MD20310 $MC_TOOL_MANAGEMENT_MASK; jeweils Bit0 = 1.
Maximale Anzahl Magazinplätze (Spindeln, Beladeplätze,...) pro TOA, die eine Distanzverbindung
zu einem Magazin, definiert durch $TC_MDPx[n,m], haben können.

Bsp.: WZMG sei aktiv: MD18076 $MN_MM_NUM_LOCS_WITH_DISTANCE sei = 5 und MD18077 $MN_MM_NUM_DIST_REL_PER_MAGLOC = 2.
Es seien zwei TO-Einheiten definiert mit je drei WZ-Haltern/Spindeln, zwei Beladestellen.
Weiterhin seien je zwei Greifer definiert in jeder TO-Einheit.
D.h. in Summe sind 14 Plätze im Zwischenspeichermagazin/Belademagazin definiert, für die Distanzen und
Zuordnungen definiert werden sollen TO-Einheit 1 habe 4 Magazine definiert, TO-Einheit 2 habe 6 Magazine definiert.
Mit dem eingestellten Wert von MD18076 $MN_MM_NUM_LOCS_WITH_DISTANCE = 5 kann jeder WZ-Halter und jede Beladestelle
der beiden TO-Einheiten mit bis zu zwei Magazinen (MD18077 $MN_MM_NUM_DIST_REL_PER_MAGLOC = 2) per Distanzbeziehung
verbunden werden; (siehe $TC_MDP1 und $TC_MDP2) und können jedem WZ-Halter zusätzlich bis zu zwei Greifer
(MD18077 $MN_MM_NUM_DIST_REL_PER_MAGLOC = 2) zugeordnet werden; (siehe $TC_MLSR).
Ein WZ-Halter / ein Spindelplatz kann demzufolge zwei Tabellen haben - eine Distanztabelle zu Magazinen und
eine Zuordnungstabelle zu Greifern und ähnlichen Plätzen.
</description>
</parameter>
<parameter number="18077" type="DWORD" dim="0">
<name>MM_NUM_DIST_REL_PER_MAGLOC</name>
<brief>Max. Anzahl Magazine in der Distanztabelle eines Magazinplatzes</brief>
<description>Das Maschinendatum ist nur wirksam, falls die Funktion Magazinverwaltung, WZMG, aktiv ist
- siehe MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, MD20310 $MC_TOOL_MANAGEMENT_MASK.
Mit dem Datum werden zwei Größen festgelegt:
1.) Maximale Anzahl Magazine in der Distanztabelle eines Magazinplatzes (Spindel, Beladeplatz, ...)
2.) Maximale Anzahl Plätze (Greifer, ...) in der Verbindungstabelle eines Spindel-/WZ-Halterplatzes.

Bsp.: MD18077 $MN_MM_NUM_DIST_REL_PER_MAGLOC sei = 3.
Es seien zwei TO-Einheiten definiert mit je zwei WZ-Haltern/Spindeln und je einer Beladestelle.
Weiterhin seien je vier Greifer definiert in jeder TO-Einheit.
TO-Einheit 1 habe 4 Magazine definiert, TO-Einheit 2 habe 6 Magazine definiert.

Dann kann jeder WZ-Halter bis zu drei Distanzen zu den Magazinen definieren (siehe $TC_MDP2)
und zusätzlich bis zu drei Beziehungen zu Greifern $TC_MLSR) definieren.
</description>
</parameter>
<parameter number="18078" type="DWORD" dim="0">
<name>MM_MAX_NUM_OF_HIERARCHIES</name>
<brief>Maximale Anzahl definierbarer Hierarchien für Magazinplatztypen</brief>
<description>Das Maschinendatum ist nur wirksam, falls die Funktion Magazinverwaltung, WZMG, aktiv ist  - siehe MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, MD20310 $MC_TOOL_MANAGEMENT_MASK.
Maximale Anzahl definierbarer Hierarchien für Magazinplatztypen.
Der zulässige Wert des Index n des Systemparameters $TC_MPTH[n,m] ist von 0 bis MD18078 '$MN_MM_MAX_NUM_OF_HIERARCHIES - 1'.
(Das Maximum des Index m kann durch das MD18079 $MN_MM_MAX_HIERARCHY_ENTRIES vorgegeben werden.)
Wert = 0 bedeutet, dass die Funktion 'Magazinplatztypehierarchie' nicht verfügbar ist.
</description>
</parameter>
<parameter number="18079" type="DWORD" dim="0">
<name>MM_MAX_HIERARCHY_ENTRIES</name>
<brief>Max. erlaubte Anzahl von Einträgen in einer Mag.pl.typ-Hierarch.</brief>
<description>Das Maschinendatum ist nur wirksam, falls die Funktion Magazinverwaltung, WZMG, aktiv ist -- siehe MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, MD20310 $MC_TOOL_MANAGEMENT_MASK - und falls MD18078 $MN_MM_MAX_NUM_OF_HIERARCHIES größer Null ist.
Maximale Anzahl Einträge in einer Magazinplatztyp-Hierarchie.
Der zulässige Wert des Index m des Systemparameters $TC_MPTH[n,m] ist von 0 bis 'MD18079 $MN_MM_MAX_HIERARCHY_ENTRIES - 1'.
(Das Maximum des Index n kann durch das MD18078 $MN_MM_MAX_NUM_OF_HIERARCHIES vorgegeben werden.)
</description>
</parameter>
<parameter number="18080" type="UDWORD" dim="0" display="HEX">
<name>MM_TOOL_MANAGEMENT_MASK</name>
<brief>Stufenweise Speicher-Reservierung für die Werkzeugverwaltung (SRAM)</brief>
<description>Aktivierung des WZV-Speichers mit "0" bedeutet:
Die eingestellten WZV-Daten belegen keinen Speicherplatz, die WZV ist nicht verfügbar.
Bit 0=1: Speicher für WZV-spezifische Daten wird bereitgestellt, die speicherreservierenden MD müssen entsprechend gesetzt sein (MD18086 $MN_MM_NUM_MAGAZINE_LOCATION, MD18084 $MN_MM_NUM_MAGAZINE)
Bit 1=1: Speicher für Überwachungsdaten (WZMO) wird bereitgestellt
Bit 2=1: Speicher für Anwender-Daten (CC-Daten) wird bereitgestellt
Bit 3=1: Speicher für Nebenplatzbetrachtung wird bereitgestellt
Bit 4=1: Speicher und Funktionsfreigabe für den PI-Dienst _N_TSEARC = "Komplexes Suchen nach Werkzeugen in Magazinen" wird bereitgestellt.
Bit 5=1: Verschleißüberwachung aktiv
Bit 6=1: Verschleißverbund verfügbar
Bit 7=1: Speicher für die Adapter der Magazinplätze reservieren
Bit 8=1: Speicher für Einsatz- und/oder Einrichtekorrekturen
Bit 9=1: Werkzeuge eines Revolvers verlassen ihren Revolverplatz beim WZ-Wechsel nicht mehr (anzeigemäßig).
Bit 10=1:Die Funktion Multitool ist verfügbar
              (Die Konfiguration kann über weitere MDen geändert werden)
Bit 10=0:Die Funktion Multitool ist nicht verfügbar
              (Die über weitere MDen eingestellte Funktionsausprägung ist nicht wirksam)
Diese aufgeschlüsselte Art der Speicherreservierung erlaubt einen der benutzten Funktionalität angemessenen sparsamen Speicherverbrauch.
Beispiel:
Standard-Speicherreservierung für WZV :
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK = 3 (Bit 0 + 1=1) bedeutet WZV und WZ-Überwachungsdaten sind bereitgestellt
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK = 1 bedeutet WZV ohne WZ-Überwachungsfunktionsdaten
</description>
</parameter>
<parameter number="18082" type="DWORD" dim="0">
<name>MM_NUM_TOOL</name>
<brief>Anzahl der Werkzeuge, die NCK verwalten kann (SRAM)</brief>
<description>Die NC kann maximal die in das MD eingetragene Anzahl an Werkzeugen verwalten. Ein Werkzeug hat mindestens eine Schneide.
Verwendet wird gepufferter Anwenderspeicher.
Es sind maximal so viele Werkzeuge möglich wie es Schneiden gibt. Das MD ist auch zu setzen, wenn keine WZV verwendet wird.
Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren.

Korrespondiert mit:
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18083" type="DWORD" dim="0">
<name>MM_NUM_MULTITOOL</name>
<brief>Funktion Multitool. Anzahl der Multitools, die NCK verwalten kann.</brief>
<description>Funktion "Mehrere Werkzeuge auf einem Magazinplatz" (Multitool). Anzahl der Multitools (Mehrfachwerkzeuge), die NCK verwalten kann.
</description>
</parameter>
<parameter number="18084" type="DWORD" dim="0">
<name>MM_NUM_MAGAZINE</name>
<brief>Anzahl der Magazine, die NCK verwalten kann (SRAM)</brief>
<description>Werkzeugverwaltung (WZV bzw. WZMG) - nur wenn MD WZV und Option WZV gesetzt ist:
Anzahl der Magazine, die NCK verwalten kann (aktive und Hintergrundmagazine).
Mit diesem Maschinendatum wird der gepufferter Speicher für die Magazine reserviert.
Wichtig: In der Werkzeugverwaltung werden pro TOA-Einheit ein Belade- und ein Zwischenspeichermagazin eingerichtet. Diese Magazine sind hier zu berücksichtigen.
Wert = 0: Die WZ-Verwaltung kann nicht aktiv werden, weil keine Daten angelegt werden können.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD20310 $MC_TOOL_MANAGEMENT_MASK
</description>
</parameter>
<parameter number="18085" type="DWORD" dim="0">
<name>MM_NUM_MULTITOOL_LOCATIONS</name>
<brief>Funktion Multitool: Anzahl der Multitoolplätze, die NCK verwalten kann.</brief>
<description>Funktion "Mehrere Werkzeuge auf einem Magazinplatz" (Multitool). Anzahl der Multitoolplätze, die NCK verwalten kann.
</description>
</parameter>
<parameter number="18086" type="DWORD" dim="0">
<name>MM_NUM_MAGAZINE_LOCATION</name>
<brief>Anzahl der Magazinplätze, die NCK verwalten kann (SRAM)</brief>
<description>WZMG - nur wenn MD WZV und Option WZV gesetzt ist:
Anzahl der Magazinplätze, die NCK verwalten kann.
Mit diesem Maschinendatum wird der gepufferte Speicher für die Magazinplätze reserviert.
Wichtig: Die Anzahl aller Zwischenspeicher und Beladestellen muss hier auch mit eingerechnet werden.
Wert = 0: Die WZ-Verwaltung kann nicht aktiv werden, weil keine Daten angelegt werden können.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD20310 $MC_TOOL_MANAGEMENT_MASK
</description>
</parameter>
<parameter number="18088" type="DWORD" dim="0">
<name>MM_NUM_TOOL_CARRIER</name>
<brief>Maximale Anzahl definierbarer Werkzeugträger.</brief>
<description>Maximale Anzahl definierbarer Werkzeugträger für orientierbare Werkzeuge im TO-Bereich. Der Wert wird durch die Anzahl aktiver TO-Einheiten dividiert. Das ganzzahlige Ergebnis gibt an, wieviel Werkzeugträger pro TO-Einheit definiert werden können. Die Daten zur Definition eines Werkzeugträgers werden mit den Systemvariablen $TC_CARR1, ... $TC_CARR14 gesetzt.
Die Daten liegen im gepufferten Speicher.

Anwendungsbeispiel(e):
2 Kanäle seien aktiv, auf jedem Kanal eine TO-Einheit (=Vorbesetzung). In Kanal 1 sollen 3 Träger definiert werden, auf Kanal 2 ein Träger. Der einzustellende Wert ist 6. Denn 6 / 2 = 3. D.h. in jeder TO-Einheit max. 3 Trägerdefinitionen.
</description>
</parameter>
<parameter number="18090" type="DWORD" dim="0">
<name>MM_NUM_CC_MAGAZINE_PARAM</name>
<brief>Anzahl der OEM-Magazindaten (SRAM)</brief>
<description>Anzahl der Magazindaten (vom Typ Integer), die dem Anwender oder Compilezyklus zur Verfügung stehen.
Mit diesem Maschinendatum erhöht sich der Bedarf an gepuffertem Speicher um sizeof(int)*max. Anzahl Magazine.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD18084 $MN_MM_NUM_MAGAZINE
</description>
</parameter>
<parameter number="18091" type="DWORD" dim="1">
<name>MM_TYPE_CC_MAGAZINE_PARAM</name>
<brief>Typ der OEM-Magazindaten (SRAM)</brief>
<description>Hiermit können den Parametern individuell Typen zugewiesen werden. Der Arrayindex n kann die Werte 0 bis Wert des MD18090 $MN_MM_NUM_CC_MAGAZINE_PARAM annehmen.
Typ der durch MD18090 $MN_MM_NUM_CC_MAGAZINE_PARAM projektierten magazinspezifischen Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (ist nicht erlaubt, wird nicht von der BTSS unterstützt.)
AXIS                           6
FRAME                          nicht definiert

Beispiel:
MD18090 $MN_MM_NUM_CC_MAGAZINE_PARAM=1
MD18091 $MN_MM_TYPE_CC_MAGAZINE_PARAM=2
Dann kann für den Parameter $TC_MAPC1 = "A" programmiert werden.
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18090 $MN_MM_NUM_CC_MAGAZINE_PARAM
MD18084 $MN_MM_NUM_MAGAZINE
</description>
</parameter>
<parameter number="18092" type="DWORD" dim="0">
<name>MM_NUM_CC_MAGLOC_PARAM</name>
<brief>Anzahl der OEM-Magazinplatzdaten</brief>
<description>Anzahl der Magazinplatzdaten-Parameter (vom Typ Integer), die dem Anwender oder Compilezyklus zur Verfügung stehen.
Mit diesem MD erhöht sich der Bedarf an gepuffertem Speicher um sizeof(int)*max. Anzahl Magazinplätze.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD18086 $MN_MM_NUM_MAGAZINE_LOCATION
</description>
</parameter>
<parameter number="18093" type="DWORD" dim="1">
<name>MM_TYPE_CC_MAGLOC_PARAM</name>
<brief>Typ der OEM-Magazinplatzdaten (SRAM)</brief>
<description>Hiermit können den Parametern individuell Typen zugewiesen werden. Der Arrayindex n kann die Werte 0 bis Wert des MD18092 $MN_MM_NUM_CC_MAGLOC_PARAM annehmen.
Typ der durch MD18092 $MN_MM_NUM_CC_MAGLOC_PARAM projektierten magazinplatzspezifischen Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert

Beispiel:
MD18092 $MN_MM_NUM_CC_MAGLOC_PARAM=1
MD18093 $MN_MM_TYPE_CC_MAGLOC_PARAM=2
Dann kann für den Parameter $TC_MPPC1 = "A" programmiert werden.
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18092 $MN_MM_NUM_CC_MAGLOC_PARAM
MD18086 $MN_MM_NUM_MAGAZINE_LOCATION
</description>
</parameter>
<parameter number="18094" type="DWORD" dim="0">
<name>MM_NUM_CC_TDA_PARAM</name>
<brief>Anzahl der OEM-Werkzeugdaten (SRAM)</brief>
<description>Anzahl der werkzeugspezifischen Daten, die pro Werkzeug angelegt werden können (vom Typ Integer), und dem Anwender oder Compilezyklus zur Verfügung stehen.
Mit diesem MD erhöht sich der Bedarf an gepuffertem Speicher um sizeof(double)*max. Anzahl Werkzeuge.

Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD18082 $MN_MM_NUM_TOOL
</description>
</parameter>
<parameter number="18095" type="DWORD" dim="1">
<name>MM_TYPE_CC_TDA_PARAM</name>
<brief>Typ der OEM-Werkzeugdaten (SRAM)</brief>
<description>Hiermit können den Parametern individuell Typen zugewiesen werden. Der Arrayindex n kann die Werte 0 bis Wert des MD18094 $MN_MM_NUM_CC_TDA_PARAM annehmen.
Typ der durch MD18094 $MN_MM_NUM_CC_TDA_PARAM projektierten werkzeugspezifischen Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (erlaubt Bezeichner bis maximal 31 Zeichen.)
AXIS                           6
FRAME                          nicht definiert

Beispiel:
MD18094 $MN_MM_NUM_CC_TDA_PARAM=1
MD18095 $MN_MM_TYPE_CC_TDA_PARAM=5
Dann kann für den Parameter $TC_TPC1 = "AnwenderWerkzeug" programmiert werden.
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18094 $MN_MM_NUM_CC_TDA_PARAM
MD18082 $MN_MM_NUM_TOOL
</description>
</parameter>
<parameter number="18096" type="DWORD" dim="0">
<name>MM_NUM_CC_TOA_PARAM</name>
<brief>Anzahl der Daten pro Werkzeugschneide für Compilezyklen (SRAM)</brief>
<description>Anzahl der TOA-Daten, die pro Werkzeug angelegt werden (vom Typ Real) und dem Anwender oder Compilezyklus zur Verfügung stehen.
Mit diesem MD erhöht sich der Bedarf an gepuffertem Speicher um sizeof(double)*max. Anzahl Schneiden.


Korrespondiert mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18097" type="DWORD" dim="1">
<name>MM_TYPE_CC_TOA_PARAM</name>
<brief>Typ der OEM-Daten je Schneide (SRAM)</brief>
<description>Hiermit können den Parametern individuell Typen zugewiesen werden.
Der Arrayindex n kann die Werte 0 bis Wert des MD18096 $MN_MM_NUM_CC_TOA_PARAM annehmen.
Typ der durch MD18096 $MN_MM_NUM_CC_TOA_PARAM projektierten schneidenspezifischen Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert

Beispiel:
MD18096 $MN_MM_NUM_CC_TOA_PARAM=1
MD18097 $MN_MM_TYPE_CC_TOA_PARAM=2

Dann kann für den Parameter $TC_DPC1 = "A" programmiert werden.
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18096 $MN_MM_NUM_CC_TOA_PARAM
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18098" type="DWORD" dim="0">
<name>MM_NUM_CC_MON_PARAM</name>
<brief>Anzahl der Überwachungsdaten pro Werkzeugs für Compilezyklen</brief>
<description>Anzahl der Überwachungsdaten, die pro Werkzeug angelegt werden (vom Typ Integer) und dem Anwender oder Compilezyklus zur Verfügung stehen.
Mit diesem MD erhöht sich der Bedarf an gepuffertem Speicher um sizeof(int)*max. Anzahl Schneiden.

Korrespondierend mit:
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18099" type="DWORD" dim="1">
<name>MM_TYPE_CC_MON_PARAM</name>
<brief>Typ der OEM-Monitordaten (SRAM)</brief>
<description>Hiermit können den Parametern individuell Typen zugewiesen werden. Der Arrayindex n kann die Werte 0 bis Wert des MD18098 $MN_MM_NUM_CC_MON_PARAM annehmen.
Typ der durch MD18098 $MN_MM_NUM_CC_MON_PARAM projektierten überwachungsspezifischen Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Beispiel:
MD18098 $MN_MM_NUM_CC_MON_PARAM=1
MD18099 $MN_MM_TYPE_CC_MON_PARAM=2

Dann kann für den Parameter $TC_MOPC1 = "A" programmiert werden.
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
MD18098 $MN_MM_NUM_CC_MON_PARAM
</description>
</parameter>
<parameter number="18100" type="DWORD" dim="0">
<name>MM_NUM_CUTTING_EDGES_IN_TOA</name>
<brief>Anzahl der Werkzeugkorrekturen, die NCK verwalten kann (SRAM)</brief>
<description>Legt die Anzahl der Werkzeugschneiden fest. Pro Werkzeugschneide werden, unabhängig vom Werkzeugtyp, über dieses Maschinendatum ca. 250 Byte pro TOA-Baustein des batteriegestützten Speichers reserviert.

Werkzeuge mit Schneiden vom Typ 400-499 (=Schleifwerkzeuge) belegen zusätzlich den Platz einer Schneide.
Bsp.:
Definiere 10 Schleifwerkzeuge mit je einer Schneide. Dann muss mindestens gelten:
MD18082 $MN_MM_NUM_TOOL = 10
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA = 20
Siehe auch MD18082 $MN_MM_NUM_TOOL

Verwendet wird gepufferter Anwenderspeicher

Sonderfälle:
Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren!
</description>
</parameter>
<parameter number="18102" type="DWORD" dim="0">
<name>MM_TYPE_OF_CUTTING_EDGE</name>
<brief>Art der D-Nummer Programmierung (SRAM)</brief>
<description>Mit dem MD wird die 'flache D-Nummernverwaltung' aktiviert. Diese Funktion wird nicht mehr unterstützt.

Der Standardwert ist Null. Das bedeutet, dass NCK die T- und D-Nummern verwaltet.

Ein Wert &gt; 0 wird von NCK nur akzeptiert, wenn in MD18080 $MN_MM_TOOL_MANAGEMENT_MASK das Bit0 und Bit1 nicht gesetzt ist; d.h. es darf weder die Magazinverwaltungsfunktion noch die Werkzeugüberwachung aktiv sein.

Wert:   Bedeutung
-----------------------------------------------------------------------------------
0:   keine 'flache D-Nummernverwaltung' aktiv
1:   Funktion 'flache D-Nummern' ist aktiv
</description>
</parameter>
<parameter number="18104" type="DWORD" dim="0">
<name>MM_NUM_TOOL_ADAPTER</name>
<brief>WZ-Adapter im TO-Bereich (SRAM)</brief>
<description>Anzahl der Werkzeug-Adapter im TO-Bereich.
Die Funktion ist nur einsetzbar, wenn Magazinplätze in NCK vorhanden sind.
Die Funktion Werkzeugverwaltung muss aktiv sein.
Damit die Einstellung wirksam werden kann, muss zusätzlich im MD18080 $MN_MM_TOOL_MANAGEMENT_MASK das Bit 7 (=0x80) gesetzt sein.

Adapterdatensätze und die schneidenspezifischen Basis-/Adaptermaße schließen sich gegenseitig aus. D.h., wenn Adapterdaten definiert werden, dann stehen die Parameter $TC_DP21, $TC_DP22, $TC_DP23 bzw. ihre Werte in NCK zur Verfügung.

-1:
jeder Magazinplatz erhält automatisch einen Adapter zugeordnet.
D.h., intern werden ebensoviele Adapter vorgesehen, wie über das MD18086 $MN_MM_NUM_MAGAZINE_LOCATION Magazinplätze vorgesehen werden.

0:
Keine Adapterdaten-Definitionen möglich. Es stehen die schneidenspezifischen Parameter $TC_DP21, $TC_DP22, $TC_DP23 zur Verfügung; sofern außerhalb der aktiven WZMG mit Adaptern gearbeitet wird.

&gt; 0:
Anzahl der Adapterdatensätze. Damit können Adapter unabhängig von Magazinplätzen definiert werden. Ein zusätzlicher Schritt nach der Definition der Daten ordnet die Adapter den Magazinplätzen zu. Somit kann ein Adapter z.B. mehreren Magazinplätzen zugeordnet werden.
Hinweis: Die Einstellung &gt;0 wird von HMI Operate derzeit nicht unterstützt.

Siehe die Maschinendaten
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK,
MD20310 $MC_TOOL_MANAGEMENT_MASK,
MD18084 $MN_MM_NUM_MAGAZINE,
MD18086 $MN_MM_NUM_MAGAZINE_LOCATION
</description>
</parameter>
<parameter number="18105" type="DWORD" dim="0">
<name>MM_MAX_CUTTING_EDGE_NO</name>
<brief>Maximaler Wert der D-Nummer</brief>
<description>Maximaler Wert der D-Nummer.
Die maximale Anzahl der D-Nummern pro Schneide ist davon unberührt.
Die mit dem Wert verbundene Überwachung der D-Nummernvergabe wirkt nur bei Neudefinition von D-Nummern. D.h., dass bestehende Datensätze nicht nachträglich - sofern das MD geändert wird - überprüft werden.
Sinnvollerweise stellt man ein
MD18105 $MN_MM_MAX_CUTTING_EDGE_NO ist gleich
MD18106 $MN_MM_MAX_CUTTING_EDGE_PER_TOOL.
Falls MD18105 $MN_MM_MAX_CUTTING_EDGE_NO &gt; MD18106 $MN_MM_MAX_CUTTING_EDGE_PER_TOOL gewählt wird, dann sollte man sich mit dem Unterschied von Korrekturnummer D und der Schneidennummer CE vertraut machen.
Siehe auch die Sprachbefehle CHKDNO, CHKDM, GETDNO, SETDNO, DZERO.
Das MD wird bei der Funktion "flache D-Nummer" nicht ausgewertet und hat dort entsprechend keine Bedeutung.
Das MD kann speicherbestimmend sein:
Bei einem Wechsel der Beziehung "kleiner gleich " zu "größer" - oder umgekehrt - der Werte der beide oben genannten MD wird der Bedarf an ungepuffertem Speicher beeinflusst.

Korrespondierend mit:
MD18106 $MN_MM_MAX_CUTTING_EDGE_PER_TOOL
</description>
</parameter>
<parameter number="18106" type="DWORD" dim="0">
<name>MM_MAX_CUTTING_EDGE_PERTOOL</name>
<brief>Maximale Anzahl der D-Nummern pro Werkzeug</brief>
<description>Maximale Anzahl von Schneiden (D-Korrekturen) pro Werkzeug (pro T-Nummer).
Damit kann bei der Datendefinition mehr Sicherheit erreicht werden. Falls nur mit Werkzeugen mit einer Schneide gearbeitet wird, dann kann der Wert auf 1 eingestellt werden. Damit wird man bei der Datendefinition davor geschützt, mehr als eine Schneide dem Werkzeug zuzuweisen.
Sinnvollerweise stellt man ein MD18105 $MN_MM_MAX_CUTTING_EDGE_NO gleich MD18106 $MN_MM_MAX_CUTTING_EDGE_PER_TOOL. Falls MD18105 $MN_MM_MAX_CUTTING_EDGE_NO größer MD18106 $MN_MM_MAX_CUTTING_EDGE_PER_TOOL gewählt wird, dann sollte man sich mit dem Unterschied von Korrekturnummer D und der Schneidennummer CE vertraut machen.
Siehe auch Sprachbefehle CHKDNO, CHKDM, GETDNO, SETDNO, DZERO.
Das MD wird bei der Funktion "flache D-Nummer" nicht ausgewertet und hat dort entsprechend keine Bedeutung.
Das Datum kann den Speicherbedarf beeinflussen.
Das MD kann speicherbestimmend sein:
Bei einem Wechsel der Beziehung "kleiner gleich " zu "größer" - oder umgekehrt - der Werte der beide oben genannten MD wird der Bedarf an ungepuffertem Speicher beeinflusst.

Korrespondiert mit:
MD18105 $MN_MM_MAX_CUTTING_EDGE_NO
</description>
</parameter>
<parameter number="18108" type="DWORD" dim="0">
<name>MM_NUM_SUMCORR</name>
<brief>Summenkorrekturen im TO-Bereich (SRAM)</brief>
<description>Gesamtanzahl der Summenkorrekturen in NCK.
Der Wert -1 bedeutet, dass die Anzahl der Summenkorrekturen gleich der Anzahl der Schneiden * Anzahl der Summenkorrekturen pro Schneide ist.
Ein Wert &gt; 0 und &lt; "Anzahl der Schneiden * Anzahl der Summenkorrekturen pro Schneide bedeutet, dass zwar pro Schneide maximal "Anzahl der Summenkorrekturen pro Schneide" Summenkorrekturen definiert werden können, aber nicht müssen, d.h. man hat die Möglichkeit, sparsam mit gepuffertem Speicher umzugehen. Nur die Schneiden haben einen Summenkorrektur-Datensatz, für die explizit Daten definiert werden.
Es wird gepufferter Speicher reserviert. Der Speicherbedarf für eine Summenkorrektur verdoppelt sich, falls zusätzlich konfiguriert ist "Einrichtekorrektur" aktiv; siehe MD18112 $MN_MM_KIND_OF_SUMCORR.

Siehe auch:
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA,
MD18110 $MN_MM_MAX_SUMCORR_PER_CUTTEDGE
</description>
</parameter>
<parameter number="18110" type="DWORD" dim="0">
<name>MM_MAX_SUMCORR_PER_CUTTEDGE</name>
<brief>Maximale Anzahl der Summenkorrekturen pro Schneide (SRAM)</brief>
<description>Maximale Anzahl von Summenkorrekturen pro Schneide.
Für MD18108 $MN_MM_NUM_SUMCORR &gt; 0 gilt:
Das Datum ist nicht speicherbestimmend, sondern dient nur der Überwachung.
Für MD18108 $MN_MM_NUM_SUMCORR = -1 gilt:
Das Datum ist speicherbestimmend.
Siehe dazu auch
MD18108 $MN_MM_NUM_SUMCORR,
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA.
</description>
</parameter>
<parameter number="18112" type="UDWORD" dim="0" display="HEX">
<name>MM_KIND_OF_SUMCORR</name>
<brief>Eigenschaften der Summenkorrekturen im TO-Bereich (SRAM)</brief>
<description>Eigenschaften der Summenkorrekturen in NCK.
Bit 0=0 "Summenkorrekturen fein" werden bei der Datensicherung der Werkzeugdaten mitgesichert.
Bit 0=1 "Summenkorrekturen fein" werden bei der Datensicherung der Werkzeugdaten nicht mitgesichert.

Bit 1=0 Einrichtekorrekturen werden bei der Datensicherung der Werkzeugdaten mitgesichert.
Bit 1=1 Einrichtekorrekturen werden bei der Datensicherung der Werkzeugdaten nicht mitgesichert.

Bit 2=0 Wird mit der Funktion Werkzeugverwaltung (WZMG) bzw. WZ-Überwachung (WZMO) gearbeitet, werden mit dem Setzen des Werkzeugzustands auf "aktiv" werden die vorhandenen "Summenkorrekturen fein"/Einrichtekorrekturen nicht beeinflusst.
Bit 2 =1 mit dem Setzen des Werkzeugzustands "aktiv" werden die vorhandenen Summenkorrekturen auf den Wert Null gesetzt.

Bit 3=0 falls mit der Funktion "WZV? + "Adapter" gearbeitet wird: Transformation der "Summenkorrekturen fein"/Einrichtekorrekturen
Bit 3=1 keine Transformation der "Summenkorrekturen fein"/Einrichtekorrekturen

Bit 4=0 keine Einrichtekorrektur-Datensätze
Bit 4=1 Einrichtekorrktur-Datensätze werden zusätzlich angelegt. Damit setzt sich die Summenkorrektur zusammen aus der Summe von Einrichtekorrektur + "Summenkorrektur fein"

Das Ändern der Zustände der Bits 0, 1, 2, 3 ändert den Speicheraufbau nicht.
Änderung des Zustands von Bit 4 löst nach dem nächsten PowerOn einen Neuaufbau des gepufferten Speichers aus.

Siehe auch
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
MD18108 $MN_MM_NUM_SUMCORR
MD18110 $MN_MM_MAX_SUMCORR_PER_CUTTEDGE
MD18080 $MN_MM_TOOL_MANAGEMENT_MASK,
MD20310 $MC_TOOL_MANAGEMENT_MASK,
MD18086 $MN_MM_NUM_MAGAZINE_LOCATION,
MD18104 $MN_MM_NUM_TOOL_ADAPTER
</description>
</parameter>
<parameter number="18113" type="DWORD" dim="0">
<name>MM_NUM_DRS_GRINDING_PATHS</name>
<brief>Anzahl unterschiedliche Pfadnamen für Schleifwerkzeug Abrichtprogramme.</brief>
<description>Anzahl der unterschiedlichen Pfadnamen in NCK, die für die Ablage der Abrichtprogramme der Schleifwerkzeuge definiert werden können. Siehe dazu den Systemparameter $TC_TPG_DRSPATH. Schleifwerkzeuge können nur definiert werden, wenn MD17540 $MN_TOOLTYPES_ALLOWED den Bitwert 'H90' gesetzt hat.
Es wird gepufferter Speicher reserviert, falls MD17540 $MN_TOOLTYPES_ALLOWED die Funktion freigeschaltet hat.
</description>
</parameter>
<parameter number="18114" type="DWORD" dim="0">
<name>MM_ENABLE_TOOL_ORIENT</name>
<brief>Werkzeugschneiden Orientierung zuordnen</brief>
<description>Die Funktion erlaubt es, jeder Werkzeugschneide eine vom Standardwert abweichende Orientierung zuzuordnen.

Wert = 0:
	Die Funktion Werkzeugorientierung ist nicht aktiv.

Wert = 1:
	Jeder Werkzeugschneide D=m des Werkezeugs T=n wird der Systemparameter $TC_DPV[n, m] zugeordnet, mit dessen Hilfe eine von 6 möglichen Werkzeugorientierungen in positive bzw. negative Koordinatenrichtung definiert werden kann.

Wert = 2:
	Jeder Werkzeugschneide D=m des Werkezeugs T=n werden zusätzlich zum Systemparameter $TC_DPV[n, m] die weiteren drei Systemparameter $TC_DPV3[n, m], $TC_DPV4[n, m] und $TC_DPV5[n, m] zugeordnet, mit deren Hilfe eine beliebige räumliche Werkzeugorientierung definiert werden kann.

T, D sind die NC-Adressen T und D, mit denen der Werkzeugwechsel bzw. die Werkzeuganwahl und die Korrekturanwahl programmiert werden.
Wert = 3:
	Jeder Werkzeugschneide D=m des Werkezeugs T=n werden zusätzlich zu den Systemparametern $TC_DPV[n, m] und $TC_DPV3 - $TC_DPV5 die weiteren drei Systemparameter $TC_DPVN3[n, m], $TC_DPVN4[n, m] und $TC_DPVN5[n, m] zugeordnet, mit deren Hilfe ein Vektor (Normalenvektor) definiert werden kann, der vorzugsweise senkrecht auf der Werkzeugorientierung steht. Gegenbenfalls wird der Normalenvektor so modifiziert, dass er in der von der Orientierung und dem programmierten Normalenvektor aufgespannten Ebene liegt, aber senkrechtauf der Orientierung steht.
	Die Orientierung und der gegebenenfalls modifizierte Normalenvektor definieren zusammen ein vollständiges Orientierungskoordinatensystem. Das Maschinendatum beeinflusst den Bedarf an gepuffertem Speicher.
</description>
</parameter>
<parameter number="18116" type="DWORD" dim="0">
<name>MM_NUM_TOOL_ENV</name>
<brief>Anzahl der Werkzeugumgebungen im TO-Bereich (SRAM)</brief>
<description>Gesamtanzahl der Werkzeugumgebungen (tool environments) in NCK.
Es wird gepufferter Speicher reserviert.
</description>
</parameter>
<parameter number="18118" type="DWORD" dim="0">
<name>MM_NUM_GUD_MODULES</name>
<brief>Anzahl der GUD-Dateien im aktiven Filesystem (SRAM)</brief>
<description>Ein GUD-Baustein entspricht einer Datei, in der anwenderdefinierte Daten abgelegt werden können. Es sind 9 GUD-Bausteine möglich, davon sind bereits 3 Bausteine für bestimmte Nutzer/Anwendungen vergeben.
UGUD_DEF_USER (Baustein für Anwender)
SGUD_DEF_USER (Baustein für SIEMENS)
MGUD_DEF_USER (Baustein für Maschinenhersteller)

Sonderfälle:
	Die Anzahl der GUD-Module richtet sich nach dem höchsten eingegebenen GUD-Modul.
	Beispiel:
	werden die folgenden GUD-Module definiert:
	   UGUD
	   MGUD
	   GUD5
	   GUD8
	so muss in das Maschinendatum der Wert 8 eingegeben werden. Dies würde eine Speicherbedarf von 8 x 120 Byte = 960 Byte bedeuten.

Es empfiehlt sich daher ein möglichst "niedriges" GUD-Modul zu wählen. Sind die GUD-Module UGUD und MGUD nicht anderweitig belegt, können diese verwendet werden.

Korrespondiert mit:
	MD18150 $MN_MM_GUD_VALUES_MEM
	(Speicherplatz für Anwendervariablen)
</description>
</parameter>
<parameter number="18120" type="DWORD" dim="0">
<name>MM_NUM_GUD_NAMES_NCK</name>
<brief>Anzahl der globalen Anwendervariablen-Namen (SRAM)</brief>
<description>Legt die Anzahl der Anwendervariablen für NCK-globalen Anwenderdaten (GUD) fest. Pro Variable werden ca. 80 Byte Speicher für den Namen der Variablen im SRAM reserviert. Der zusätzliche Speicherbedarf für den Variablenwert ist vom Datentyp der Variablen abhängig. Die Anzahl der verfügbaren NCK-globalen Anwenderdaten wird durch das Erreichen des Grenzwertes von MD18120 $MN_MM_NUM_GUD_NAMES_NCK oder MD18150 $MN_MM_GUD_VALUES_MEM (Speicherplatz für Anwendervariablen) begrenzt.

Verwendet wird gepufferter Anwenderspeicher

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren!

Korrespondiert mit:
	MD18150 $MN_MM_GUD_VALUES_MEM
	(Speicherplatz für Anwendervariablen)
</description>
</parameter>
<parameter number="18130" type="DWORD" dim="0">
<name>MM_NUM_GUD_NAMES_CHAN</name>
<brief>Anzahl der kanalspezifischen Anwendervariablen-Namen (SRAM)</brief>
<description>Legt die Anzahl der Anwendervariablen-Namen für kanalspezifische globale Anwenderdaten (GUD) fest. Pro Variablen-Name werden ca. 80 Byte Speicher im SRAM reserviert. Der zusätzliche Speicherbedarf für den Variablenwert ist gleich der Größe des Datentyps der Variablen multipliziert mit der Kanalanzahl. Dies bedeutet, dass jedem Kanal eigener Speicher für die Variablenwerte zur Verfügung steht. Die Anzahl der verfügbaren kanalspezifischen globalen Anwenderdaten wird durch das Erreichen des Grenzwertes von MD18130 $MN_MM_NUM_GUD_NAMES_CHAN oder MD18150 $MN_MM_GUD_VALUES_MEM (Speicherplatz für Anwendervariablen) begrenzt.

Der mit der DEF-Anweisung angelegte Name gilt über alle Kanäle.
Der Speicherbedarf für den Variablenwert ist gleich der Größe des Datentyps multipliziert mit der Kanalanzahl.

Verwendet wird gepufferter Anwenderspeicher

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren!

Korrespondiert mit:
	MD18150 $MN_MM_GUD_VALUES_MEM
	(Speicherplatz für Anwendervariablen)
</description>
</parameter>
<parameter number="18140" type="DWORD" dim="0">
<name>MM_NUM_GUD_NAMES_AXIS</name>
<brief>Anzahl der achsspezifischen Anwendervariablen-Namen (SRAM)</brief>
<description>Anzahl der Namen für achsspezifische globale Anwenderdaten (GUD)
Für jeden Namen (jedes Symbol) werden ca. 80 Byte Speicher reserviert.
Verwendet wird gepufferter Anwenderspeicher
Die Anzahl der verfügbaren GUDs wird durch das Erreichen des Grenzwertes von MD18140 $MN_MM_NUM_GUD_NAMES_AXIS oder MD18150 $MN_MM_GUD_VALUES_MEM gegeben.
Der mit der DEF-Anweisung angelegte Name gilt für alle Achsen.
Der Speicherbedarf für den Variablenwert ist gleich der Größe des Datentyps multipliziert mit der Achsanzahl.
D.h. jeder Achse stehen eigene Speicherzellen für die Variablen-Werte zur Verfügung.

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren !

Nicht relevant:
	In bisherigen Softwareständen ist die Funktionalität noch nicht enthalten.
</description>
</parameter>
<parameter number="18150" type="DWORD" dim="0">
<name>MM_GUD_VALUES_MEM</name>
<brief>Speicherplatz für globale Anwendervariablen-Werte (SRAM)</brief>
<description>Angegebener Wert reserviert den Speicherplatz für die Variablenwerte der globalen Anwenderdaten (GUD). Die Dimensionierung des Speichers hängt stark davon ab, welche Datentypen für die Variablen verwendet werden.
Übersicht des Speicherbedarfs der Datentypen:

Datentyp         Speicherbedarf
REAL                     8 Byte
INT                      4 Byte
BOOL                     1 Byte
CHAR                     1 Byte
STRING                   1 Byte pro Zeichen, pro String sind 100 Zeichen möglich
AXIS                     4 Byte
FRAME                    bis zu 1kByte (je nach Steuerungsmodell)

Der gesamte Speicherbedarf einer kanal- bzw. achsspezifischen globalen Anwendervariablen ist der Speicherbedarf der Variablen multipliziert mit der Anzahl der Kanäle bzw. der Achsen. Die Anzahl der verfügbaren globalen Anwendervariablen wird durch das Erreichen des Grenzwertes der Maschinendaten MD18120 $MN_MM_NUM_GUD_NAMES_NCK, MD18130 $MN_MM_NUM_GUD_NAMES_CHAN, MD18140 $MN_MM_NUM_GUD_NAMES_AXIS oder MD18150 $MN_MM_GUD_VALUES_MEM gegeben.
Verwendet wird gepufferter Anwenderspeicher

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung dieses Maschinendatums verloren!

Korrespondiert mit:
	MD18118 $MN_MM_NUM_GUD_MODULES
	(Anzahl der GUD-Bausteine)
	MD18120 $MN_MM_NUM_GUD_NAMES_NCK
	(Anzahl der globalen Anwendervariablen)
	MD18130 $MN_MM_NUM_GUD_NAMES_CHAN
	(Anzahl der kanalspezifischen Anwendervariablen)
</description>
</parameter>
<parameter number="18156" type="DWORD" dim="0">
<name>MM_NUM_R_PARAM_NCK</name>
<brief>Anzahl der globalen R-Parameter (SRAM)</brief>
<description>Legt die im NCK verfügbare Anzahl globaler R-Parameter fest.
</description>
</parameter>
<parameter number="18160" type="DWORD" dim="0">
<name>MM_NUM_USER_MACROS</name>
<brief>Anzahl der Makros (DRAM)</brief>
<description>Legt die Summe der Makros, die in den Files _N_SMAC_DEF, _N_MMAC_DEF und _N_UMAC_DEF hinterlegt werden können, fest. Jeder dieser Files, welcher eröffnet wird, belegt im Teileprogrammspeicher mindestens ein kByte Speicherplatz für den Filecode. Mit der Überschreitung einer kByte-Grenze Filecode wird für die Datei ein weiteres kByte Speicher reserviert.
Verwendet wird der dynamische Anwenderspeicher. Für die angegebene Anzahl von Makros werden pro Makro ca. 375 Byte für Verwaltungsaufgaben reserviert.
</description>
</parameter>
<parameter number="18170" type="DWORD" dim="0">
<name>MM_NUM_MAX_FUNC_NAMES</name>
<brief>Anzahl von Zusatzfunktionen (Zyklen, DRAM)</brief>
<description>Das Datum begrenzt die maximale Anzahl von zusätzlichen Funktionen, die zu den vordefinierten Funktionen (wie z.B. Sinus, Cosinus) in
- Zyklenprogrammen
- Compilezyklensoftware verwendet werden können.
Die Funktionsnamen werden in NCK-globalen Wörterbuch eingetragen und dürfen nicht mit den bereits vorhandenen Namen kollidieren.
Das SIEMENS-Zyklen-Paket enthält Zusatzfunktionen, die mit der Standardeinstellung des MD berücksichtigt werden.
Die Daten werden im ungepufferten Speicher angelegt. Pro zusätzliche Funktion werden für Verwaltung ca. 150 Byte benötigt.

Korrespondiert mit:
	MD18180 $MN_MM_NUM_MAX_FUNC_PARAM
	(Anzahl von zusätzlichen Parametern)
</description>
</parameter>
<parameter number="18180" type="DWORD" dim="0">
<name>MM_NUM_MAX_FUNC_PARAM</name>
<brief>Anzahl von zusätzlichen Parametern für Zyklen laut MD 18170</brief>
<description>Legt die maximale Anzahl der Parameter, die zu den Zusatzfunktionen in
- Zyklenprogrammen
- Compilezyklensoftware benötigt werden, fest.
Für die Zusatzfunktionen des SIEMENS-Zyklen-Pakets des Softwarestandes 1 werden 50 Parameter benötigt.
Die Daten werden im ungepufferten Speicher hinterlegt. Pro Parameter werden 72 Byte Speicher reserviert.

Korrespondiert mit:
	MD18170 $MN_MM_NUM_MAX_FUNC_NAMES
	(Anzahl von Zusatzfunktionen)
</description>
</parameter>
<parameter number="18190" type="DWORD" dim="0">
<name>MM_NUM_PROTECT_AREA_NCK</name>
<brief>Anzahl der steuerungsspezifischen Schutzbereiche (SRAM)</brief>
<description>Das Maschinendatum gibt an, wieviele steuerungsspezifische Schutzbereiche angelegt werden.

Korrespondiert mit:
	MD28200 $MC_MM_NUM_PROTECT_AREA_CHAN   (Anzahl kanalspezifischer Schutzbereiche)
	MD28210 $MC_MM_NUM_PROTECT_AREA_ACTIVE (Anzahl der gleichzeitig aktiven Schutzbereiche)

Literatur:
	/FB/, A3, "Achsüberwachungen, Schutzbereiche"
</description>
</parameter>
<parameter number="18192" type="DWORD" dim="0">
<name>MM_NUM_CC_MULTITOOL_PARAM</name>
<brief>Anzahl der multitoolspezifischen Parameter $TC_MTPCn pro Multitool.</brief>
<description>Anzahl der multitoolspezifischen Parameter $TC_MTPCn, die pro Multitool angelegt werden können und dem Anwender oder Compilezyklus zur Verfügung stehen.
</description>
</parameter>
<parameter number="18193" type="DWORD" dim="1">
<name>MM_TYPE_CC_MULTITOOL_PARAM</name>
<brief>Typ der OEM-Multitooldaten</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18192 $MN_MM_NUM_CC_MULTITOOL_PARAM projektierten multitoolspezifischen Anwenderdaten $TC_MTPCn.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (ist nicht erlaubt, wird nicht von der BTSS unterstützt.)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18192 $MN_MM_NUM_CC_MULTITOOL_PARAM
MD18083 $MN_MM_NUM_MULTITOOL
</description>
</parameter>
<parameter number="18194" type="DWORD" dim="0">
<name>MM_NUM_CC_MTLOC_PARAM</name>
<brief>Anzahl multitoolplatzspezifischer Parameter $TC_MTPPCn pro Multitoolplatz.</brief>
<description>Anzahl der multitoolplatzspezifischen Parameter $TC_MTPPCn, die pro Multitoolplatz angelegt werden können und dem Anwender oder Compilezyklus zur Verfügung stehen.
</description>
</parameter>
<parameter number="18195" type="DWORD" dim="1">
<name>MM_TYPE_CC_MTLOC_PARAM</name>
<brief>Typ der OEM-Multitoolplatzdaten</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18194 $MN_MM_NUM_CC_MTLOC_PARAM projektierten multitoolplatzspezifischen Anwenderdaten $TC_MTPPCn.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18194 $MN_MM_NUM_CC_MTLOC_PARAM
MD18085 $MN_MM_NUM_MULTITOOL_LOCATIONS
</description>
</parameter>
<parameter number="18196" type="DWORD" dim="0">
<name>MM_NUM_CCS_MULTITOOL_PARAM</name>
<brief>Anzahl der multitoolspezifischen Parameter $TC_MTPCSn, pro Multitool.</brief>
<description>Anzahl der Parameter für Siemens-OEM-Multitooldaten ($TC_MTPCSn), die pro Multitool angelegt werden können und Siemenszyklen zur Verfügung stehen.
</description>
</parameter>
<parameter number="18197" type="DWORD" dim="1">
<name>MM_TYPE_CCS_MULTITOOL_PARAM</name>
<brief>Typ der Siemens-OEM-Multitooldaten</brief>
<description>Siemens-OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18196 $MN_MM_NUM_CCS_MULTITOOL_PARAM projektierten multitoolspezifischen Siemens-Anwenderdaten $TC_MTPCSn.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (ist nicht erlaubt, wird nicht von der BTSS unterstützt.)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18196 $MN_MM_NUM_CCS_MULTITOOL_PARAM
MD18083 $MN_MM_NUM_MULTITOOL
</description>
</parameter>
<parameter number="18198" type="DWORD" dim="0">
<name>MM_NUM_CCS_MTLOC_PARAM</name>
<brief>Anzahl multitoolplatzspezifischer Parameter $TC_MTPPCSn, pro Multitoolplatz</brief>
<description>Anzahl der Parameter für Siemens-OEM-Multitoolplatzdaten ($TC_MTPPCSn), die pro Multitoolplatz angelegt werden können und Siemenszyklen zur Verfügung stehen.
</description>
</parameter>
<parameter number="18199" type="DWORD" dim="1">
<name>MM_TYPE_CCS_MTLOC_PARAM</name>
<brief>Typ der Siemens-OEM-Multitoolplatzdaten</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18198 $MN_MM_NUM_CCS_MTLOC_PARAM projektierten multitoolplatzspezifischen Siemens-Anwenderdaten $TC_MTPPCSn.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18198 $MN_MM_NUM_CCS_MTLOC_PARAM
MD18085 $MN_MM_NUM_MULTITOOL_LOCATIONS
</description>
</parameter>
<parameter number="18200" type="DWORD" dim="0">
<name>MM_NUM_CCS_MAGAZINE_PARAM</name>
<brief>Anzahl der Siemens-OEM-Magazindaten (SRAM)</brief>
<description>Nur, wenn MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, Bit 0=1 ('H1') und Bit2=1 ('H4') für WZMG gesetzt ist (und Option gesetzt ist):
Anwender- bzw. OEM-Daten in der Werkzeugverwaltung (WZMG).

Anzahl der Siemens-OEM-Magazin-Daten (Standard-Format IN_Int).
Siehe auch: MD18090 $MN_MM_NUM_CC_MAGAZINE_PARAM, MD18084 $MN_MM_NUM_MAGAZINE

Verwendet wird gepufferter Anwenderspeicher
</description>
</parameter>
<parameter number="18201" type="DWORD" dim="1">
<name>MM_TYPE_CCS_MAGAZINE_PARAM</name>
<brief>Typ der Siemens-OEM-Magazindaten (SRAM)</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18200 $MN_MM_NUM_CCS_MAGAZINE_PARAM projektierten magazinspezifischen Siemens-Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (ist nicht erlaubt, wird nicht von der BTSS unterstützt.)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18200 $MN_MM_NUM_CCS_MAGAZINE_PARAM
MD18084 $MN_MM_NUM_MAGAZINE
</description>
</parameter>
<parameter number="18202" type="DWORD" dim="0">
<name>MM_NUM_CCS_MAGLOC_PARAM</name>
<brief>Anzahl der Siemens-OEM-Magazinplatzdaten (SRAM</brief>
<description>Nur,wenn MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, Bit 0=1 ('H1') und Bit2=1 ('H4') für WZMG gesetzt ist (und Option gesetzt ist):
Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Anzahl der Siemens-OEM-Magazinplatz-Daten (Standard-Format IN_Int).
Siehe auch: MD18092 $MN_MM_NUM_CC_MAGLOC_PARAM,  MD18086 $MN_MM_NUM_MAGAZINE_LOCATION
Verwendet wird gepufferter Arbeitsspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.
</description>
</parameter>
<parameter number="18203" type="DWORD" dim="1">
<name>MM_TYPE_CCS_MAGLOC_PARAM</name>
<brief>Typ der Siemens-OEM-Magazinplatzdaten (SRAM)</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18202 $MN_MM_NUM_CCS_MAGLOC_PARAM projektierten magazinplatzspezifischen Siemens-Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18202 $MN_MM_NUM_CCS_MAGLOC_PARAM
MD18086 $MN_MM_NUM_MAGAZINE_LOCATION
</description>
</parameter>
<parameter number="18204" type="DWORD" dim="0">
<name>MM_NUM_CCS_TDA_PARAM</name>
<brief>Anzahl der Siemens-OEM-Werkzeugdaten (SRAM)</brief>
<description>Nur, wenn MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, Bit2=1 ('H4') gesetzt ist:
Anwender- bzw. OEM-Daten der Werkzeuge
Anzahl der Siemens-OEM-TDA(=WZ-spezifischen)-Daten (Standard-Format Int).
Siehe auch: MD18094 $MN_MM_NUM_CC_TDA_PARAM, MD18082 $MN_MM_NUM_TOOL
Verwendet wird gepufferter Anwenderspeicher
</description>
</parameter>
<parameter number="18205" type="DWORD" dim="1">
<name>MM_TYPE_CCS_TDA_PARAM</name>
<brief>Typ der Siemens-OEM-Werkzeugdaten (SRAM)</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18204 $MN_MM_NUM_CCS_TDA_PARAM projektierten werkzeugspezifischen Siemens-Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
STRING                         5 (ist nicht erlaubt, wird nicht von der BTSS unterstützt.)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18204 $MN_MM_NUM_CCS_TDA_PARAM
MD18082 $MN_MM_NUM_TOOL
</description>
</parameter>
<parameter number="18206" type="DWORD" dim="0">
<name>MM_NUM_CCS_TOA_PARAM</name>
<brief>Anzahl der Siemens-OEM-Daten je Schneide (SRAM</brief>
<description>Nur, wenn MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, Bit2=1 ('H4') gesetzt ist:
Anwender- bzw. OEM-Daten der Werkzeuge
Anzahl der Siemens-OEM-TOA-Daten (Standard-Format IN_Real).
Siehe auch: MD18096 $MN_MM_NUM_CC_TOA_PARAM, MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
Verwendet wird gepufferter Anwenderspeicher
</description>
</parameter>
<parameter number="18207" type="DWORD" dim="1">
<name>MM_TYPE_CCS_TOA_PARAM</name>
<brief>Typ der Siemens-OEM-Daten je Schneide (SRAM)</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18206 $MN_MM_NUM_CCS_TOA_PARAM projektierten schneidenspezifischen Siemens-Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18206 $MN_MM_NUM_CCS_TOA_PARAM
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18208" type="DWORD" dim="0">
<name>MM_NUM_CCS_MON_PARAM</name>
<brief>Anzahl der Siemens-OEM-Monitordaten (SRAM)</brief>
<description>Nur, wenn MD18080 $MN_MM_TOOL_MANAGEMENT_MASK, Bit0=1 oder Bit1=1 und Bit2=1 ('H4') gesetzt ist:

Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Anzahl der Siemens-OEM-Monitor-Daten (= Überwachungsdaten; Standard-Format IN_Int).
Siehe auch: MD18098 $MN_MM_NUM_CC_MON_PARAM, MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
Verwendet wird gepufferter Anwenderspeicher
</description>
</parameter>
<parameter number="18209" type="DWORD" dim="1">
<name>MM_TYPE_CCS_MON_PARAM</name>
<brief>Typ der Siemens-OEM-Monitordaten (SRAM)</brief>
<description>Anwender- bzw. OEM-Daten in der Werkzeugverwaltung.
Typ der durch MD18208 $MN_MM_NUM_CCS_MON_PARAM projektierten überwachungsspezifischen Siemens-Anwenderdaten.
Jeder Parameter kann mit einem eigenen Typ versehen werden. Zulässige Typen sind:
Typ                            Wert des Maschinendatums
(siehe Typen der NC-Sprache)
------------------------------------------------------------------------------------
BOOL                           1
CHAR                           2
INT                            3
REAL                           4
-(STRING ist hier explizit nicht möglich; der Wert 5 wird wie Wert 2 behandelt)
AXIS                           6
FRAME                          nicht definiert
Verwendet wird gepufferter Anwenderspeicher. Eine Wertänderung führt zu einer Rekonfiguration des gepufferten Speichers.

Korrespondiert mit:
MD18208 $MN_MM_NUM_CCS_MON_PARAM
MD18100 $MN_MM_NUM_CUTTING_EDGES_IN_TOA
</description>
</parameter>
<parameter number="18210" type="DWORD" dim="0" readonly="true">
<name>MM_USER_MEM_DYNAMIC</name>
<brief>Ungepufferter Anwenderspeicher [kB]</brief>
<description>Der in NCK verfügbare ungepufferte (volatile) Speicher.
Mit MD18210 $MN_MM_USER_MEM_DYNAMIC wird die Größe des dem Anwender zur Verfügung stehenden ungepufferten Speichers sichtbar gemacht.
In diesem Speicherbereich liegen verschiedene Arten von Anwenderdaten wie z.B.
- Lokale Anwenderdaten
- Ipo-Satzpuffer
- Anwendermakros
- Diagnosefunktionen wie Trace-Aufzeichnung von Zeiten,.....
- Werkzeugverwaltungs-Trace
- Kommunikation mit 1-n HMIs; Wert von n: siehe dazu das MD10134 $MN_MM_NUM_MMC_UNITS.
- Reorg-Log-Datei (für interne Zwecke des NC-Programmablaufs benötigt)
-  ...
Jeder zusätzliche aktive Kanal belegt erheblich Speicher. Mit der Kanalaktivierung wird der Wert des MDs entsprechend automatisch derart erhöht, das der Wert von  MD18050 $MN_INFO_FREE_MEM_DYNAMIC nach Möglichkeit erhalten bleibt.
Jede aktivierte Achse benötigt hiervon Speicher. Mit der Achsaktivierung wird der Wert des MDs entsprechend automatisch derart erhöht, das der Wert von  MD18050 $MN_INFO_FREE_MEM_DYNAMIC nach Möglichkeit erhalten bleibt.

Die möglichen Werte für MD18050 hängen von der Hard- und Software-Konfiguration ab.
Hinweisalarme 6030, 6035 können anzeigen, das der gewünschte Gesamtspeicher eventuell auf dem Modell, oder der Hardware nicht verfügbar ist. Siehe dazu auch MD11415 $MN_SUPPRESS_ALARM_MASK_2, Bit 22

Nach ungepuffertem Hochlauf von NCK (Kaltstart) wird der Wert von NCK automatisch eingestellt. Der Wert ist dann derart, dass der in MD18050 $MN_INFO_FREE_MEM_DYNAMIC vorgegebene freie Speicher dem Anwender zur Verfügung steht. Zur weiteren Vergrößerung dieses Anwenderspeichers muss MD19240 $ON_USER_MEM_DYNAMIC vergrößert werden.
(Siehe die Beschreibung zu MD18050 $MN_INFO_FREE_MEM_DYNAMIC).

Die im ungepufferten Speicher liegenden Daten gehen mit dem Ausschalten von NCK verloren.

Korrespondiert mit:
	Der noch verfügbare ungepufferte Speicher kann dem MD18050 $MN_INFO_FREE_MEM_DYNAMIC (Anzeigedatum des freien dynamischen Speichers) entnommen werden.
</description>
</parameter>
<parameter number="18220" type="DWORD" dim="0">
<name>MM_USER_MEM_DPR</name>
<brief>Anwenderspeicher im DUAL-PORT-RAM (DPR)</brief>
<description>In bisherigen Softwareständen ist die Funktionalität nicht enthalten.
</description>
</parameter>
<parameter number="18230" type="DWORD" dim="0" readonly="true">
<name>MM_USER_MEM_BUFFERED</name>
<brief>Gepufferter Anwenderspeicher</brief>
<description>Gepufferter (persistenter) Anwenderspeicher [kB].
In diesem Speicherbereich liegen verschiedene Arten von Anwenderdaten
z.B.:
- NC-Teileprogramme
- R-Parameter
- globale Anwenderdaten (GUD)
- Definitionen der Schutzbereiche
- Korrekturtabellen EEC, CEC, QEC
- Werkzeug-/Magazin-Daten
        ...
Diese Daten bleiben über das Ausschalten der Steuerung hinweg erhalten.
(Sofern die Datenpufferung in Ordnung ist; d.h. der Init-Schalter an der Steuerung korrekt eingestellt ist).
D.h. sie stehen nach dem Wiedereinschalten unverändert zur Verfügung.

Jeder zusätzliche aktive Kanal belegt einigen persistenten Speicher. Mit der Kanalaktivierung wird der Wert des MDs entsprechend automatisch derart erhöht, das der Wert von  MD18060 $MN_INFO_FREE_MEM_STATIC nach Möglichkeit erhalten bleibt.
Zur weiteren Vergrößerung dieses Anwenderspeichers muss MD19250 $ON_USER_MEM_BUFFERED vergrößert werden.
Die verfügbaren Werte hängen von der Hard- und Software-Konfiguration ab.
Hinweisalarme 6030, 6035 können anzeigen, das der gewünschte Gesamtspeicher eventuell auf dem Modell, oder der Hardware nicht verfügbar ist. Siehe dazu auch MD11415 $MN_SUPPRESS_ALARM_MASK_2, Bit 22

Siehe dazu die Bedeutung von MD18060 $MN_INFO_FREE_MEM_STATIC
</description>
</parameter>
<parameter number="18231" type="DWORD" dim="1" readonly="true">
<name>MM_USER_MEM_BUFFERED_TYPEOF</name>
<brief>Technologie für die Datenpufferung</brief>
<description>Art der verwendeten Technologie zur Pufferung der in NCK persistenten Daten

Wert = 0 die verwendete Hardware gewährleistet alleine die Pufferung der in NCK persistenten Daten, bzw. keine gepufferten Daten möglich (falls die HW die Pufferung nicht gewährleistet).
Wert = 1 die Software und geeignete Hardware (z.B. CF-Disk) gewährleisten die Datenpufferung der in NCK persistenten Daten.
Falls der Wert = 1 ist, dann siehe auch MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM
Index 0 = reserviert
Index 1 = Festlegung für die gepufferten Daten des Aktiven Filesystems (incl. Maschinendaten).
Index 2 = Festlegung für die gepufferten Daten des Passiven Filesystems (Diagnosedateien, GUD-Definitionsdateien, Teileprogramme, Zyklen, ....).
</description>
</parameter>
<parameter number="18232" type="DWORD" dim="1">
<name>MM_ACTFILESYS_LOG_FILE_MEM</name>
<brief>System: Logdateigröße im SRAM [kB]</brief>
<description>Gepufferte Logdatei für gepufferte Daten des aktiven Dateisystems ( in kB )
Systeme mit langsamem Datenpufferungsmedium legen geänderte gepufferte Daten im systeminternem SRAM ab. Wenn der Puffer voll ist, werden alle Daten des aktiven Filesystem persistent gemacht. Der Puffer sichert die Datenpersistenz vom letzten Persistentmachen bis zum möglichen Powerfail. Nach Powerfail (Spannungsausfall bzw. PowerOff) können Daten, die zum Zeitpunkt von Powerfail noch nicht persistent gemacht worden sind, aus diesem Puffer restauriert werden.
Die Logdatei dient dazu, den Datenverlust bei Powerfail zu minimieren, bzw. ganz zu vermeiden.
1000 Einträge benötigen ca. 70 kB.
Ein Wert größer 0 ist nur sinnvoll, falls MD18231 $MN_MM_USER_MEM_BUFFERED_TYPEOF[1] = 1 ist
Ein Wert gleich 0 bedeutet, dass die gepufferten Daten nicht spannungsausfallsicher sind,
falls MD18231 $MN_MM_USER_MEM_BUFFERED_TYPEOF[1] = 1 ist (typisch für Sinumerik SolutionLine)
Beispiel:
Mit MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM[2] = 0 können Datenänderungen aus Synchronaktionen von der Powerfail Datensicherung ausgeschlossen werden.
Vorteil wäre verbessertes Zeitverhalten der Synchronaktionen. Sollte nur eingestellt werden, wenn die gepufferten Daten, die durch die Synchronaktion geändert werden, nicht sicherheitsrelevant sind.
Index Bedeutung
0     Puffer des Vorlaufs
1     Puffer für Datenänderungen im Rahmen des Werkzeugwechsels und Retract
2     Puffer für Datenänderungen des Hauptlaufs (Synchronaktionen)
Siehe auch MD17610 $MN_DEPTH_OF_LOGFILE_OPT_PF, womit das Verhalten optimiert werden kann.
</description>
</parameter>
<parameter number="18233" type="BOOLEAN" dim="1">
<name>IS_CONTINOUS_DATA_SAVE_ON</name>
<brief>System: Automatische Sicherung persistenter Daten</brief>
<description>Das Datum ist nur von Bedeutung, falls MD18231 $MN_MM_USER_MEM_BUFFERED_TYPEOF = 1 ist
Wert = 0 : Kontinuierliche Sicherung persistenter Daten auf Platte/Flash/etc. ist abgeschaltet.
           Damit kann das Zeitverhalten der Software auf Systemen der Reihe SolutionLine verbessert werden.
Wert = 1 : Kontinuierliche automatische Sicherung persistenter Daten auf Platte/Flash/etc. ist aktiv.

Index 0 = reserviert
Index 1 = Festlegung für die gepufferten Daten des Aktiven Filesystems (incl. Maschinendaten).
Index 2 = Festlegung für die gepufferten Daten des Passiven Filesystems (Teileprogramme, Zyklen, ....).

Der vorbelegte Wert sollte nur verändert werden für Diagnosezwecke bzw. zur Optimierung des Zeitverhaltens.
Der vorbelegte Wert sollte nur verändert werden, wenn die Anlage in einem Umfeld betrieben wird,
in dem kein spontanes Abschalten der Anlage / spontaner Spannungsausfall (PowerFail) erfolgt.
Andernfalls können persistente Daten verloren gehen.
</description>
</parameter>
<parameter number="18234" type="UDWORD" dim="0" display="HEX">
<name>MM_MEMORY_CONFIG_MASK</name>
<brief>Einstellung der Sicherung persistenter Daten des akt. Filesystems</brief>
<description>Bit 0 ist definiert für MD18231 $MN_USER_MEM_BUFFERED_TYPEOF[1]=1. Wenn die durch MD18232 $MN_MM_ACTFILESYS_LOG_FILE_MEM festgelegte Puffergrösse im entsprechenden Puffer viele Daten enthält, dann werden diese durch die NCK Software folgendermaßen persistent gemacht:
Wert = 0: synchrone Datensicherung
Wert = 1: asynchrone Datensicherung
Dabei bedeutet asynchron, asynchron zum NCK Ablauf. Synchron bedeutet, die Vorlauf-Task in NCK wird gestoppt für die Zeit, die für das Persistentmachen benötigt wird. Welche Einstellung die Beste ist hängt ab von der verwendeten HW und/oder von der konkreten NCK Applikation.
</description>
</parameter>
<parameter number="18235" type="DWORD" dim="0">
<name>MM_INCOA_MEM_SIZE</name>
<brief>Größe des DRAM-Speichers für INCOA-Applikationen [kB]</brief>
<description>Der Defaultwert von MD18235 $MN_MM_INCOA_MEM_SIZE legt beim Kaltstart der Steuerung den DRAM-Speicherbereich
fest, der insgesamt für INCOA-Applikationen zur Verfügung steht.
Das Maschinendatum kann nur gelesen werden. Über die Diagnosefunktion "momentanen Istwert lesen" kann
der tatsächlich durch INCOA-Applikationen belegte Speicher ermittelt werden.
</description>
</parameter>
<parameter number="18237" type="DWORD" dim="0" readonly="true">
<name>MM_CYC_DATA_MEM_SIZE</name>
<brief>Zyklen-/Anzeige-Einstelldaten im SRAM [kB]</brief>
<description>Größe des gepufferten Speichers für 'Einstelldaten für Zyklen und Anzeige' [kB]
</description>
</parameter>
<parameter number="18238" type="DWORD" dim="0">
<name>MM_CC_MD_MEM_SIZE</name>
<brief>Compilezyklen-Maschinendaten im SRAM [kB]</brief>
<description>Gepufferter Anwenderspeicher für Compilezyklenmaschinen (in kB)
</description>
</parameter>
<parameter number="18240" type="DWORD" dim="0">
<name>MM_LUD_HASH_TABLE_SIZE</name>
<brief>Hash-Tabellengröße für LUD (DRAM)</brief>
<description>Legt die Größe der Hash-Tabelle für lokale Anwenderdaten (LUD) fest. Der eingegebene Wert muss eine Primzahl sein. Die Einstellung erlaubt die Optimierung von

- Interpreter-Laufzeit (kleiner Wert = größere Laufzeit) und
- Speicherbedarf (kleiner Wert = weniger Speicher).

Mit größerer Tabelle wird für die interne Entschlüsselung der Variablen eine geringere Anzahl von Dekodiervorgängen benötigt, was eine kürzere Interpreter-Laufzeit zur Folge hat. Der Wert dieses Maschinendatums beeinflusst den Bedarf an dynamischen Speicher für die Verwaltung der Bausteine für lokale Anwendervariablen bei REORG, siehe MD28010 $MC_MM_NUM_REORG_LUD_MODULES (Anzahl der Bausteine für lokale Anwendervariablen bei REORG (DRAM)).

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.
</description>
</parameter>
<parameter number="18242" type="DWORD" dim="0">
<name>MM_MAX_SIZE_OF_LUD_VALUE</name>
<brief>Speicherblockgröße für LUD-/GUD-Werte</brief>
<description>Legt die Netto-Speicherblockgröße für LUD/GUD Variablen fest. Jedes NC-Programm, das mindestens eine LUD/GUD Variable definiert, oder Aufrufparameter hat, belegt dann mindestens einen Speicherblock dieser Größe.
Die LUD-/GUD-Variablen eines Programms dürfen den kompletten für den Kanal bestimmten LUD-/GUD-Wertespeicher belegen. Dann steht allerdings für andere Programme kein Speicher mehr zur Verfügung.
Der Speicher für die LUD/GUD Variablen (der für LUD mit dem kanalspezifischen MD28040 $MC_MM_LUD_VALUES_MEM, bzw. für GUD mit dem nckspezifischen MD18150 $MN_MM_GUD_VALUES_MEM festgelegt wird) wird dabei in gleichgroße Stücke der Größe MD18242 $MN_MM_MAX_SIZE_OF_LUD_VALUE aufgeteilt.

Bsp.:
MM_LUD_VALUES_MEM = 12 (kByte brutto)
MM_MAX_SIZE_OF_LUD_VALUE = 660 (Byte netto)
                          + 16 (Byte Verwaltungsdaten pro Block)
                          --------------------------------------
                           676 (Byte brutto)
Dann erhält man 12*1024 / 676 = 18 Speicherblöcke der Größe 660 Bytes.
D.h. 12 NC-Programme können entweder je einen Block belegen, oder ein NC-Programm kann z.B. 18 Variablen vom Typ Frame (dessen Größe ca. 660 Bytes ist) definieren.

Datentyp            Speicherbedarf
REAL                        8 Byte
INT                         4 Byte
BOOL                        1 Byte
CHAR                        1 Byte
STRING                      1 Byte pro Zeichen,
                                   pro String sind 100 Zeichen möglich
AXIS                        4 Byte
FRAME                bis zu 1kByte (je nach Steuerungsmodell)

Korrespondiert mit:
	MD28040 $MC_MM_LUD_VALUES_MEM
	(Speichergröße für lokale Anwendervariablen (DRAM))

Achtung:
	Die gepufferten Daten gehen mit Änderung dieses Maschinendatums verloren!
	Die Größe des NC-Sprachtyps Frame hängt von der maximalen Anzahl von Kanalachsen ab, mit der NCK erzeugt wurde.
	Es gibt NCK-Systemen mit maximalen Kanalachszahlen von 4 bis 20. Bei 20 Achsen hat der Typ Frame dann eine Größe von 660 Bytes.
</description>
</parameter>
<parameter number="18250" type="DWORD" dim="0">
<name>MM_CHAN_HASH_TABLE_SIZE</name>
<brief>Hash-Tabellengröße für kanalspezifische Daten (DRAM)</brief>
<description>Legt die Größe der Hash-Tabelle für kanalspezifische Namen fest. Der eingegebene Wert muss eine Primzahl sein. Die Einstellung erlaubt die Optimierung von

- Interpreter-Laufzeit (kleiner Wert = größere Laufzeit) und
- Speicherbedarf (kleiner Wert = weniger dynamischer Speicher).

Mit größerer Tabelle wird für die interne Entschlüsselung der Variablen eine geringere Anzahl von Dekodiervorgängen benötigt, was eine kürzere Interpreter-Laufzeit zur Folge hat. Der Wert dieses Maschinendatums beeinflusst den Bedarf an dynamischem Speicher.
Pro Kanal ist der Speicherbedarf in Byte der Eingabewert mit 68 multipliziert.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.

Achtung:
	Die gepufferten Daten gehen mit Änderung dieses Maschinendatums verloren!
</description>
</parameter>
<parameter number="18260" type="DWORD" dim="0">
<name>MM_NCK_HASH_TABLE_SIZE</name>
<brief>Hash-Tabellengröße für globale Daten (DRAM)</brief>
<description>Legt die Größe für NCK-spezifische Namen fest. Der eingegebene Wert muss eine Primzahl sein. Die Einstellung erlaubt die Optimierung von

- Interpreter-Laufzeit (kleiner Wert = größere Laufzeit) und
- Speicherbedarf (kleiner Wert = weniger Speicher).

Mit größerer Tabelle wird für die interne Entschlüsselung der Variablen eine geringere Anzahl von Dekodiervorgängen benötigt, was eine kürzere Interpreter-Laufzeit zur Folge hat. Der Wert dieses Maschinendatums beeinflusst den Bedarf an dynamischen Speicher. Der Speicherbedarf in Byte entspricht dem Eingabewert mit 68 multipliziert.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.
</description>
</parameter>
<parameter number="18270" type="DWORD" dim="0" readonly="true">
<name>MM_NUM_SUBDIR_PER_DIR</name>
<brief>Anzahl von Unterverzeichnissen (DRAM)</brief>
<description>Gibt die maximale Anzahl von Unterverzeichnissen an, die in einem Verzeichnis bzw. in einem Unterverzeichnis des passiven Filesystems angelegt werden können.
Der Wert dient lediglich der Information und ist nicht veränderbar.
siehe auch MD18280 $MN_MM_NUM_FILES_PER_DIR (Anzahl von Dateien pro Verzeichnis)
</description>
</parameter>
<parameter number="18280" type="DWORD" dim="0" readonly="true">
<name>MM_NUM_FILES_PER_DIR</name>
<brief>Anzahl von Dateien pro Verzeichnis (DRAM)</brief>
<description>Gibt die maximale Anzahl von Dateien an, die in einem Verzeichnis bzw. in einem Unterverzeichnis des passiven Filesystems angelegt werden können.
Der Wert dient lediglich der Information und ist nicht veränderbar.
siehe auch MD18270 $MN_MM_NUM_SUBDIR_PER_DIR (Anzahl von Unterverzeichnissen pro Verzeichnis)
</description>
</parameter>
<parameter number="18290" type="DWORD" dim="0">
<name>MM_FILE_HASH_TABLE_SIZE</name>
<brief>Hash-Tabellengröße für Dateien eines Verzeichnisses (SRAM)</brief>
<description>Legt die Größe für die Dateien eines Verzeichnisses fest. Der eingegebene Wert muss eine Primzahl sein. Die Einstellung erlaubt die Optimierung von

- Interpreter-Laufzeit (kleiner Wert = größere Laufzeit) und
- Speicherbedarf (kleiner Wert = weniger Speicher).

Der Wert dieses Maschinendatums beeinflusst den Bedarf an statischem Speicher für die Verwaltung von Verzeichnissen, siehe MD18310 $MN_MM_NUM_DIR_IN_FILESYSTEM (Anzahl von Verzeichnissen im passiven Filesystem).

Verwendet wird gepufferter Anwenderspeicher.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung dieses Maschinendatums verloren!
</description>
</parameter>
<parameter number="18300" type="DWORD" dim="0">
<name>MM_DIR_HASH_TABLE_SIZE</name>
<brief>Hash-Tabellengröße für Unterverzeichnisse (SRAM)</brief>
<description>Legt die Größe für die Unterverzeichnisse eines Verzeichnisses fest. Der eingegebene Wert muss eine Primzahl sein. Die Einstellung erlaubt die Optimierung von

- Interpreter-Laufzeit (kleiner Wert = größere Laufzeit) und
- Speicherbedarf (kleiner Wert = weniger Speicher).

Der Wert dieses Maschinendatums beeinflusst den Bedarf an statischem Speicher für die Verwaltung von Verzeichnissen, siehe MD18310 $MN_MM_NUM_DIR_IN_FILESYSTEM (Anzahl von Verzeichnissen im passiven Filesystem).

Verwendet wird gepufferter Anwenderspeicher.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung dieses Maschinendatums verloren!
</description>
</parameter>
<parameter number="18310" type="DWORD" dim="0">
<name>MM_NUM_DIR_IN_FILESYSTEM</name>
<brief>Anzahl von Verzeichnissen im passiven Filesystem (SRAM)</brief>
<description>Das Maschinendatum begrenzt die Anzahl der Verzeichnisse im passiven Filesystem.
Anhand dieses Maschinendatums werden für die Verwaltung der Verzeichnisse Speicher im gepufferter Anwenderspeicher reserviert. Die vom System eingerichteten Verzeichnisse und die Unterverzeichnisse des passiven Filesystems sind in diesem Maschinendatum mit einbezogen. Der Speicherbedarf für die Verwaltung der Verzeichnisse lässt sich folgenderweise ermitteln:


Korrespondiert mit:
	MD18270 $MN_MM_NUM_SUBDIR_PER_DIR
</description>
</parameter>
<parameter number="18320" type="DWORD" dim="0">
<name>MM_NUM_FILES_IN_FILESYSTEM</name>
<brief>Anzahl von Dateien im passiven Filesystem (persistent)</brief>
<description>Legt die Anzahl der verfügbaren Dateien des Teileprogrammspeichers fest. Anhand dieses Maschinendatums werden für die Verwaltung der Dateien Speicher - ca. 320 Byte pro Datei - im persistenten Speicher reserviert. Jede angelegte Datei belegt mindestens ein kByte Speicherplatz für den Filecode. Mit der Überschreitung einer kByte-Grenze Filecode wird für die Datei ein weiteres kByte reserviert.

Verwendet wird gepufferter Anwenderspeicher.

Sonderfälle:
	Die gepufferten Daten gehen mit Änderung des Maschinendatums verloren!

Korrespondiert mit:
	MD18280 $MN_MM_NUM_FILES_PER_DIR
	(Anzahl von Dateien in Verzeichnissen)
</description>
</parameter>
<parameter number="18321" type="DWORD" dim="1">
<name>MM_NUM_SYSTEM_FILES_IN_FS</name>
<brief>Anzahl der System-Files</brief>
<description>Index 0: Anzahl der temporären System-Dateien im passiven Filesystem (siehe auch MD18355 $MN_MM_T_FILE_MEM_SIZE);
         z.B.: Systemtraces
</description>
</parameter>
<parameter number="18342" type="DWORD" dim="1">
<name>MM_CEC_MAX_POINTS</name>
<brief>Maximale Anzahl der Stützpunkte bei Durchhangkompensation (SRAM)</brief>
<description>Das MD bestimmt den Speicherplatz, der für Kompensationstabellen verfügbar ist.

Bei MD18342 $MN_MM_CEC_MAX_POINTS = 0 wird kein Speicher für die Tabelle angelegt und damit ist die Funktion Durchhangkompensation nicht nutzbar.

Vorsicht!

Bei Änderung des MD18342 $MN_MM_CEC_MAX_POINTS[t] wird bei Systemhochlauf automatisch der gepufferte NC-Anwenderspeicher neu eingerichtet. Dabei werden alle Anwenderdaten des batteriegepufferten Anwenderspeichers (z.B. Antriebs- und HMI-Maschinendaten, Werkzeugkorrekturen, Teileprogramme, usw.) gelöscht.

Korrespondiert mit:
	SD41300 $SN_CEC_TABLE_ENABLE[t]
	Auswertung der Durchhangkompensationstabelle [t] freigeben

Literatur:
	/FB/, S7, "Speicherkonfiguration"
</description>
</parameter>
<parameter number="18350" type="DWORD" dim="0">
<name>MM_USER_FILE_MEM_MINIMUM</name>
<brief>Minimale Größe des Teileprogrammspeichers</brief>
<description>Auf SolutionLine Systemen ohne Bedeutung.
</description>
</parameter>
<parameter number="18352" type="DWORD" dim="1">
<name>MM_U_FILE_MEM_SIZE</name>
<brief>Endanwenderspeicher für Teileprogramme/Zyklen/Dateien</brief>
<description>Für PowerLine Steuerungsmodelle ist das Maschinendatum nicht verfügbar bzw. nicht definiert.

Endanwenderspeicher für Dateien im passiven Filesystem ( in kB )

In diesem Speicherbereich liegen verschiedene Arten von Anwenderdaten
z.B.: NC-Teileprogramme, Zyklenprogramme des Endanwenders, Diagnosedateien, ....

Die einstellbaren Werte hängen von der Hard- und Software-Konfiguration ab.
Die einstellbare Größe des Teileprogrammspeichers wird außer dem oberen Grenzwert
durch das MD18230 $MN_MM_USER_MEM_BUFFERED begrenzt und kann zusätzlich
durch eine Softwareoption bestimmt sein.

Index 0 = Größe des gepufferten Teileprogramm- / Zyklenprogrammspeichers
Index 1 = reserviert
Index 2 = reserviert
</description>
</parameter>
<parameter number="18353" type="DWORD" dim="1">
<name>MM_M_FILE_MEM_SIZE</name>
<brief>Speichergröße für Zyklen/Dateien des Maschinenherstellers</brief>
<description>Für PowerLine Steuerungsmodelle ist das Maschinendatum nicht verfügbar bzw. nicht definiert.

Speicher für Dateien des Maschinenherstellers im passiven Filesystem ( in kB )

In diesem Speicherbereich des passiven Filesystems liegen die Dateien des Maschinenherstellers
z.B.: Zyklenprogramme

Die einstellbaren Werte hängen von der Hard- und Software-Konfiguration ab.
Die einstellbare Größe des Speichers wird außer dem oberen Grenzwert durch
MD18230 $MN_MM_USER_MEM_BUFFERED begrenzt.

Index 0 = Mindestgröße des gepufferten (persistenten) Teileprogramm- / Zyklenprogrammspeichers
Index 1 = reserviert
Index 2 = reserviert
</description>
</parameter>
<parameter number="18354" type="DWORD" dim="1">
<name>MM_S_FILE_MEM_SIZE</name>
<brief>Größe des Siemens-Zyklenprogrammspeichers</brief>
<description>Speicher für Dateien des Steuerungsherstellers im passiven Filesystem ( in kB )

In diesem Speicherbereich des passiven Filesystems liegen die Dateien des Steuerungsherstellers, z.B.: Zyklenprogramme, Systemdateien

Die einstellbaren Werte hängen von der Hard- und Software-Konfiguration ab.
Die einstellbare Größe des Speichers wird außer dem oberen Grenzwert
für den Index = 0 durch die Größe des verfügbaren gepufferten Speichers (siehe MD18230 $MN_MM_USER_MEM_BUFFERED) begrenzt,
für den Index = 2 durch die Größe des intern verfügbaren gepufferten (SRAM) Speichers begrenzt.

Index 0 = Größe des gepufferten Zyklenprogrammspeichers
Index 2 = Größe des gepufferten Speichers für Systemdateien im SRAM. z.B.. Ablageort der NRK Fault-Datei.
</description>
</parameter>
<parameter number="18355" type="DWORD" dim="0">
<name>MM_T_FILE_MEM_SIZE</name>
<brief>Speichergröße für temporäre Dateien</brief>
<description>Speicher für temporäre Dateien im passiven Filesystem ( in kB ) z.B.: Kompilate von Zyklen (Vorverarbeitung), Zyklen auf CF, Systemtraces
</description>
</parameter>
<parameter number="18356" type="DWORD" dim="1">
<name>MM_E_FILE_MEM_SIZE</name>
<brief>Speichergröße für die Zwischenablage von externen Files</brief>
<description>Speicher für die Zwischenablage von externen Files im passiven Filesystem ( in kB )

Die einstellbaren Werte hängen von der Hard- und Software-Konfiguration ab.
Die einstellbare Größe des Speichers wird außer dem oberen Grenzwert
für den Index = 0 durch MD18230 $MN_MM_USER_MEM_BUFFERED begrenzt.
für den Index = 1 reserviert
für den Index = 2 reserviert

Index 0 = Größe der gepufferten Zwischenablage
Index 1 = reserviert
Index 2 = reserviert
</description>
</parameter>
<parameter number="18357" type="DWORD" dim="0" readonly="true">
<name>MM_EES_FILE_MEM_SIZE</name>
<brief>Speichergröße der Buffer für EES</brief>
<description>Speichergröße der Buffer für die Funktion "Execution from External Storage" im passiven Filesystem ( in kB )
</description>
</parameter>
<parameter number="18360" type="DWORD" dim="0">
<name>MM_EXT_PROG_BUFFER_SIZE</name>
<brief>FIFO-Buffer Größe für Abarbeiten von Extern (DRAM)</brief>
<description>Für jede Programmebene (Hauptprogramm oder Unterprogramm), die von extern abgearbeitet wird (Nachladebetrieb), wird auf NCK ein FIFO-Puffer benötigt.

Mit MD18360 $MN_MM_EXT_PROG_BUFFER_SIZE wird die Größe eines FIFO-Puffers in kByte vorgegeben.

Mit MD18360 $MN_MM_EXT_PROG_NUM wird die Anzahl der gleichzeitig zur Verfügung stehenden FIFO-Puffer eingestellt.

Im Hochlauf wird die aus der Multiplikation von MD18360 $MN_MM_EXT_PROG_BUFFER_SIZE und MD18362 $MN_MM_EXT_PROG_NUM ermittelte Speichergröße im DRAM reserviert.

Überschreitet der angegebene Wert den zur Verfügung stehenden Speicherplatz, so wird dies beim Schreiben des Maschinendatums mit Alarm 4077 gemeldet.

Literatur:
	/PGA/ Programmieranleitung Arbeitsvorbereitung, Kap. 2
</description>
</parameter>
<parameter number="18362" type="BYTE" dim="0">
<name>MM_EXT_PROG_NUM</name>
<brief>Anzahl der gleichzeitig von Extern abarbeitbaren Programmebenen</brief>
<description>Anzahl der Programmebenen, die sich NCK-weit gleichzeitig im Modus "Abarbeiten von Extern" befinden können.
Für die Kommunikation HMI &lt;-&gt; NCK werden beim "Abarbeiten von Extern" Systemressourcen belegt. Mit dem Maschinendatum MD18362 $MN_EXT_PROG_NUM wird die Anzahl der möglichen Programmebenen festgelegt.
Im Hochlauf wird der Speicherplatz von MD18360 $MN_MM_EXT_PROG_BUFFER_SIZE * MD18362 $MN_MM_EXT_PROG_NUM reserviert. Wird bei der Programmbearbeitung festgestellt, dass alle Ressourcen belegt sind, wird dies mit Alarm 14600 gemeldet.
</description>
</parameter>
<parameter number="18365" type="BYTE" dim="0" readonly="true">
<name>MM_EES_ENABLE</name>
<brief>Bereitstellung der Funktion EES</brief>
<description>Es werden die Ressourcen für die Funktion "Execution from External Storage EES" bereitgestellt.
0: Die Funktion EES ist nicht nutzbar.
1: Die Funktion EES ist nutzbar. Teileprogramme können von einem externen Speicher abgearbeitet werden.
</description>
</parameter>
<parameter number="18366" type="DWORD" dim="0">
<name>MM_EES_NUM_BUFFERS</name>
<brief>Anzahl der Buffer pro Kanal für die Funktion EES</brief>
<description>Anzahl der Buffer pro Kanal, die gleichzeitig von einem externen Speicher abgearbeitet werden können.
Diese bestimmt die Anzahl der Programmebenen, die gleichzeitig von einem externen Speicher abgearbeitet werden können.
</description>
</parameter>
<parameter number="18367" type="DWORD" dim="0">
<name>MM_EES_BUFFER_SIZE</name>
<brief>Größe der Buffer für EES</brief>
<description>Größe der Buffer der Funktion "Execution from External Storage EES" im passiven Filesystem ( in kB )
</description>
</parameter>
<parameter number="18370" type="DWORD" dim="1">
<name>MM_PROTOC_NUM_FILES</name>
<brief>Maximale Anzahl von Protokoll-Files.</brief>
<description>Maximale Anzahl von Protokoll-Files im passiven Filesystem.

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18371" type="DWORD" dim="1">
<name>MM_PROTOC_NUM_ETPD_STD_LIST</name>
<brief>Anzahl von Standard-Datenlisten ETPD.</brief>
<description>Anzahl von Standard-Datenlisten im BTSS-Baustein ETPD (user-spezifisch).

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18372" type="DWORD" dim="1">
<name>MM_PROTOC_NUM_ETPD_OEM_LIST</name>
<brief>Anzahl von OEM-Datenlisten ETPD.</brief>
<description>Anzahl von OEM-Datenlisten im BTSS-Baustein ETPD (user-spezifisch).

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18373" type="DWORD" dim="1">
<name>MM_PROTOC_NUM_SERVO_DATA</name>
<brief>Anzahl von Servo-Daten für Protokoll.</brief>
<description>Anzahl von Servo-Daten, die gleichzeitig protokollierbar sein sollen (user-spezifisch).

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18374" type="DWORD" dim="1">
<name>MM_PROTOC_FILE_BUFFER_SIZE</name>
<brief>Größe des Puffers eines Protokollfiles.</brief>
<description>Größe des Datenpuffers zwischen der IPO- und Vorlauf-Zeitebene eines Protokollfiles [ Bytes ].

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18375" type="BYTE" dim="1">
<name>MM_PROTOC_SESS_ENAB_USER</name>
<brief>Für Sessions freigegebene User.</brief>
<description>User, die für die Session-Verwaltung zur Verfügung stehen

Die einzelnen Werte betreffen die User der Protokollierfunktion, welche folgenden Funktionen zugeordnet sind:
0: Reserviert für Systemfunktionen: Mitzeichnen, Simulation, Synchronaktionen-Analyse
1: Reserviert für Systemfunktionen: Ermittlung der Programm-Laufzeiten, Multi-Step-Editor
2: Reserviert für OEM-Applikationen
3: Reserviert für OEM-Applikationen
4: Reserviert für OEM-Applikationen
5: Reserviert für Systemfunktionen: Trace
6: Reserviert für Systemfunktionen: Trace
7: Reserviert für Systemfunktionen: Trace
8: Reserviert für Systemfunktionen: Trace
9: Reserviert für Systemfunktionen: Fahrtenschreiber
</description>
</parameter>
<parameter number="18390" type="UDWORD" dim="0" display="HEX">
<name>MM_COM_COMPRESS_METHOD</name>
<brief>Unterstützte Komprimierverfahren.</brief>
<description>Einstellung welche Komprimierverfahren unterstützt werden.
</description>
</parameter>
<parameter number="18400" type="DWORD" dim="0">
<name>MM_NUM_CURVE_TABS</name>
<brief>Anzahl der Kurventabellen (SRAM)</brief>
<description>Gibt die Zahl der Kurventabellen an, die maximal im Gesamtsystem im SRAM angelegt werden können. Eine Kurventabelle besteht aus mehreren Kurvensegmenten.
Korrespondiert mit:
	MD18402 $MN_MM_NUM_CURVE_SEGMENTS
</description>
</parameter>
<parameter number="18402" type="DWORD" dim="0">
<name>MM_NUM_CURVE_SEGMENTS</name>
<brief>Anzahl der Kurvensegmente (SRAM)</brief>
<description>Gibt die Zahl der Kurvensegmente an, die maximal im Gesamtsystem im SRAM angelegt werden können. Die Kurvensegmente sind Bestandteil einer Kurventabelle.
Korrespondiert mit:
	MD18400 $MN_MM_NUM_CURVE_TABS
</description>
</parameter>
<parameter number="18403" type="DWORD" dim="0">
<name>MM_NUM_CURVE_SEG_LIN</name>
<brief>Anzahl der linearen Kurvensegmente (SRAM)</brief>
<description>Anzahl der NCK-weit verfügbaren linearen Kurvensegmente im SRAM.
Eine Kurventabelle kann aus "normalen" Kurvensegmenten und aus linearen Segmenten bestehen. Die Anzahl der "normalen" Kurvensegmente im SRAM wird durch das MD18402 $MN_MM_NUM_CURVE_SEGMENTS festgelegt, diese Kurvensegmente können Polynome aufnehmen.
Lineare Kurvensegmente können nur Geraden aufnehmen.

Diese linearen Kurvensegmente werden im gepufferten Speicher angelegt.
</description>
</parameter>
<parameter number="18404" type="DWORD" dim="0">
<name>MM_NUM_CURVE_POLYNOMS</name>
<brief>Anzahl der Kurventabellenpolynome (SRAM)</brief>
<description>Gibt die Gesamtzahl der Polynome für Kurventabellen, die maximal im Gesamtsystem im SRAM angelegt werden können. Die Polynome sind Bestandteil eines Kurvensegments. Für ein Kurvensegment werden maximal 3 Polynome benötigt. In der Regel werden nur 2 Polynome je Kurvensegment verwendet.
Korrespondiert mit:
	MD18400 $MN_MM_NUM_CURVE_TABS
	MD18402 $MN_MM_NUM_CURVE_SEGMENTS
</description>
</parameter>
<parameter number="18406" type="DWORD" dim="0">
<name>MM_NUM_CURVE_TABS_DRAM</name>
<brief>Anzahl der Kurventabellen (DRAM)</brief>
<description>Anzahl der NCK-weit verfügbaren Kurventabellen im DRAM.
Die Kurventabellen werden entweder im gepufferten Speicher oder im dynamischen Speicher angelegt.

Mit diesem MD wird die Anzahl der Kurventabellen im dynamischen Speicher (DRAM) festgelegt.
</description>
</parameter>
<parameter number="18408" type="DWORD" dim="0">
<name>MM_NUM_CURVE_SEGMENTS_DRAM</name>
<brief>Anzahl der Kurvensegmente (DRAM)</brief>
<description>Anzahl der NCK-weit verfügbaren Polynom Kurvensegmente im DRAM.
Die Kurvensegmente werden entweder im gepufferten Speicher oder im dynamischen Speicher angelegt angelegt.

Mit diesem MD wird die Anzahl der Kurvensegmente im dynamischen Speicher (DRAM) festgelegt.
</description>
</parameter>
<parameter number="18409" type="DWORD" dim="0">
<name>MM_NUM_CURVE_SEG_LIN_DRAM</name>
<brief>Anzahl der linearen Kurvensegmente (DRAM)</brief>
<description>Anzahl der NCK-weit verfügbaren linearen Kurvensegmente im DRAM
Eine Kurventabelle kann aus "normalen" Kurvensegmenten und aus linearen Segmenten bestehen. Die Anzahl der "normalen" Kurvensegmente im DRAM wird durch das MD18408 $MN_MM_NUM_CURVE_SEGMENTS_DRAM festgelegt, diese Kurvensegmente können Polynome aufnehmen. Lineare Kurvensegmente können nur Geraden aufnehmen.

Die Kurvensegmente werden entweder im gepufferten Speicher oder im dynamischen Speicher angelegt. Mit diesem MD wird die Anzahl der Kurvensgemente im dynamischen Speicher (DRAM) festgelegt.
</description>
</parameter>
<parameter number="18410" type="DWORD" dim="0">
<name>MM_NUM_CURVE_POLYNOMS_DRAM</name>
<brief>Anzahl der Kurventabellenpolynome (DRAM)</brief>
<description>Anzahl der NCK-weit verfügbaren Polynome für Kurventabellen im DRAM.
Die Polynome für Kurventabellen werden entweder im gepufferten Speicher oder im dynamischen Speicher angelegt.

Mit diesem MD wird die Anzahl der Polynome für Kurventabellen im dynamischen Speicher (DRAM) festgelegt.
</description>
</parameter>
<parameter number="18450" type="DWORD" dim="0">
<name>MM_NUM_CP_MODULES</name>
<brief>Max. Anz. der CP-Module</brief>
<description>Anzahl der NCK-weit verfügbaren CP-Koppelmodule

Das MD definiert die max. zulässige Anzahl von CP-Kopplungen und reserviert den erforderlichen dynamischen Speicher (DRAM).
</description>
</parameter>
<parameter number="18452" type="DWORD" dim="0">
<name>MM_NUM_CP_MODUL_LEAD</name>
<brief>Maximale Anzahl der CP-Leitwerte</brief>
<description>Anzahl der NCK-weit verfügbaren CP-Leitwerte.

Das MD definiert die maximal zulässige Anzahl von CP-Leitwerten und reserviert den erforderlichen dynamischen Speicher (DRAM).
</description>
</parameter>
<parameter number="18500" type="DWORD" dim="0">
<name>MM_EXTCOM_TASK_STACK_SIZE</name>
<brief>Stackgröße für externe Kommunikationstask (DRAM)</brief>
<description>Festlegung der Größe (kB) des Stacks für die externe Kommunikation. Verwendet wird der dynamische Speicherbereich.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.
</description>
</parameter>
<parameter number="18502" type="DWORD" dim="0">
<name>MM_COM_TASK_STACK_SIZE</name>
<brief>Stackgröße in kB für Kommunikationstask (DRAM)</brief>
<description>Größe der Stacks der Kommunikations-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18510" type="DWORD" dim="0">
<name>MM_SERVO_TASK_STACK_SIZE</name>
<brief>Stackgröße der Servotask (DRAM)</brief>
<description>Legt die Größe (kB) des Stacks der SERVO-Task fest. Es wird dazu der dynamische Speicherbereich verwendet.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.
</description>
</parameter>
<parameter number="18512" type="DWORD" dim="0">
<name>MM_IPO_TASK_STACK_SIZE</name>
<brief>Stackgröße der Ipo-Task (DRAM)</brief>
<description>Größe der Stacks der Ipo-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18520" type="DWORD" dim="0">
<name>MM_DRIVE_TASK_STACK_SIZE</name>
<brief>Stackgröße der Antriebs-Kommunikations-Sub-Task (DRAM)</brief>
<description>Die Größe (kB) des Stacks der Antriebs-Kommunikations-Sub-Task wird mit diesem Datum festgelegt.
Der Stack wird im dynamischen Speicherbereich hinterlegt.

Hinweis:
	Das Maschinendatum wird von der Steuerung intern besetzt und ist vom Anwender nicht zu verändern.
</description>
</parameter>
<parameter number="18540" type="DWORD" dim="0">
<name>MM_PLC_TASK_STACK_SIZE</name>
<brief>Stackgröße der PLC-Task (DRAM)</brief>
<description>Größe der Stacks der PLC-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18541" type="DWORD" dim="0">
<name>MM_PLCBG_TASK_STACK_SIZE</name>
<brief>Stackgröße der PLC-Hintergrund-Task (DRAM)</brief>
<description>Größe der Stacks der PLC-Hintergrund-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18542" type="DWORD" dim="0">
<name>MM_PLCINT_TASK_STACK_SIZE</name>
<brief>Stackgröße der servosynch. PLC-Task (DRAM)</brief>
<description>Größe des Stacks der servosynchronen PLC-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18550" type="DWORD" dim="0">
<name>MM_PREPJOB_TASK_STACK_SIZE</name>
<brief>Stackgröße der asynchronen, parallelen PrepJob-Task (DRAM)</brief>
<description>Größe des Stacks der asynchronen, parallelen PrepJob-Task in kB.
Verwendet wird dynamischer Speicher.
</description>
</parameter>
<parameter number="18600" type="DWORD" dim="0">
<name>MM_FRAME_FINE_TRANS</name>
<brief>Feinverschiebung bei FRAME (SRAM)</brief>
<description>0:	Die Feinverschiebung kann nicht eingegeben bzw. nicht programmiert werden.
	Bei ausgeschalteter Feinverschiebung werden max. 10 KB SRAM gespart, (abhängig von MD28080 $MC_MM_NUM_USER_FRAMES).
1:	Die Feinverschiebung für alle einstellbare Frames, das Basisframe und das programmierbare Frame ist durch Bedienung oder über Programm möglich.
</description>
</parameter>
<parameter number="18601" type="DWORD" dim="0">
<name>MM_NUM_GLOBAL_USER_FRAMES</name>
<brief>Anzahl der globalen vordefinierten Anwender-Frames (SRAM)</brief>
<description>Anzahl der globalen vordefinierten Anwender-Frames.
Der Wert entspricht der Anzahl der Feldelemente für das vordefinierte Feld $P_UIFR[].
Ist der Wert des Datums größer 0, dann sind alle einstellbaren Frames nur global. Das MD28080 $MC_MM_NUM_USER_FRAMES wird dann ignoriert.
</description>
</parameter>
<parameter number="18602" type="DWORD" dim="0">
<name>MM_NUM_GLOBAL_BASE_FRAMES</name>
<brief>Anzahl der globalen Basisframes (SRAM)</brief>
<description>Anzahl der NCU-Basisframes.
Der Wert entspricht der Anzahl für das vordefinierte Feld $P_NCBFR[].
</description>
</parameter>
<parameter number="18603" type="DWORD" dim="0">
<name>MM_NUM_GLOBAL_G_FRAMES</name>
<brief>Anzahl der globalen Grinding Frames (SRAM)</brief>
<description>Anzahl der globalen Grinding Frames.
Der Wert entspricht der Anzahl der Feldelemente für das vordefinierte Feld $P_GFR[].
Ist der Wert des Datums größer 0, dann sind alle einstellbaren Frames nur global. Das MD28079 $MC_MM_NUM_G_FRAMES wird dann ignoriert.
</description>
</parameter>
<parameter number="18604" type="DWORD" dim="0">
<name>MM_GFRAME_FINE_TRANS</name>
<brief>Feinverschiebung bei Grinding Frames</brief>
<description>Steuert das Schreibrecht bzgl. der Feinverschiebung für alle Grinding Frames. Hierbei bedeutet
0:	Das Beschreiben der Feinverschiebung für ein Grinding Frame ist weder über Bedienung noch über Programm möglich.
1:	Das Beschreiben der Feinverschiebung für ein Grinding Frame ist über Bedienung oder Programm (abhängig von MD18600 $MC_MM_FRAME_FINE_TRANS) möglich.
</description>
</parameter>
<parameter number="18660" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_REAL</name>
<brief>Anzahl der projektierbaren GUD Variablen vom Typ Real</brief>
<description>Mit dem MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[ ] können die einzelnen GUD Bausteine um zusätzliche kanalspezifische Parameterbereiche vom Typ Real erweitert werden. Die Unterscheidung der GUD Bausteine erfolgt über den Feldindex
MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[0] =  &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[1] =  &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[2] =  &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[3] =  &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18660 $MN_MM_NUM_SYNACT_GUD_REAL[8] =  &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp REAL
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
vordefinierte Namen:
	SYG_RS[ ] -&gt; Synact Parameter vom Typ Real im SGUD Baustein
	SYG_RM[ ] -&gt; Synact Parameter vom Typ Real im MGUD Baustein
	SYG_RU[ ] -&gt; Synact Parameter vom Typ Real im UGUD Baustein
	SYG_R4[ ] -&gt; Synact Parameter vom Typ Real im GUD4 Baustein
	....
	SYG_R9[ ] -&gt; Synact Parameter vom Typ Real im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18661" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_INT</name>
<brief>Anzahl der projektierbaren GUD Variablen vom Typ Integer</brief>
<description>Mit dem MD18661 $MN_MM_NUM_SYNACT_GUD_INT[ ] können die einzelnen GUD Bausteine um zusätzliche kanalspezifische Parameterbereiche vom Typ Integer erweitert werden. Die Unterscheidung der GUD Bausteine erfolgt über den Feldindex:
MD18661 $MN_MM_NUM_SYNACT_GUD_INT[0] =  &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18661 $MN_MM_NUM_SYNACT_GUD_INT[1] =  &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18661 $MN_MM_NUM_SYNACT_GUD_INT[2] =  &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18661 $MN_MM_NUM_SYNACT_GUD_INT[3] =  &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18661 $MN_MM_NUM_SYNACT_GUD_INT[8] =  &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp BOOL
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
vordefinierte Namen:
	SYG_IS[ ] -&gt; Synact Parameter vom Typ Int im SGUD Baustein
	SYG_IM[ ] -&gt; Synact Parameter vom Typ Int im MGUD Baustein
	SYG_IU[ ] -&gt; Synact Parameter vom Typ Int im UGUD Baustein
	SYG_I4[ ] -&gt; Synact Parameter vom Typ Int im GUD4 Baustein
	....
	SYG_I9[ ] -&gt; Synact Parameter vom Typ Int im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18662" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_BOOL</name>
<brief>Anzahl der projektierbare GUD Variablen vom Typ Boolean</brief>
<description>Mit dem MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[ ] können die einzelnen GUD Bausteine um zusätzliche kanalspezifische Parameterbereiche vom Typ Boolean erweitert werden. Die Unterscheidung der GUD Bausteine erfolgt über den Feldindex:
MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[0] = &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[1] = &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[2] = &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[3] = &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18662 $MN_MM_NUM_SYNACT_GUD_BOOL[8] = &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp BOOL
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
vordefinierte Namen:
	SYG_BS[ ] -&gt; Synact Parameter vom Typ Boolean im SGUD Baustein
	SYG_BM[ ] -&gt; Synact Parameter vom Typ Boolean im MGUD Baustein
	SYG_BU[ ] -&gt; Synact Parameter vom Typ Boolean im UGUD Baustein
	SYG_B4[ ] -&gt; Synact Parameter vom Typ Boolean im GUD4 Baustein
	....
	SYG_B9[ ] -&gt; Synact Parameter vom Typ Boolean im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18663" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_AXIS</name>
<brief>Anzahl der projektierbaren GUD Variablen vom Typ Axis</brief>
<description>Mit dem MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[ ] können die einzelnen GUD Bausteine um zusätzliche kanalspezifische Parameterbereiche vom Typ Achse erweitert werden. Die Unterscheidung der GUD Bausteine erfolgt über den Feldindex:
MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[0] = &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[1] = &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[2] = &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[3] = &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18663 $MN_MM_NUM_SYNACT_GUD_AXIS[8] = &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp AXIS
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
vordefinierte Namen:
	SYG_AS[ ] -&gt; Synact Parameter vom Typ Achse im SGUD Baustein
	SYG_AM[ ] -&gt; Synact Parameter vom Typ Achse im MGUD Baustein
	SYG_AU[ ] -&gt; Synact Parameter vom Typ Achse im UGUD Baustein
	SYG_A4[ ] -&gt; Synact Parameter vom Typ Achse im GUD4 Baustein
	....
	SYG_A9[ ] -&gt; Synact Parameter vom Typ Achse im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18664" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_CHAR</name>
<brief>Projektierbare GUD Variable Typ Char</brief>
<description>Mit dem MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[ ] können die
einzelnen GUD  Bausteine um zusätzliche kanalspezifische
Parameterbereiche vom Typ Char erweitert werden. Die Unterscheidung
der GUD Bausteine erfolgt über den Feldindex:
MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[0] = &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[1] = &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[2] = &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[3] = &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18664 $MN_MM_NUM_SYNACT_GUD_CHAR[8] = &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp CHAR
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
vordefinierte Namen:
   SYG_CS[ ] -&gt; Synact Parameter vom Typ Char im SGUD Baustein
   SYG_CM[ ] -&gt; Synact Parameter vom Typ Char im MGUD Baustein
   SYG_CU[ ] -&gt; Synact Parameter vom Typ Char im UGUD Baustein
   SYG_C4[ ] -&gt; Synact Parameter vom Typ Char im GUD4 Baustein
   ....
   SYG_C9[ ] -&gt; Synact Parameter vom Typ Char im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über
Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18665" type="DWORD" dim="1">
<name>MM_NUM_SYNACT_GUD_STRING</name>
<brief>Projektierbare GUD Variable Typ STRING</brief>
<description>Mit dem MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[ ] können die
einzelnen GUD  Bausteine um zusätzliche kanalspezifische
Parameterbereiche vom Typ STRING erweitert werden. Die Unterscheidung
der GUD Bausteine erfolgt über den Feldindex:
MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[0] = &lt;wert&gt; -&gt; Erweiterung des SGUD Bausteins
MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[1] = &lt;wert&gt; -&gt; Erweiterung des MGUD Bausteins
MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[2] = &lt;wert&gt; -&gt; Erweiterung des UGUD Bausteins
MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[3] = &lt;wert&gt; -&gt; Erweiterung des GUD4 Bausteins
MD18665 $MN_MM_NUM_SYNACT_GUD_STRING[8] = &lt;wert&gt; -&gt; Erweiterung des GUD9 Bausteins
Es werden jeweils Felder mit folgenden Eigenschaften angelegt:
Datentyp STRING
Feldgröße entsprechend  &lt;wert&gt; des jeweiligen Maschinendatums
Länge des Strings maximal 31 Zeichen.
vordefinierte Namen:
   SYG_SS[ ] -&gt; Synact Parameter vom Typ String im SGUD Baustein
   SYG_SM[ ] -&gt; Synact Parameter vom Typ String im MGUD Baustein
   SYG_SU[ ] -&gt; Synact Parameter vom Typ String im UGUD Baustein
   SYG_S4[ ] -&gt; Synact Parameter vom Typ String im GUD4 Baustein
   ....
   SYG_S9[ ] -&gt; Synact Parameter vom Typ String im GUD9 Baustein
die Parameter können sowohl vom Teileprogramm als auch über
Synchronaktionen gelesen und geschrieben werden.
</description>
</parameter>
<parameter number="18700" type="DWORD" dim="0">
<name>MM_SIZEOF_LINKVAR_DATA</name>
<brief>Größe des NCU-Link-Variablen-Speichers</brief>
<description>Anzahl Bytes des NCU-Link-Speichers für die Variablen $A_DLx.

Hinweis: überschreitet die Anzahl der adressierbaren NCU-Link-Variablen den Wert 32767, so können Variablen mit einem Index über dieser Grenze nicht im Diagnosebild, etc. visualisiert werden. Funktional stehen sie dennoch zur Verfügung.
</description>
</parameter>
<parameter number="18710" type="DWORD" dim="0">
<name>MM_NUM_AN_TIMER</name>
<brief>Anzahl der globalen Zeitvariablen für Synchronaktionen</brief>
<description>Anzahl der globalen Zeitvariablen für Bewegungssynchronaktionen (DRAM)
</description>
</parameter>
<parameter number="18720" type="DWORD" dim="0">
<name>MM_SERVO_FIFO_SIZE</name>
<brief>Sollwert für Puffergröße zwischen IPO und Lageregelung</brief>
<description>Das Maschinendatum legt die Größe des Sollwertpuffers zwischen Interpolator und Lagereglung fest bzw. wirkt sich unmittelbar auf den Bedarf an dynamischem Anwender-Speicher aus.

Im Standardfall ist das 2. Wenn mehrere NCUs für z.B. Rundtaktmaschinen über NCU-Link verbunden sind, sollte der Wert auf allen NCUs auf 3 gesetzt werden. Dadurch wird die Übertragungszeit von Sollwerten über den Link ausgeglichen.

Bei einer Leitwertapplikation (z.B. Königswelle) sollte der Wert nur auf der NCU, die den Leitwert erzeugt auf 4 gesetzt werden, auf den anderen NCUs sollte die Voreinstellung 2 erhalten bleiben.

Beachten:
Jede Vergrößerung des Wertes erzeugt in Regelkreisen, die über den Interpolator geschlossen werden, eine weitere Totzeit.

Sind in einem NCU-Verband die Ipo-Zeiten der NCUs verschieden zueinander eingestellt, so findet die Link-Kommunikation nur in dem langsamsten Ipo-Takt statt. Das MD muss entsprechend dem Verhältnis des Ipo-Taktes der NCU zu dem langsamsten Ipo-Takt im NCU-Verband, erhöht werden, um eine synchrone Ausgabe der Sollwerte an die Antriebsschnittstelle zu erreichen. Die Formel dafür lautet:
MM_SERVO_FIFO_SIZE = 2 * IPO-Takt-Verhältnis + 1

Beispiel:
Bei einem Ipo-Takt Verhältnis 4:1 sollte auf der schnellen NCU der Wert statt 3 auf 9 gesetzt werden. Auf der langsamen NCU muss der Wert 3 eingestellt werden.
</description>
</parameter>
<parameter number="18730" type="DWORD" dim="0">
<name>MM_MAXNUM_ALARM_ACTIONS</name>
<brief>Länge der Aktionsliste bei Alarmen</brief>
<description>Maximale Anzahl der Alarmaktionen, die beibehalten werden. Hierbei handelt es sich um die Länge der Aktionsliste bei Alarmen.
</description>
</parameter>
<parameter number="18780" type="UDWORD" dim="0" display="HEX">
<name>MM_NCU_LINK_MASK</name>
<brief>Aktivierung der NCU-Link Kommunikation</brief>
<description>Aktivierung NCU-Link-Kommunikation
Bitcodiertes Aktivierungsdatum. D.h. die NCU-Link-Kommunikation kann in verschiedenen Ausprägungen aktiviert werden.
Bitcodiertes Aktivierungsdatum:
Bit 0 = 0x1: Link-Kommunikation soll aktiviert werden.
Bit 1 = 0x2: reserviert
Bit 2 = 0x4: Erweiterte Suche nach Link-SDBs
Die Suche nach den SDBs erfolgt zusätzlich auf den folgenden Verzeichnisse:
-/user/sinumerik/sdb/...
-/oem/sinumerik/sdb/...
-/addon/sinumerik/sdb/...
Die Suche-Reihenfolge erfolgt wie üblich zurerst über user,oem,addon und zum Schluss auf dem siemens Verzeichnis

(siehe Beschreibung FAST_IPO_LINK)

Nicht relevant bei:
	Systemen ohne Link-Modulen

Korrespondiert mit:
	MD30560 $MA_IS_LOCAL_LINK_AXIS,
	MD12510 $MN_NCU_LINKNO,
	MD12520 $MN_LINK_TERMINATION,
	MD18782 $MN_MM_LINK_NUM_OF_MODULES,
	MD12540 $MN_LINK_BAUDRATE_SWITCH,
	MD12550 $MN_LINK_RETRY_CTR
</description>
</parameter>
<parameter number="18781" type="DWORD" dim="0">
<name>NCU_LINK_CONNECTIONS</name>
<brief>Anzahl interner Linkverbindungen</brief>
<description>Wert = 0
Die Software errechnet die internen Link-Verbindungen selbst.

Wert &gt; 0
Anzahl der internen Linkverbindung von jeder NCU zu jeder anderen NCU.
Diese Linkverbindungen nehmen die nicht zyklischen Nachrichten auf.
Jede dieser Verbindungen kann 240 Byte Rohdaten übertragen.

Nicht zyklische Nachrichten fallen bei Alarmen, Container-Switches und Linkvariablen an.
</description>
</parameter>
<parameter number="18782" type="UDWORD" dim="0" display="DECIMAL">
<name>MM_LINK_NUM_OF_MODULES</name>
<brief>Anzahl der NCU_Link Module</brief>
<description>LINK_NUM_OF_MODULES gibt an, wieviele Link-Module an der Link-Kommunikation teilnehmen.
</description>
</parameter>
<parameter number="18788" type="UDWORD" dim="1" display="HEX">
<name>MM_CC_STATION_CHAN_MASK</name>
<brief>Kanalbitmaske zum Anlegen von CC-Stationen</brief>
<description>Maschinendaten zum kanalspezifischen Anlegen spezieller zusätzlicher Software-Stationen für Compile-Zyklen.
Einzutragen ist eine Bitmaske mit gesetzten Bits für die Kanäle, in denen ein Compile-Zyklus die jeweilige Station benutzen soll.
Bedeutung der einzelnen Array-Elemente:

MD18788 $MN_MM_CC_STATION_CHAN_MASK[0]:
Legt eine CC-Station am Ende der Geometrie-Aufbereitung und vor der Geschwindigkeitenplanung in der Präparationstask an. Dort kann eine Compile-Zyklen-Applikation Sätze puffern und deren Inhalte manipulieren.

MD18788 $MN_MM_CC_STATION_CHAN_MASK[1]:
Legt eine weitere CC-Station an, die direkt nach der ersten CC-Station ( s.o. ) gerufen wird und unabhängig von dieser Manipulationen der internen Satzinhalte erlaubt.

MD18788 $MN_MM_CC_STATION_CHAN_MASK[2]:
Legt eine weitere CC-Station in der Präparationstask an, die direkt vor der Werkzeugradiuskorrektur gerufen wird und Manipulationen der internen Satzinhalte erlaubt.
</description>
</parameter>
<parameter number="18790" type="DWORD" dim="0">
<name>MM_MAX_TRACE_LINK_POINTS</name>
<brief>Größe des Tracedatenbuffers für NCU-Link</brief>
<description>MM_MAX_TRACE_LINK_DATAPOINTS legt die Größe eines Internen Datenpuffers fest, der die Trace-Aufzeichnungen für die NCU-Link-Funktionalität enthält.
Das MD wird nur dann ausgewertet, wenn in MD18792 $MN_MM_TRACE_LINK_DATA_FUNCTION, Bit 0 gesetzt ist.

Korrespondiert mit:
	MD22708 $MC_TRACE_SCOPE_MASK,
	MD22714 $MC_MM_TRACE_DATA_FUNCTION,
	MD28180 $MC_MM_MAX_TRACE_DATAPOINTS
	MD22700 $MC_TRACE_STARTTRACE_EVENT,
	MD22702 $MC_TRACE_STARTTRACE_STEP,
	MD22704 $MC_TRACE_STOPTRACE_EVENT,
	MD22706 $MC_TRACE_STOPTRACE_STEP,
	MD22710 $MC_TRACE_VARIABLE_NAME,
	MD22712 $MC_TRACE_VARIABLE_INDEX,
	MD18792 $MN_MM_TRACE_LINK_DATA_FUNCTION
</description>
</parameter>
<parameter number="18792" type="UDWORD" dim="0" display="HEX">
<name>MM_TRACE_LINK_DATA_FUNCTION</name>
<brief>Spezifiziert die Inhalte des NCU-Link-Trace-Files</brief>
<description>Der NCU-Link versendet und empfängt in jedem Interpolationstakt 32 Puffer mit 240 Byte Länge.
Diese Buffer werden in einem FIFO (FirstIn-FirstOut) Speicher der Länge MD18790 $MN_MM_MAX_TRACE_LINK_POINTS gerettet, und beim Auftreten eines "Trigger-Ereignisses" (z.B. Cancel-Alarm-Taste siehe MD22704 $MC_TRACE_STOPTRACE_EVENT und MD22700 $MC_TRACE_STARTTRACE_EVENT) in ein File geschrieben (Für den 1.Kanal: ncsctr01.mpf).

Das Maschinendatum ist als Bitmaske aufzufassen und hat folgende Bedeutung:
BIT0 = 1
	Schaltet das NCU-Link-Trace-File ein.
	Nur wenn dieses Bit gesetzt ist, werden die anderen ausgewertet!
	Nur mit diesem Bit wird das MD18790 $MN_MM_MAX_TRACE_LINK_POINTS ausgewertet.
BIT1 = 1
	Die abgespeicherten Pufferinhalte werden gemäß ihrer Bedeutung analysiert und im Klartext in das File abgespeichert. Dh. man erkennt z.B. die Sollwertübertragung anhand der Textstellen "desVal", Istwert-Übertragung unter den Bezeichnern "actVal"....

BIT1 = 0
	Die Pufferinhalte werden in HEX angezeigt und nicht analysiert.
BIT2 = 1
	Es werden nur Puffer aufgezeichnet, die eine sporadisch auftretende Kommunikationsnachricht (Dynamische Nachricht) zwischen den NCUs enthalten.

Dazu zählen z.B. folgende Ereignisse:
- Maschinendaten setzen
- Linkvariablen setzen
- NCU-übergreifende Alarme
- Achs-Container-Rotation

BIT3 = 1
     Jedes Hinzufügen und Löschen eines CLEARHIMSELF-Alarmes, der über LINK übertragen wird, löst folgende Aktion aus:
     Der interne Empfangsbaum wird vor und nach der Aktion aufgezeichnet und die letzten Werte finden sich
     im Trace wieder
     ACHTUNG: Sehr Sehr zeitaufwendig, bitte nur im Notfall einstellen.
</description>
</parameter>
<parameter number="18794" type="UDWORD" dim="0" display="HEX">
<name>MM_TRACE_VDI_SIGNAL</name>
<brief>Tracespezifikation der Vdi-Signale</brief>
<description>Der NCK versendet und empfängt PLC-Vdi-Signale. Die Trace-Funktion speichert die Signale, die sich geändert haben, in jedem Ipo-Takt in einem  FIFO (FirstIn-FirstOut) Speicher, der die Länge MM_MAX_TRACE_POINTS hat, ab.
Beim Auftreten eines "Trigger-Ereignisses" (zB. Cancel-Alarm-Taste siehe MD22704 $MC_TRACE_STOPTRACE_EVENT und MD22700 $MC_TRACE_STARTTRACE_EVENT) wird der FIFO in ein File geschrieben (Für den 1.Kanal: ncsctr01.mpf).

Das Maschinendatum ist als Bitmaske aufzufassen, je nach dem welches Bit gesetzt wird, werden die entsprechenden Vdi-Signale aufgezeichnet.

Bit 1.. 6 beschreiben, welche axiale Vdi Input-Signale im Trace erfasst werden
(siehe .. TRACE_DATA_FUNCTION)
</description>
</parameter>
<parameter number="18800" type="UDWORD" dim="0" display="HEX">
<name>MM_EXTERN_LANGUAGE</name>
<brief>Aktivierung externer NC-Sprachen</brief>
<description>Zur Abarbeitung von Teileprogrammen anderer Steuerungshersteller muss die entsprechende NC-Sprache aktiviert werden. Es ist nur eine externe NC-Sprache auswählbar. Der jeweils bereitgestellte Befehlsumfang ist den aktuellen Dokumentationen zu entnehmen.

Bit 0 (LSB):
	Abarbeitung von Teileprogrammen ISO_2 oder ISO_3
	Codierung siehe MD10880 $MN_MM_EXTERN_CNC_SYSTEM
</description>
</parameter>
<parameter number="18840" type="DWORD" dim="0">
<name>MM_EPSPARAM_DIMENSION</name>
<brief>Dimension der ePS spezifischen Variablen $EPS_*</brief>
<description>Dimension der ePS spezifischen Systemparameter $EPS_R[i], $EPS_I[i], $EPS_B[i], $EPS_A[i], $EPS_C[i], #EPS_S[i]; i = 0-Wert des Maschinendatums - 1.  Der Wert Null des Maschinendatums zeigt an, dass die Funktionalität nicht zur Verfügung steht.
</description>
</parameter>
<parameter number="18860" type="BOOLEAN" dim="0">
<name>MM_MAINTENANCE_MON</name>
<brief>Aktivierung der Aufzeichnung von Wartungsdaten</brief>
<description>Die Aufzeichnung von Wartungsdaten erfolgt, wenn dieses MD den Wert TRUE hat.
Mit den axialen MD33060 $MA_MAINTENANCE_DATA wird eingestellt, welche Daten aufgezeichnet werden sollen.
Einzelheiten sind der Service-Dokumentationen zu entnehmen.
</description>
</parameter>
<parameter number="18866" type="DWORD" dim="0">
<name>MM_NUM_KIN_TRAFOS</name>
<brief>Maximale Zahl der mit kinematischen Ketten definierbaren Trafos.</brief>
<description>Dieses Maschinendatum gibt die maximale Zahl der Transformationen in NCK an, die mit kinematischen Ketten definiert werden können.
Es gibt gleichzeitig die Zahl der für die Parametrierung dieser Transformationen zur Verfügung stehenden Datensätze an ($NT_...[1] bis $NT_...[$MN_MM_NUM_KIN_TRAFOS]. Der Datensatz mit dem Index 0 ist gesperrt).
Die konventionell, mit Maschinendaten parametrierten kinematischen Transformationen, können unabhängig davon existieren.
</description>
</parameter>
<parameter number="18880" type="DWORD" dim="0">
<name>MM_MAXNUM_KIN_CHAIN_ELEM</name>
<brief>Maximale Anzahl der Elemente kinematischer Ketten</brief>
<description>Maximale Anzahl von Gliedern in kinematischen Ketten. Hat dieses MD den Wert 0 (Standardwert), so sind überhaupt keine kinematischen Ketten möglich.
</description>
</parameter>
<parameter number="18882" type="DWORD" dim="0">
<name>MM_MAXNUM_KIN_SWITCHES</name>
<brief>Maximale Anzahl der Schalter in kinematischen Ketten</brief>
<description>Maximale Anzahl der Schalter in der Kineamtikbeschreibung einer Maschine.
Dieses Maschinendatum wird nur ausgewertet, wenn das Maschinendatum MD18880 $MN_MM_MAXNUM_KIN_CHAIN_ELEM ungleich Null ist.
</description>
</parameter>
<parameter number="18890" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_PROT_AREAS</name>
<brief>Maximale Anzahl der 3D-Schutzbereiche</brief>
<description>Maximale Anzahl Schutzbereiche. Dieses Maschinendatum muss ungleich Null sein, um die Funkton "Kollisionsvermeidung" zu aktivieren.
</description>
</parameter>
<parameter number="18891" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_WPFX_PROT_ELEM</name>
<brief>Max. Anzahl der Schutzbereichselemente für WORKPIECE und FIXTURE</brief>
<description>Maximale Anzahl von Schutzbereichselementen für die automatische Erzeugung von Schutzbereichen mit den Sprachbefehlen WORKPIECE und FIXTURE.
</description>
</parameter>
<parameter number="18892" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_PROT_AREA_ELEM</name>
<brief>Max. Anzahl der Schutzbereichselemente</brief>
<description>Maximale Anzahl von Schutzbereichselementen. Hat dieses MD den Wert 0 (Standardwert), so sind keine Schutzbereiche möglich.
</description>
</parameter>
<parameter number="18893" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_T_PROT_ELEM</name>
<brief>Max. Anzahl der Werkzeugschutzbereichselemente</brief>
<description>Maximale Anzahl von Schutzbereichselementen für die automatische Erzeugung von Werkzeugschutzbereichen.
</description>
</parameter>
<parameter number="18894" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_FACETS_INTERN</name>
<brief>Max. Anzahl der Schutzbereichsfacetten für variable Schutzbereiche</brief>
<description>Maximale Anzahl der Facetten, die für alle intern erzeugten Schutzbereiche zugelassen sind.
Gilt nur, wenn MAXNUM_3D_PROT_AREAS größer ist als Null und Bit 0 in PROT_AREA_TOOL_MASK gesetzt ist.
 Typische Werte wären dann 1000 für Fräsmaschinen mit einem modellierten Werkzeug und 5000 für Drehmaschinen mit diversen Werkzeugtypen auf einem Revolver.
</description>
</parameter>
<parameter number="18895" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_FACETS</name>
<brief>Max. Anzahl der Schutzbereichsfacetten/Primitiven</brief>
<description>Maximale Anzahl der Primitiven und Facetten, die für alle Schutzbereiche zugelassen sind.
Gilt nur wenn MAXNUM_3D_PROT_AREAS größer ist als Null.
</description>
</parameter>
<parameter number="18896" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_COLLISION</name>
<brief>Max. Größe des Speicherplatzes f. Kollisionscheck</brief>
<description>Maximale Größe eines temporären Speicherbereichs (in KB), der bei der Kollisionsüberprüfung zweier Schutzbereiche benötigt wird.
Ist der Inhalt dieses Maschinendatums 0, wird die benötigte Speicherplatzgröße automatisch aus den Maschinendaten MD18892 $MN_MM_MAXNUM_3D_PROT_AREA_ELEM, MD18890 $MN_MM_MAXNUM_3D_PROT_AREAS und MD18895 $MN_MM_MAXNUM_3D_FACETS ermittelt.
Falls die so ermittelte Speicherplatzgröße nicht ausreicht, kann diese über dieses Maschinendatum explizit festgelegt werden.
</description>
</parameter>
<parameter number="18897" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_INTERFACE_IN</name>
<brief>Max. Anzahl Interfacebits zur Voraktivierung von Schutzbereichen</brief>
<description>Gibt an, wieviele Eingangsbits auf dem VDI-Interface zur Voraktivierung von 3D-Schutzbereichen zur Verfügung stehen.
Es beeinflusst die Größe des für jeden NC-Satz benötigten Speicherplatzes.
Hat dieses Maschinendatum den Wert  n, wird pro Satz ein Speicherplatz von ungefähr n * (n + 1) / 16 Byte benötigt.
Dieses Maschinendatum wird nur dann ausgewertet und führt nur dann zur Reservierung von Speicherplatz, wenn das MD18890 $MN_MM_MAXNUM_3D_PROT_AREAS ungleich 0 ist.
</description>
</parameter>
<parameter number="18898" type="DWORD" dim="0">
<name>MM_MAXNUM_3D_COLL_PAIRS</name>
<brief>Maximale Anzahl der 3D-Kollisionspaare</brief>
<description>Maximale Anzahl der 3D-Kollisionspaare.
Dieses Maschinendatum wird nur ausgewertet, wenn das MD18890 $MN_MAX_NUM_3D_PROT_AREAS ungleich Null ist.
Ist dieses Maschinendatum Null und das MD18890 $MN_MAX_NUM_3D_PROT_AREAS ist ungleich Null, wird automatisch Speicherplatz für die maximal mögliche Anzahl verschiedener Kollisionspaare reserviert ($MN_MAX_NUM_3D_PROT_AREAS * ($MN_MAX_NUM_3D_PROT_AREAS - 1) / 2).
Ist der Inhalt dieses Maschinendatums größer als der genannte Maximalwert, wird es intern ohne Fehlermeldung auf diesen Maximalwert begrenzt.
</description>
</parameter>
<parameter number="18899" type="DWORD" dim="0">
<name>PROT_AREA_TOOL_MASK</name>
<brief>Steuert die Erzeugung autom. erzeugter Werkzeugschutzbereiche</brief>
<description>Steuert die Art und Weise, wie bei aktiver Kollisionsüberwachung Werkzeugschutzbereiche automatisch erzeugt werden.
 Falls Bit 0 = 1 ist, muss in MD 18894 $MN_MM_MAXNUM_3D_FACETS_INTERN Speicherplatz reserviert werden.
Das Maschinendatum ist bitcodiert.

Bit 0  (0x1)      Falls keine anderen Daten verfügbar sind, Werkzeugschutzbereich aus den Werkzeugdaten (Werkzeuglänge und Radius) erzeugen.
</description>
</parameter>
<parameter number="18900" type="UDWORD" dim="0" display="HEX">
<name>FPU_ERROR_MODE</name>
<brief>Systemreaktion bei FPU-Rechenfehler</brief>
<description>System-Reaktion auf FPU-Rechenfehler
Bit 0  =  0: (LSB)
	Die Reaktion auf einen FPU-Rechenfehler erfolgt beim Stationswechsel durch Pollen des FPU-Status-Wortes durch den Stations-Controller. (für CPUs ohne Exceptionhandling)

Bit 0   = 1:
	bei einem FPU-Rechenfehler wird unmittelbar in eine Exception verzweigt:
	Die Adresse, an der der Rechenfehler auftrat, kann in der Alarmausgabe exakt lokalisiert werden.
</description>
</parameter>
<parameter number="18901" type="UDWORD" dim="0" display="HEX">
<name>FPU_CTRLWORD_INIT</name>
<brief>Grundinitialisierung des FPU-Control-Words</brief>
<description>Grundinitialisierung des FPU-Control-Words ermöglicht die Änderung der FPU-Arbeitsweise (z.B. Rundungsmodus)
Bedeutung der Bits: siehe Manual der verwendeten FPU
</description>
</parameter>
<parameter number="18902" type="UDWORD" dim="0" display="HEX">
<name>FPU_EXEPTION_MASK</name>
<brief>Exeption-Maske für FPU-Rechenfehler</brief>
<description>Exception-Maske für FPU-Rechenfehler ermöglicht die Auswahl der FPU-Fehler, bei denen eine Exception ausgelöst wird.
Bedeutung der Bits für Intel 486:
Bit 0 (LSB):
	invalid operation
Bit 1:
	denormalized operand: | Operand | &lt; als die kleinste 2er Potenz
Bit 2:
	zero divide
Bit 3:
	overflow: Ergebnis ist größer als die größte darstellbare Zahl
Bit 4:
	underflow: Ergebnis ist kleiner als die kleinste darstellbare Zahl
Bit 5:
	precision: Ergebnis ist nicht exakt darstellbar (z.B. 1/3)

Bedeutung der Bits für Intel 960:
Bit 12:
	integer overflow
Bit 24:
	floating overflow
Bit 25:
	floating underflow
Bit 26:
	invalid operation
Bit 27:
	zero divide
Bit 28:
	floating inexact (precision): Ergebnis ist nicht exakt darstellbar
Bit 29:
	denormalized Operand
</description>
</parameter>
<parameter number="18911" type="UDWORD" dim="0" display="HEX">
<name>MULTICORE_ACTIVATION_MASK</name>
<brief>Funktionsmaske fuer Systeme mit mehreren CPU-Kernen</brief>
<description>Bit 0 = 1:
	Aktivert die Verteilung von PREP-Funktionen (PrepJobs) auf andere CPU-Kerne.
</description>
</parameter>
<parameter number="18930" type="STRING" dim="0">
<name>COREFILE_NAME</name>
<brief>Pfad für Corefile-Erzeugung</brief>
<description>Filename mit Pfadangabe, unter dem beim Steuerungs-Absturz ein Corefile abgelegt wird.
Das Corefile dient zur Problemanalyse durch die NCK-Entwicklung.
Ein Corefile wird angelegt, wenn hier ein gültiger Filename eingetragen ist.
</description>
</parameter>
<parameter number="18950" type="DOUBLE" dim="1">
<name>COLLISION_CONFIG</name>
<brief>Konfiguration der Kollisionsvermeidung.</brief>
<description>Konfigurationsdatum der Kollisionsvermeidung.
</description>
</parameter>
<parameter number="18391" type="STRING" dim="0">
<name>TRACE_PATHNAME</name>
<brief>Pfad für Trace-Erzeugung</brief>
<description>Pfadangabe, unter dem Traces abgelegt wird.
Die Trace-Files dienen zur Problemanalyse durch die NCK-Entwicklung.
</description>
</parameter>
<parameter number="18392" type="BOOLEAN" dim="0">
<name>TRACE_SAVE_OLD_FILE</name>
<brief>Alte Trace-Files bleiben erhalten</brief>
<description>Die alten Traces werden nicht mehr beim Neuanlegen überschrieben, stattdessen wird der Trace-Filename zusätzlich mit einer Versions-Extension versehen.
Vorerst wird diese Funktion nur bei Ablage auf dem Host-Filesystem durchgeführt. (siehe TRACE_PATHNAME)
Die Trace-Files dienen zur Problemanalyse durch die NCK-Entwicklung.
</description>
</parameter>
<parameter number="18960" type="BYTE" dim="0">
<name>POS_DYN_MODE</name>
<brief>Art der Positionierachsdynamik</brief>
<description>Das Maschinendatum bestimmt, welche Beschleunigungen und Rucke bei Positionierachsbewegungen wirken.

Wert 0:
Die Beschleunigung kommt aus dem ersten Feldeintrag in MD32300  $MA_MAX_AX_ACCEL (Wert für DYNNORM).
Bei G75 und aktiver Ruckbegrenzung (SOFT) kommt der Ruck aus dem ersten Feldeintrag in MD32431 $MA_MAX_AX_JERK (Wert für DYNNORM), ohne Ruckbegrenzung (BRISK) ist er unendlich.
Für alle anderen Positionierachsbewegungen gilt:
Falls MD32420 $MA_JOG_AND_POS_JERK_ENABLE wahr ist, kommt der Ruck aus MD32430 $MA_JOG_AND_POS_MAX_JERK, ansonsten ist er unendlich (BRISK-Verhalten).
Wert 1:
Die Beschleunigung kommt aus dem zweiten Feldeintrag in MD32300 $MA_MAX_AX_ACCEL (Wert für DYNPOS).
Der Ruck kommt aus dem zweiten Feldeintrag in MD32431 $MA_MAX_AX_JERK (Wert für DYNPOS).
Für BRISK-Verhalten trägt man hier sehr große Werte ein.
</description>
</parameter>
<parameter number="18965" type="UDWORD" dim="0" display="HEX">
<name>SIM_ENVIRONMENT</name>
<brief>Festlegung der Simulations-Umgebung</brief>
<description>Bitmaske zur Festlegung der Simulations-Umgebung:

BitNr.   Hexadez.   Bedeutung bei gesetztem Bit
         Wert

Bit0:    0x1        Die Simulation läuft auf einem SIMNCK
Bit1:    0x2        Die Simulation läuft unter dem VNCK
Bit2:    0x4        Die Simulation läuft unter einem HMI
</description>
</parameter>
</info>
