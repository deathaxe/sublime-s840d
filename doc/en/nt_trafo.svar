<?xml version="1.0" encoding="windows-1252"?>
<info svar="ntTrafo">
<parameter type="STRING" dim="1">
<name>$NT_NAME</name>
<brief>Name of the transformation data set</brief>
<description>Name of the transformation data set n.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_TRAFO_TYPE</name>
<brief>Transformation type</brief>
<description>The same type of transformation applies as for the transformation data set.
Only certain reserved key words are permitted for the content of this system data.
The valid key words are currently:
- TRAORI           for dynamic orientation transformations
- TRAORI_STAT      for static orientation transformations
- TRAANG_K         for transformations without orientation axes. The geometry axes need not be at right angles to each other (inclined axis transformation).
- TRANSMIT_K       for polar transformations
- TRAFO_OEM        for OEM transformations that are implemented in a CC, but without orientation axes.
- TRAFO_OEM_ORI    for OEM transformations that are implemented in a CC with orientation axes.
- TRACON_K         for chained transformations, the partial transformations are to be defined by $NT_TRACON_CHAIN[i].
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_T_CHAIN_LAST_ELEM</name>
<brief>Last elem. of the kin. chain to the tool</brief>
<description>Name of an element in the kinematic description of the machine. This chain element indicates the last link of a kinematic chain. It defines the point of the transformation at which the tool starts.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_P_CHAIN_LAST_ELEM</name>
<brief>Last element of the kin. chain to the workpiece</brief>
<description>&gt;Name of an element in the kinematic description of the machine. This chain element indicates the last link in a kinematic chain. It defines the workpiece zero.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_T_REF_ELEM</name>
<brief>Reference point for tool length calculation</brief>
<description>This system variable refers to the reference point for the tool length calculation (tool reference point). The tool reference point is the starting point of the described kinematic element.
The tool reference point defines the point in the kinematic chain, where tool wear components can be included, their orientation can be rotated in comparison with basic length components, see the description of the G codes in Group 56 (inclusion of the tool wear).
If the system variable is not empty, it must contain the name of a chain element, which is the core element of the current chain to the tool.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_GEO_AX_NAME</name>
<brief>Names of the linear axes</brief>
<description>This system data refers to a maximum of 3 machine axes. It contains the names of the chain links ($NK_NAME), which define the axes, which must execute the compensation motions, which result from a kinematic transformation. These axes can be both linear axes (e.g. for all orientation transformations) and rotary axes (e.g. the rotary axis for TRANSMIT).
The sequence of these axes defines the assignment of the geometrical axes to the channel axes in accordance with the machine data $MC_AXCONF_GEO_AX_ASSIGN_TAB.
Example: The system data $NT_GEO_AX_NAME[n,1] refers to a chain link which contains the rotary machine axis C1. In the current channel, C1 would be the 7th axis. In the case of an active transformation, this entry has the same meaning as the entry $MC_AXCONF_GEOAX_ASSIGN_TAB[1] = 7 for a deactivated transformation.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_ROT_AX_NAME</name>
<brief>Names of the rotary axes</brief>
<description>This system data refers to a maximum of 3 axes used for setting the orientation. It contains the names of the chain links ($NK_NAME), which define the machine axes (rotary axes), which must execute the orientation motions, which result from a kinematic transformation.
The sequence in which the maximum of three rotary axes are contained in this system data is insignificant for machine kinematics, as this is derived from the structure of the kinematic chains. It does, however, define the sequence which also refers to rotary axes (e.g. the Hirth parameters) and the access to the rotary axes.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_POS</name>
<brief>Position of a manual rotary axis</brief>
<description>This system variable is of significance only if the rotary axis, which refers to ($NT_ROT_AX_NAME), is a manual rotary axis. In this case, the rotary axis position is the result of the total of these system variables and the system variables $NK_A_OFF and $NK_A_OFF_FINE of the affected kinematic chain element.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_HIRTH_OFF</name>
<brief>Offset of the Hirth tooth system</brief>
<description>Offset of the Hirth tooth system.
A Hirth tooth system is activated for a rotary axis if the associated system data $NT_HIRT_INC[n, i] does not contain a value of 0.
At a specified setpoint position PHIset of a rotary axis, the currently set angle results in
PHIact = $NT_HIRTH_OFF[n, i] + k * $NT_HIRTH_INC
whereby k is an integer and is selected in such a way that the difference between PHIact and PHIset is minimized.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_HIRTH_INC</name>
<brief>Increment of the Hirth tooth system</brief>
<description>Increment of the Hirth tooth system.
A Hirth tooth system is activated for a rotary axis if this system data does not contain a value of 0.
At a specified setpoint position PHIset of a rotary axis, the currently set angle results in
PHIact = $NT_HIRTH_OFF[n, i] + k * $NT_HIRTH_INC
whereby k is an integer and is selected in such a way that the difference between PHIact and PHIset is minimized.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_MIN</name>
<brief>Minimum position of a rotary axis</brief>
<description>This system variable is evaluated only if $NT_ROT_AX_MIN[n, i] and $NT_ROT_AX_MAX[n,i] are not set to zero.
In this case, it indicates the minimum permitted position of the rotary axis, which is referred to with $NT_ROT_AX_NAME[n, i].
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_ROT_AX_MAX</name>
<brief>Maximum position of a rotary axis</brief>
<description>Maximum position of a rotary axis.
This system variable is evaluated only if $NT_ROT_AX_MIN[n, i] and $NT_ROT_AX_MAX[n,i] are not set to zero.
In this case, it indicates the maximum permitted position of the rotary axis, which is referred to with $NT_ROT_AX_NAME[n, i].
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_BASE_ORIENT</name>
<brief>Vector of the tool base orientation for orientation transformations</brief>
<description>Indicates the vector of the tool orientation in the general orientation transformation.
The vector becomes effective only if the tool orientation is not indicated when the transformation is called up or read from a programmed tool.
The vector can equal any amount, but this must not be equal to zero.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_BASE_ORIENT_NORMAL</name>
<brief>Norm. vector for orientation transformers with 3 orientation degs. of freedom</brief>
<description>Indicates a vector that is perpendicular to the tool orientation ($NT_BASE_ORIENT) in the case of orientation transformations with 3 degrees of freedom.
The vector becomes effective only if the tool orientation is not indicated when the transformation is called up or read from a programmed tool.
The vector can equal any amount, but this must not be equal to zero.
If $NT_BASE_ORIENT_NORMAL and $NT_BASE_ORIENT are neither orthogonal nor parallel, the two vectors are orthogonalized by modifying the normal vector. The normal vector is now in the plane, which is defined by both vectors and rotated in such a way that the two vectors are positioned orthogonally.
 The two named vectors must not be parallel.
</description>
</parameter>
<parameter type="DOUBLE" dim="1">
<name>$NT_POLE_LIMIT</name>
<brief>End angle toler. with interpol. through pole for 5/6-axis transf.</brief>
<description>This MD designates an end angle tolerance for the fifth axis of the first 5-axis transformation with the following properties:

With the interpolation through the pole point, only the 2nd rotary axis moves, the 2nd rotary axis retains its starting position. If a motion is programmed that does not run exactly through the pole point but is to run near the pole within the area given by MD: TRAFO5_NON_POLE_LIMIT then there is a deviation from the defined path, as the interpolation runs exactly through the pole point. This results in a deviation in the position of the end point of the fourth axis (the polar axis) from the programmed value.

This MD defines the angle by which the polar axis may deviate from the programmed value with 5-axis transformation when switching from the programmed interpolation to the interpolation through the pole point.
An error message (alarm 14112) is output if there is a greater deviation and the interpolation is not executed.

Not relevant:
	If the "5-Axis Transformation" option is not installed.
	Also irrelevant with programming in the machine coordinate system ORIMKS.

Related to:
	MD: TRAFO5_NON_POLE_LIMIT_n
</description>
</parameter>
<parameter type="DOUBLE" dim="1">
<name>$NT_POLE_TOL</name>
<brief>End angle tolerance for pole interpolation</brief>
<description>End angle tolerance for interpolation through the pole for the 1st 5/6-axis transformation.
This MD is evaluated only by the generic 5/6-axis
transformation.

If the end orientation lies within the pole cone and within the tolerance cone specified by means of this MD, the pole axis does not
move and retains its start position. The other
rotary axis, however, moves to the programmed angle.
This results in a deviation of the end orientation
from the programmed orientation.
The maximum active value of this MD is the value of MD TRAFO5_POLE_LIMIT_1, which is used to define the pole cone.
</description>
</parameter>
<parameter type="CHAR" dim="1">
<name>$NT_ROT_OFFSET_FROM_FRAME</name>
<brief>Transfer rotary axis offset from the work offset when selecting the transformer</brief>
<description>For orientation transformations:
If the content of this data is not equal to zero, the programmable offset for orientation axes is automatically accepted from the work offset active for the orientation axes on switch-on of an orientation transformation.
For Transmit:
0:	Axial offset of the rotary axis is not considered.
1:	Axial offset of the rotary axis is considered.
2:	Axial offset of the rotary axis is considered until SZS.
	SZS frames include transformed rotations around the rotary axis.
</description>
</parameter>
<parameter type="BOOL" dim="1">
<name>$NT_IGNORE_TOOL_ORIENT</name>
<brief>Read out tool orientation from $NT_BASE_ORIENT</brief>
<description>Each tool has a defined tool orientation, which is normally used in the case of orientation programming to form the basis of calculating motions or the end points of the orientation axes. If this system data is set, the $NT_BASE_ORIENT / $NT_BASE_ORIENT_NORMAL orientation contained in the system data is used in place of the tool orientation, even in the case of an active tool.
</description>
</parameter>
<parameter type="BOOL" dim="1">
<name>$NT_TRAFO_INCLUDES_TOOL</name>
<brief>Tool handling with active transformation</brief>
<description>This system variable indicates whether the tool for an active transformation is handled internally or externally.
It is only evaluated for certain transformations.
The prerequisite for an evaluation is that the orientation of the tool in relation to the basic coordinate system cannot be modified by the transformation. In the case of standard transformations, this condition is only met for the "inclined axis transformation".
If this system variable is set, the basic coordinate system (BCS) refers to the tool reference point even in the case of an active transformation, in all other cases it refers to the tool center point (TCP).
The operation of protection zones and working area limitations varies accordingly.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_AUX_POS</name>
<brief>Auxiliary position</brief>
<description>This system variable contains a position vector for use by measuring cycles.
It does not have any meaning within NCK.
</description>
</parameter>
<parameter type="INT" dim="2">
<name>$NT_IDENT</name>
<brief>Identifier</brief>
<description>This system variable contain a numerical ID for identifying a transformation data set for use by measuring cycles.
They do not have any meaning within NCK.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_CORR_ELEM_T</name>
<brief>Names of correction elements</brief>
<description>With this system data, a maximum of 4 constant chain elements ($NK_NAME) are referred to in the part chain. These are intended to include offset/correction values (linear offsets), determined in the measuring cycles, for example. (Initially) it is only of significance for orientation transformation.
 In the kinematic chain, an orientation axis must always be located between two of these elements. This means that only for 6-axis transformations, where all 3 orientation axes are defined in the tool chain, all 4 chain elements can also be occupied, while e.g. for 5-axis transformations, this system data may only include a maximum of three entries.
 The complete kinematic chain from the machine zero (reference point of the kinematic chain) up to the workpiece zero is subdivided into a maximum of 4 sections by the orientation axes. In each of these sections, they can only be a maximum of one correction element. The correction element with index n must be located in the nth section (example: $NT_CORR_ELEM_T[k, 1] must refer to a chain element between the first and second orientation axis in the part chain)
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_CORR_ELEM_P</name>
<brief>Names of correction elements</brief>
<description>With this system data, a maximum of 4 constant chain elements ($NK_NAME) are referred to in the part chain. These are intended to include offset/correction values (linear offsets), determined in the measuring cycles, for example. (Initially) it is only of significance for orientation transformation.
 In the kinematic chain, an orientation axis must always be located between two of these elements. This means that only for 6-axis transformations, where all 3 orientation axes are defined in the tool chain, all 4 chain elements can also be occupied, while e.g. for 5-axis transformations, this system data may only include a maximum of three entries.
 The complete kinematic chain from the machine zero (reference point of the kinematic chain) up to the workpiece zero is subdivided into a maximum of 4 sections by the orientation axes. In each of these sections, they can only be a maximum of one correction element. The correction element with index n must be located in the nth section (example: $NT_CORR_ELEM_P[k, 1] must refer to a chain element between the first and second orientation axis in the part chain).
</description>
</parameter>
<parameter type="INT" dim="1">
<name>$NT_CNTRL</name>
<brief>Bit-coded control word</brief>
<description>This data is a bit-coded control word, which can be used to influence the response in specific situations.
The individual bits have the following meanings:
Bit  0:
      Not assigned
Bits  1 -  3 (H2 - H8):
     The orientation axis, to which the bit is assigned (bit 1: first orientation axis, bit 2: second orientation axis, bit 3: third orientation axis) is interpreted as a speed-controlled spindle.
     Presently, only cases are supported, where either the first or third orientation axis is parameterized as a spindle (turning on milling machines or 5-axis milling on machines where the third orientation axis is not operated with position control).
Bits  4 -  6 (H10 - H40):
     The orientation axis, which is assigned to the bit (bit 4: first orientation axis, bit 5: second orientation axis, bit 6: third orientation axis) is Hirth gearing. For the Hirth gearing, only machine data $MA_INDEX_AX_NUMERATOR, $MA_INDEX_AX_DENOMINATOR and $MA_INDEX_AX_OFFSET are evaluated.
     The content of machine data $MA_HIRTH_IS_ACTIVE is not evaluated, i.e. the axis does not have to be parameterized as a real Hirth axis.
     If the axis is parameterized as a modulo axis, machine data $MA_INDEX_AX_NUMERATOR is replaced by machine data $MA_MODULO_RANGE. The distances of the permissible axis positions are then obtained from $MA_MODULO_RANGE / $MA_INDEX_AX_DENOMINATOR.
     Machine data $MA_INDEX_AX_OFFSET is also evaluated for modulo axes.
Bits  7 -  8 (H80 - H100):
     If these bits are set, additional constant chain elements are automatically inserted internally, if required, at the start points of the part chains (bit7: part chain: bit 8: tool chain), which establish a connection from the start of the chain to the machine zero ("Close chain").
Bit 9 - 10 (H200-H400):
     The scope of functions of Transmit and Tracyl transformations are specified more precisely with these bits (with/without central offset axis), see programming guide.
Bit 11 (H800):
     If this bit is set, the direction of rotation of the polar axis is inverted for Transmit and Tracyl. This corresponds to machine data MD24810 $MC_TRACYL_ROT_SIGN_IS_PLUS_n or MD24910 $MC_TRANSMIT_ROT_SIGN_IS_PLUS_n with conventionally parameterized Transmit and Tracyl transformations.
Bits  12 - 15: Reserved for OEM transformations. These bits can have different meanings with the different OEM transformations.
Bit  12     : A standard pole handling, that relates only to the orientation, is activated for an OEM orientation transformation.
Bit 16 - 18 (H10000 - H40000)
     These bits contain a 3 bit number, which may have values between 0 and 5. For Transmit and Tracyl transformations, the number indicates how the channel axes entered in $NT_ROT_AX_NAME[n, 1], $NT_GEO_AX_NAME[n. 0] and $NT_GEO_AX_NAME[n. 2] are assigned to the geometry axes. It thus replaces machine data MD24120 $MC_TRAFO_GEO_AX_ASSIGN_TAB_n[0..2] for conventionally parameterized transformations.
     The assignment is shown in the following table. It is assumed that the geometry axis identifiers are defined in the usual order (X, Y, Z).
     Numerical value	Order of geometry axes
         0           	X	Y	Z
         1           	Z	X	Y
         2             	Y	Z	X
         3               	Z	Y	X
         4               	X	Z	Y
         5           	Y	X	Z
Bit 19 - 20 (H80000-H100000):
     If bit 19 is set, the last kinematic chain element that defines the tool reference point must be a rotary axis or a constant rotation. The direction vector of the rotary axis then defines the Z direction of the tool coordinate system. The rotation around the tool Z axis defined in this way derives from the corresponding definition for the local coordinate system of an axis in kinematic chains, see /R1/. If the system variable $NK_A_OFF of this chain element contains a value unequal to zero, the tool coordinate system is also rotated around the coordinate axis by this angle.
     If bit 20 is also set, the sign of the Z direction of the axis is inverted to determine the tool coordinate system.
Bit 21 - 31:
     Not assigned
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_CLOSE_CHAIN_P</name>
<brief>Point to close the part chain.</brief>
<description>This system data refers to an element of the kinematic chain, whose end point is used as reference point for "closing" the part chain.
 When closing the kinematic chain, at the start point, such an offset element is inserted so that for the zero position of all axes, the specified reference point coincides with the start point of the chain.
If the system data is empty, then the reference point is the end point of the chain.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_CLOSE_CHAIN_T</name>
<brief>Point to close the tool chain.</brief>
<description>This system data refers to an element of the kinematic chain, whose end point is used as reference point for "closing" the part chain.
 When closing the kinematic chain, at the start point, such an offset element is inserted so that for the zero position of all axes, the specified reference point coincides with the start point of the chain.
If the system data is empty, then the reference point is the end point of the chain.
</description>
</parameter>
<parameter type="INT" dim="1">
<name>$NT_TRAFO_INDEX</name>
<brief>Index for transformation call with conventional syntax</brief>
<description>A transformation defined by kinematic chains can also be activated by conventional language commands, such as TRAORI(&lt;n&gt;) or TRANSMIT(&lt;n&gt;), instead of the call TRAFOON(&lt;Name&gt;), if a value not equal to zero is entered in this system data.
The content of the system variable is decimal-coded. The decimal places have the following meanings:
Units digit: Defines the transformation type for which the conventional transformation call is to be diverted to a transformation defined by kinematic chains. The following assignments apply:
             1: TRAORI
             2: TRANSMIT
             3: TRACYL
             4: TRAANG
             5: TRACON
Tens and hundreds digits: Transformer number (double digit)
Thousands and ten thousands digits: Number of the channel in which the conventional transformation call is to be diverted to a transformation defined by kinematic chains. The entry 0 is equivalent to the entry 1. This means that the definition automatically applies to the first channel if the channel number is not explicitly defined.

For a transformation defined by kinematic chains to be called by a conventional language command, the three lowest-value decimal places of this system data must not equal zero. The orientation transformation indicated by the index 1 is also activated for compatibility reasons with the conventional call syntax with TRAORI(0), TRAORI() or TRAORI but not with TRAORI(1). The same applies to the other transformation types (TRANSMIT, TRACYL, TRAANG and TRACON).
Example: The call TRANSMIT(3) in the fifth channel is diverted to a transformation defined by kinematic chains that contains the entry 5032 in the system data $NT_TRAFO_INDEX.
Whether the called transformation is of a type compatible with the transformation type of the original call is not checked.
</description>
</parameter>
<parameter type="INT" dim="1">
<name>$NT_POLE_SIDE_FIX</name>
<brief>Restriction of working area in front of/behind pole with TRANSMIT</brief>
<description>Restriction of working area in front of/behind pole or no restriction, i.e. traversal through the pole.
The assigned values have the following meanings:
0:	No restriction of the working area. Traversal through the pole is allowed.

1:	Working area of linear axis for positions &gt;=0,
	(if tool length compensation parallel to linear axis = 0)

2:	Working area of linear axis for positions &lt;=0,
	(if tool length compensation parallel to linear axis = 0)
</description>
</parameter>
<parameter type="INT" dim="2">
<name>$NT_ROT_AX_CNT</name>
<brief>Number of rotary axes in the part or tool chain</brief>
<description>This system variable can contain the number of relevant rotary axes of a transformation in the part chain (index 0) or tool chain (index 1).
It is used to support the parameterization of a transformation with kinematic chains via the user interface.
If the contents of both components are -1 (initialization value), their content is not evaluated.
If the content of at least one component is not equal to zero, the contents of both components must be the same as the number of relevant rotary axes found by the analysis of the kinematic chains.
Relevant rotary axes in this sense are those rotary axes defined in the $NT_ROT_AX_Name system variable.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_TRACON_CHAIN</name>
<brief>Name of the partial transformation</brief>
<description>This system variable is only relevant for transformation type $NT_TRAFO_TYPE[] = "TRACON_K". Consequently,
the names of the partial transformations are given in the order that the transformation from BCS to MCS is to be evaluated.
</description>
</parameter>
<parameter type="INT" dim="2">
<name>$NT_OEM_PAR_I</name>
<brief>Parameter for OEM transformation</brief>
<description>This integer parameter is evaluated by OEM transformations. The meaning of the individual parameter values depends on the respective OEM transformation.
The details are described in the documentation of the particular OEM transformation.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_OEM_PAR_D</name>
<brief>Parameter for OEM transformation</brief>
<description>This real parameter is evaluated by OEM transformations. The meaning of the individual parameter values depends on the respective OEM transformation.
The details are described in the documentation of the particular OEM transformation.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_OEM_PAR_S</name>
<brief>Parameter for OEM transformation</brief>
<description>This string parameter is evaluated by OEM transformations. The meaning of the individual parameter values depends on the respective OEM transformation.
The details are described in the documentation of the particular OEM transformation.
</description>
</parameter>
<parameter type="INT" dim="1">
<name>$NT_BASE_TOOL_COMP</name>
<brief>Compensation of the tool axes for TRANSMIT or TRACYL with frames.</brief>
<description>Components of the BaseTool can be compensated via the transformation frame with this bit-coded system variable, so that there is no change in the WCS component on transformation selection.

Bit0:   MD24920 $NT_BASE_TOOL[n,0] is compensated via $P_TRAFRAME.
Bit1:   MD24920 $NT_BASE_TOOL[n,1] is compensated via $P_TRAFRAME.
Bit2:   MD24920 $NT_BASE_TOOL[n,2] is compensated via $P_TRAFRAME.

This function is only available if the system frame $P_TRAFRAME has been configured by bit 6 of MD28082 $MC_MM_SYSTEM_FRAME_MASK.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_T_CHAIN_FIRST_ELEM</name>
<brief>First element of the kinematic chain to the tool</brief>
<description>Name of an element in the kinematic description of the machine. The first link of a kinematic chain that leads to the tool is identified by this chain element. If this variable is not defined, the ROOT element of the chain is used for this purpose.
</description>
</parameter>
<parameter type="STRING" dim="1">
<name>$NT_P_CHAIN_FIRST_ELEM</name>
<brief>First element of the kinematic chain to the workpiece</brief>
<description>&gt;Name of an element in the kinematic description of the machine. The first link of a kinematic chain that leads to the workpiece zero is identified by this chain element. If this variable is not defined, the ROOT element of the chain is used for this purpose.
</description>
</parameter>
<parameter type="DOUBLE" dim="2">
<name>$NT_BASE_TOOL</name>
<brief>Vector of base tool for TRANSMIT or TRACYL.</brief>
<description>Indicates a base offset of the tool zero for the active transformation. The offset is specified for the geometry axes valid for the active transformation. The base offset is included with and without selection of the tool length compensation. Programmed length corrections have an additive effect with respect to the base tool.
The index i takes the values 0, 1, 2 for the 1st to 3rd geometry axes.
This system variable is currently only used with TRANSMIT and TRACYL.
</description>
</parameter>
</info>
